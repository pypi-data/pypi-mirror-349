import{h as i}from"./user.BEEfOshe.js";import{o as k,m as f}from"./user.Bg1Nd46A.js";import{i as c,d as u}from"./loader.BQDlK3Tc.js";import{a as p}from"./notifications.NSMm1_5U.js";import{a as b,e as S}from"./environments.zePoF_Ox.js";import{a as z,b as _}from"./deployments._Dzuk3-5.js";import{u as m}from"./index.CwJxcYEt.js";import{a as x}from"./index.BSdFiPHn.js";const R={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,PUBLIC_API_URL:"/api",SITE:void 0,SSR:!1},l=R===void 0?"https://62ff903e9350a1e548e1952e.mockapi.io/api":"/api",D=l==="https://62ff903e9350a1e548e1952e.mockapi.io/api",y=D?"&limit=10":"",s=m(k),g=f({page:0,plans:[],total:0,isReady:!1});async function j(a){return g.set(a),g.get()}const V=async(a,n)=>{c();let e=`${l}/organization/${s.value}/plans?page=${a}${y}`;n&&(e=`${l}/organization/${s.value}/plans/search?pattern=${n}&page=${a}${y}`);try{const t=await fetch(e);if(t.status===403)i(s.value);else if(t.ok){const o=await t.json();let r={page:a,plans:o.items,total:o.count,isReady:!0};j(r)}else throw new Error(t.statusText)}catch(t){const o={title:"Plans couldn't be fetched",message:t.message,type:"error"};p(o)}finally{u()}},$=f({});async function X(a,n){let e=$.get();if(e[a]===void 0){await b(a);const t=m(S);if(t.value)return $.setKey(a,{provider:n,name:t.value.name}),{provider:n,name:t.value.name}}else return e[a]}const v=f({});async function q(a){let n=v.get();if(n[a]===void 0){await z(a);const e=m(_);if(e.value)return v.setKey(a,e.value.name),e.value.name}else return n[a]}const P=x([]);async function L(a){return P.set(a),P.get()}const G=async(a,n,e)=>{c();let t=[],o=`${l}/organization/${s.value}/${n}/${a}/plans`;e&&(o=`${l}/organization/${s.value}/${n}/${a}/plans?pattern=${e}`);try{const r=await fetch(o);if(r.status===403)i(s.value);else if(r.ok){const d=await r.json();for(const T of d){await U(T);const w=m(h);w.value!==null&&t.push(w.value)}L(t)}else throw new Error(r.statusText)}catch(r){const d={title:"Plans couldn't be fetched",message:r.message,type:"error"};p(d)}finally{u()}},E=f({page:0,executions:[],total:0,isReady:!1});async function A(a){return E.set(a),E.get()}const H=async(a,n)=>{c();const e=`${l}/organization/${s.value}/plans/${a}/executions?page=${n}${y}`;try{const t=await fetch(e);if(t.status===403)i(s.value);else if(t.ok){const o=await t.json();let r={page:n,executions:o.items,total:o.count,isReady:!0};A(r)}else throw new Error(t.statusText)}catch(t){const o={title:"Plan executions couldn't be fetched",message:t.message,type:"error"};p(o)}finally{u()}},Q=async(a,n)=>{c();const e=`${l}/organization/${s.value}/plans`;try{const t=await fetch(e,{method:"POST",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(a)});if(t.status===403)i(s.value);else if(t.ok){const o=await t.json();if(n&&n===!0)return o.id;window.location.assign(`/plans/view/?id=${o.id}`)}else throw new Error(t.statusText)}catch(t){const o={title:"Plan couldn't be created",message:t.message,type:"error"};p(o)}finally{u()}},W=async a=>{c();const n=`${l}/organization/${s.value}/plans/${a}`;try{const e=await fetch(n,{method:"DELETE"});if(e.status===403)i(s.value);else if(!e.ok)throw new Error(e.statusText)}catch(e){const t={title:"Plan couldn't be deleted",message:e.message,type:"error"};p(t)}finally{u()}},Y=async a=>{c();const n=`${l}/organization/${s.value}/plans/${a}/suspend`;try{const e=await fetch(n,{method:"POST"});if(e.status===403)i(s.value);else if(!e.ok)throw new Error(e.statusText)}catch(e){const t={title:"Plan schedule couldn't be paused",message:e.message,type:"error"};p(t)}finally{u()}},Z=async a=>{c();const n=`${l}/organization/${s.value}/plans/${a}/resume`;try{const e=await fetch(n,{method:"POST"});if(e.status===403)i(s.value);else if(!e.ok)throw new Error(e.statusText)}catch(e){const t={title:"Plan schedule couldn't be paused",message:e.message,type:"error"};p(t)}finally{u()}},ee=async a=>{c();const n=`${l}/organization/${s.value}/plans/${a}/run`;try{const e=await fetch(n,{method:"POST"});if(e.status===403)i(s.value);else if(!e.ok)throw new Error(e.statusText)}catch(e){const t={title:"Plan couldn't be run",message:e.message,type:"error"};p(t)}finally{u()}},h=x(null);async function O(a){return h.set(a),h.get()}const U=async a=>{c();const n=`${l}/organization/${s.value}/plans/${a}`;try{const e=await fetch(n);if(e.status===403)i(s.value);else if(e.ok){const t=await e.json();O(t)}else throw new Error(e.statusText)}catch(e){const t={title:"Plan couldn't be fetched",message:e.message,type:"error"};p(t)}finally{u()}};export{q as a,G as b,Q as c,W as d,E as e,V as f,X as g,H as h,U as i,h as j,ee as k,Y as l,Z as m,g as p,P as r};
