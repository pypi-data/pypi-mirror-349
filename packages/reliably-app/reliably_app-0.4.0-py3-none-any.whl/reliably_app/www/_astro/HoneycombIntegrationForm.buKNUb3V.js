import{v,w as W}from"./runtime-dom.esm-bundler.DChKj6X8.js";import{c as B}from"./integrations.CUprebZ9.js";import{v as L}from"./strings.Fm4VVZpd.js";import{_ as N}from"./_plugin-vue_export-helper.DlAUqK2U.js";import{d as R,c as m,a as r,b as t,w as _,e as f,n as y,r as n,g,h as c}from"./runtime-core.esm-bundler.Y6RLDZTT.js";import"./user.BEEfOshe.js";import"./user.Bg1Nd46A.js";import"./index.BSdFiPHn.js";import"./loader.BQDlK3Tc.js";import"./notifications.NSMm1_5U.js";import"./index.CwJxcYEt.js";import"./dayjs.min.xlbmdZiw.js";import"./duration.BGVtNWJ9.js";const q=R({__name:"HoneycombIntegrationForm",setup(E,{expose:a}){a();const i=n(""),e=n(!0);function b(){i.value===""?e.value=!1:e.value=!0}const l=n(""),o=n(!0);function H(){l.value===""?o.value=!1:o.value=!0}const s=n(""),d=n(!0),u=n("");function V(){s.value===""?(d.value=!1,u.value="You must provide your Honeycomb API Key."):L(s.value)?(d.value=!0,u.value=""):(d.value=!1,u.value="Honeycomb API key must be provided in the form <code>x-honeycomb-team=your-api-key</code>")}const p=n(!1),h=g(()=>p.value||!e.value||i.value===""||!o.value||l.value===""||!d.value||s.value==="");async function P(){if(!h.value){p.value=!0;const O={name:i.value,provider:"opentelemetry",vendor:"honeycomb",environment:{name:"otel",used_for:"integration",envvars:[{var_name:"OTEL_VENDOR",value:"honeycomb"},{var_name:"OTEL_EXPORTER_OTLP_TRACES_ENDPOINT",value:l.value}],secrets:[{key:"otel-headers",var_name:"OTEL_EXPORTER_OTLP_TRACES_HEADERS",value:s.value}]}};await B(O),p.value=!1}}const T={name:i,isNameValid:e,onNameBlur:b,endpoint:l,isEndpointValid:o,onEndpointBlur:H,headers:s,isHeadersValid:d,invalidHeadersMessage:u,onHeadersBlur:V,isCreating:p,isSubmitDisabled:h,create:P};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}}),x={class:"integrationForm form"},k={key:0,class:"inputWrapper__help inputWrapper__help--error"},S={key:0,class:"inputWrapper__help inputWrapper__help--error"},C=["innerHTML"],A={class:"inputWrapper"},I=["disabled"];function D(E,a,i,e,b,l){return c(),m("form",x,[r("div",{class:y(["inputWrapper",{"inputWrapper--error":!e.isNameValid}])},[a[3]||(a[3]=r("label",{for:"name"},[t("Name "),r("span",{class:"required"},"Required")],-1)),_(r("input",{type:"text",name:"name",id:"name","onUpdate:modelValue":a[0]||(a[0]=o=>e.name=o),onBlur:e.onNameBlur,placeholder:"Send traces to Honeycomb",required:""},null,544),[[v,e.name]]),e.isNameValid?f("",!0):(c(),m("p",k," A name for your integration is required. "))],2),r("div",{class:y(["inputWrapper",{"inputWrapper--error":!e.isEndpointValid}])},[a[5]||(a[5]=r("label",{for:"endpoint"},[t(" Traces Endpoint "),r("span",{class:"required"},"Required")],-1)),_(r("input",{type:"text",name:"endpoint",id:"endpoint","onUpdate:modelValue":a[1]||(a[1]=o=>e.endpoint=o),onBlur:e.onEndpointBlur,placeholder:"https://api.honeycomb.io/...",required:""},null,544),[[v,e.endpoint]]),e.isEndpointValid?f("",!0):(c(),m("p",S,a[4]||(a[4]=[t(" The Honeycomb OTLP endpoint is required."),r("br",null,null,-1),t(" For OTLP/gRPC: "),r("code",null,"api.honeycomb.io:443",-1),r("br",null,null,-1),t(" For OTLP/HTTPS: "),r("code",null,"https://api.honeycomb.io/",-1)])))],2),r("div",{class:y(["inputWrapper",{"inputWrapper--error":!e.isHeadersValid}])},[a[6]||(a[6]=r("label",{for:"headers"},[t(" API Key "),r("span",{class:"required"},"(as OTLP Headers) Required")],-1)),_(r("input",{type:"text",name:"headers",id:"headers","onUpdate:modelValue":a[2]||(a[2]=o=>e.headers=o),onBlur:e.onHeadersBlur,placeholder:"x-honeycomb-team=your-api-key",autocomplete:"off",required:""},null,544),[[v,e.headers]]),e.isHeadersValid?f("",!0):(c(),m("p",{key:0,class:"inputWrapper__help inputWrapper__help--error",innerHTML:e.invalidHeadersMessage},null,8,C))],2),r("div",A,[r("button",{onClick:W(e.create,["prevent"]),disabled:e.isSubmitDisabled,class:"button button--primary"}," Create ",8,I)])])}const $=N(q,[["render",D]]);export{$ as default};
