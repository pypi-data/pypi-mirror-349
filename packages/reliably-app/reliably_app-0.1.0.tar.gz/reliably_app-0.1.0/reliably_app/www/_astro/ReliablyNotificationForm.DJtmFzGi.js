import{v as s,a as K,c as O,w as D}from"./runtime-dom.esm-bundler.DChKj6X8.js";import{c as M}from"./integrations.Be-n79W6.js";import{g}from"./strings.Fm4VVZpd.js";import{_ as j}from"./_plugin-vue_export-helper.DlAUqK2U.js";import{d as z,c as u,a as o,b as i,w as a,e as y,n as J,r,g as Q,h as p}from"./runtime-core.esm-bundler.Y6RLDZTT.js";import"./user.DMXaCJik.js";import"./user.TOXT8CXA.js";import"./index.BSdFiPHn.js";import"./loader.BQDlK3Tc.js";import"./notifications.NSMm1_5U.js";import"./index.CwJxcYEt.js";import"./dayjs.min.xlbmdZiw.js";import"./duration.BGVtNWJ9.js";const X=z({__name:"ReliablyNotificationForm",setup(w,{expose:e}){e();const d=r(!1),l=r(!1),v=r(!1),m=r(""),n=r(""),b=r(!0);function H(){n.value===""?b.value=!1:b.value=!0}const I=r(""),f=r(!1);function q(){I.value===""?f.value=!1:f.value=!0}const h=r(""),k=r(!1);function F(){h.value===""?k.value=!1:k.value=!0}const _=r(""),U=r(!1);function S(){_.value===""?U.value=!1:U.value=!0}const W=r(""),T=r(!1);function G(){W.value===""?T.value=!1:T.value=!0}const N=r(""),B=r(!1);function c(){N.value===""?B.value=!1:B.value=!0}const A=r(""),R=r(!0),E=r(!1),C=Q(()=>E.value||!b.value||n.value===""||!m.value||!d.value&&!l.value&&!v.value||d.value&&!f.value||l.value&&!k.value&&!f.value||v.value&&!T.value&&!B.value);async function Y(){if(!C.value){let t=[],L=[],x=[];m.value&&x.push(m.value),t.push({var_name:"RELIABLY_NOTIFICATION_EVENT_TYPES",value:x.join(",")}),d.value&&(t.push({var_name:"RELIABLY_NOTIFICATION_USE_EMAIL",value:"1"}),t.push({var_name:"RELIABLY_NOTIFICATION_TO_ADDRESSES",value:I.value})),l.value&&(t.push({var_name:"RELIABLY_NOTIFICATION_USE_WEBHOOK",value:"1"}),t.push({var_name:"RELIABLY_NOTIFICATION_WEBHOOK_URL",value:h.value}),L.push({var_name:"RELIABLY_NOTIFICATION_WEBHOOK_BEARER_TOKEN",value:_.value,key:g(32)})),v.value&&(t.push({var_name:"RELIABLY_NOTIFICATION_USE_GITHUB",value:"1"}),t.push({var_name:"RELIABLY_NOTIFICATION_GITHUB_URL",value:W.value}),A.value&&t.push({var_name:"RELIABLY_NOTIFICATION_GITHUB_LABELS",value:A.value}),R.value&&t.push({var_name:"RELIABLY_NOTIFICATION_GITHUB_ON_FAILURE_EVENTS",value:"1"}),L.push({var_name:"RELIABLY_NOTIFICATION_GITHUB_TOKEN",value:N.value,key:g(32)})),E.value=!0;const P={name:n.value,provider:"notification",vendor:"reliably",environment:{name:n.value,used_for:"notification",envvars:t,secrets:L}};await M(P),E.value=!1}}const V={useEmailChannel:d,useWebhookChannel:l,useGHChannel:v,notifyOnEvent:m,name:n,isNameValid:b,onNameBlur:H,emailToAddresses:I,isEmailToAddressesValid:f,onEmailToAddressesBlur:q,webhookUrl:h,isWebhookUrlValid:k,onWebhookUrlBlur:F,webhookBearerToken:_,isWebhookBearerTokenValid:U,onWebhookBearerTokenBlur:S,repositoryUrl:W,isRepositoryUrlValid:T,onRepositoryUrlBlur:G,repositoryBearerToken:N,isRepositoryBearerTokenValid:B,onRepositoryBearerTokenBlur:c,repositoryLabels:A,repositoryOnFailedEventOnly:R,isCreating:E,isSubmitDisabled:C,create:Y};return Object.defineProperty(V,"__isScriptSetup",{enumerable:!1,value:!0}),V}}),Z={class:"integrationForm form"},$={key:0,class:"inputWrapper__help inputWrapper__help--error"},ee={class:"inputWrapper"},oe={key:0,class:"inputWrapper__help"},le={class:"channelSelector"},ne={key:0},re={class:"inputWrapper"},ae={key:1},te={class:"inputWrapper"},ie={class:"inputWrapper"},se={key:2},ue={class:"inputWrapper"},pe={class:"inputWrapper"},de={class:"inputWrapper"},ve={class:"inputWrapper inputWrapper--tick"},me={class:"inputWrapper"},fe=["disabled"];function ye(w,e,d,l,v,m){return p(),u("form",Z,[o("div",{class:J(["inputWrapper",{"inputWrapper--error":!l.isNameValid}])},[e[12]||(e[12]=o("label",{for:"name"},[i("Name "),o("span",{class:"required"},"Required")],-1)),a(o("input",{type:"text",name:"name",id:"name","onUpdate:modelValue":e[0]||(e[0]=n=>l.name=n),onBlur:l.onNameBlur,required:""},null,544),[[s,l.name]]),l.isNameValid?y("",!0):(p(),u("p",$," A name for your integration is required. "))],2),o("fieldset",null,[e[15]||(e[15]=o("legend",null,"Triggering Events",-1)),o("div",ee,[e[14]||(e[14]=o("label",{for:"model"},[i(" Get Notified On "),o("span",{class:"required"},"Required")],-1)),a(o("select",{type:"checkbox","onUpdate:modelValue":e[1]||(e[1]=n=>l.notifyOnEvent=n),name:"notifyOnEvent",id:"notifyOnEvent"},e[13]||(e[13]=[o("option",{value:""},"Select Event Type",-1),o("option",{value:"plan-phases"},"Plan Phases",-1)]),512),[[K,l.notifyOnEvent]])]),l.notifyOnEvent=="plan-phases"?(p(),u("p",oe," Get notified about plan start, finish, fail or state. ")):y("",!0)]),o("fieldset",null,[e[19]||(e[19]=o("legend",null,"Channels",-1)),o("div",le,[o("div",null,[a(o("input",{type:"checkbox","onUpdate:modelValue":e[2]||(e[2]=n=>l.useEmailChannel=n),name:"channelEmail",id:"channelEmail"},null,512),[[O,l.useEmailChannel]]),e[16]||(e[16]=o("label",{for:"channelEmail",title:"Email"},[o("span",{class:"screen-reader-text"},"Email"),i(" Email ")],-1))]),o("div",null,[a(o("input",{type:"checkbox","onUpdate:modelValue":e[3]||(e[3]=n=>l.useWebhookChannel=n),name:"channelWebhook",id:"channelWebhook"},null,512),[[O,l.useWebhookChannel]]),e[17]||(e[17]=o("label",{for:"channelWebhook",title:"WebHook"},[o("span",{class:"screen-reader-text"},"WebHook"),i(" WebHook ")],-1))]),o("div",null,[a(o("input",{type:"checkbox","onUpdate:modelValue":e[4]||(e[4]=n=>l.useGHChannel=n),name:"channelGitHub",id:"channelGitHub"},null,512),[[O,l.useGHChannel]]),e[18]||(e[18]=o("label",{for:"channelGitHub",title:"GitHub"},[o("span",{class:"screen-reader-text"},"GitHub"),i(" GitHub ")],-1))])])]),l.useEmailChannel?(p(),u("fieldset",ne,[e[22]||(e[22]=o("legend",null,"Email Settings",-1)),o("div",re,[e[20]||(e[20]=o("label",{for:"emailToAddresses"},[i(" To "),o("span",{class:"required"},"Required")],-1)),a(o("input",{type:"text",name:"emailToAddresses",id:"emailToAddresses","onUpdate:modelValue":e[5]||(e[5]=n=>l.emailToAddresses=n),autocomplete:"off",placeholder:"jane@example.com,peter@example.com",onBlur:l.onEmailToAddressesBlur,required:""},null,544),[[s,l.emailToAddresses]]),e[21]||(e[21]=o("p",{class:"inputWrapper__help"}," Reliably will send an email to each individual recipient with an appropriate message for each event type and a link to the plan. ",-1))])])):y("",!0),l.useWebhookChannel?(p(),u("fieldset",ae,[e[27]||(e[27]=o("legend",null,"WebHook Settings",-1)),o("div",te,[e[23]||(e[23]=o("label",{for:"webhookUrl"},[i(" URL "),o("span",{class:"required"},"Required")],-1)),a(o("input",{type:"text",name:"webhookUrl",id:"webhookUrl","onUpdate:modelValue":e[6]||(e[6]=n=>l.webhookUrl=n),autocomplete:"off",onBlur:l.onWebhookUrlBlur,required:""},null,544),[[s,l.webhookUrl]]),e[24]||(e[24]=o("p",{class:"inputWrapper__help"}," Reliably will make a POST request to that endpoint with the event's payload as a JSON encoded string. ",-1))]),o("div",ie,[e[25]||(e[25]=o("label",{for:"webhookBearerToken"}," Bearer Token ",-1)),a(o("input",{type:"text",name:"webhookBearerToken",id:"webhookBearerToken","onUpdate:modelValue":e[7]||(e[7]=n=>l.webhookBearerToken=n),autocomplete:"off",onBlur:l.onWebhookBearerTokenBlur},null,544),[[s,l.webhookBearerToken]]),e[26]||(e[26]=o("p",{class:"inputWrapper__help"}," You can provide an authentication header value in the form of a bearer token if your endpoint requires it. ",-1))])])):y("",!0),l.useGHChannel?(p(),u("fieldset",se,[e[36]||(e[36]=o("legend",null,"GitHub Settings",-1)),o("div",ue,[e[28]||(e[28]=o("label",{for:"repositoryUrl"},[i(" Repository "),o("span",{class:"required"},"Required")],-1)),a(o("input",{type:"text",name:"repositoryUrl",id:"repositoryUrl","onUpdate:modelValue":e[8]||(e[8]=n=>l.repositoryUrl=n),autocomplete:"off",onBlur:l.onRepositoryUrlBlur,required:""},null,544),[[s,l.repositoryUrl]]),e[29]||(e[29]=o("p",{class:"inputWrapper__help"}," Reliably will create an issue on the given repository. ",-1))]),o("div",pe,[e[30]||(e[30]=o("label",{for:"repositoryBearerToken"},[i(" Token "),o("span",{class:"required"},"Required")],-1)),a(o("input",{type:"text",name:"repositoryBearerToken",id:"repositoryBearerToken","onUpdate:modelValue":e[9]||(e[9]=n=>l.repositoryBearerToken=n),autocomplete:"off",onBlur:l.onRepositoryBearerTokenBlur,required:""},null,544),[[s,l.repositoryBearerToken]]),e[31]||(e[31]=o("p",{class:"inputWrapper__help"}," Provide a token that has the permissions to create and update issues on the repository. ",-1))]),o("div",de,[e[32]||(e[32]=o("label",{for:"repositoryLabels"}," Labels ",-1)),a(o("input",{type:"text",name:"repositoryLabels",id:"repositoryLabels","onUpdate:modelValue":e[10]||(e[10]=n=>l.repositoryLabels=n),autocomplete:"off",placeholder:"reliability, availability",required:""},null,512),[[s,l.repositoryLabels]]),e[33]||(e[33]=o("p",{class:"inputWrapper__help"}," Provide a comma-separated list of tags to set on the issue when it is created. ",-1))]),o("div",ve,[o("div",null,[a(o("input",{type:"checkbox","onUpdate:modelValue":e[11]||(e[11]=n=>l.repositoryOnFailedEventOnly=n),name:"repositoryOnFailedEventOnly",id:"repositoryOnFailedEventOnly",checked:""},null,512),[[O,l.repositoryOnFailedEventOnly]]),e[34]||(e[34]=o("label",{for:"repositoryOnFailedEventOnly"},"On Failures Only",-1))]),e[35]||(e[35]=o("p",{class:"inputWrapper__help"}," Check this to prevent creation of issues about plans starting as that could quickly pollute the repository. ",-1))])])):y("",!0),o("div",me,[o("button",{onClick:D(l.create,["prevent"]),disabled:l.isSubmitDisabled,class:"button button--primary"}," Create ",8,fe)])])}const Le=j(X,[["render",ye]]);export{Le as default};
