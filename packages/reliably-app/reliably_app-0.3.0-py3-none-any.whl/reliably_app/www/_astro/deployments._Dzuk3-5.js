import{h as r}from"./user.BEEfOshe.js";import{o as f,m as h}from"./user.Bg1Nd46A.js";import{i as c,d as p}from"./loader.BQDlK3Tc.js";import{a as l}from"./notifications.NSMm1_5U.js";import{u as w}from"./index.CwJxcYEt.js";import{a as g}from"./index.BSdFiPHn.js";const D={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,PUBLIC_API_URL:"/api",SITE:void 0,SSR:!1},i=D===void 0?"https://62ff903e9350a1e548e1952e.mockapi.io/api":"/api",$=i==="https://62ff903e9350a1e548e1952e.mockapi.io/api",m=$?"&limit=10":"",a=w(f),y=h({page:0,deployments:[],total:0,isReady:!1});async function b(s){return y.set(s),y.get()}const _=async(s,o)=>{c();let t=`${i}/organization/${a.value}/deployments?page=${s}${m}`;o&&(t=`${i}/organization/${a.value}/deployments/search?pattern=${o}&page=${s}${m}`);try{const e=await fetch(t);if(e.status===403)r(a.value);else{const n=await e.json();let d={page:s,deployments:n.items,total:n.count,isReady:!0};b(d)}}catch(e){const n={title:"Deployments couldn't be fetched",message:e.message,type:"error"};l(n)}finally{p()}},k=async s=>{c();const o=`${i}/organization/${a.value}/deployments`;try{const t=await fetch(o,{method:"POST",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(s)});if(t.status===403)r(a.value);else if(t.status===409){let e=await t.json();l({title:"Deployment couldn't be created",message:"A deployment with the same name already exists",type:"error"})}else if(t.ok){const e=await t.json();window.location.assign(`/deployments/view/?id=${e.id}`)}else throw new Error(t.statusText)}catch(t){const e={title:"Deployment couldn't be created",message:t.message,type:"error"};l(e)}finally{p()}},z=async(s,o)=>{c();const t=`${i}/organization/${a.value}/deployments/${s}`;try{const e=await fetch(t,{method:"PUT",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(o)});if(e.status===403)r(a.value);else if(e.status===409){let n=await e.json();l({title:"Deployment couldn't be edited",message:"A deployment with the same name already exists",type:"error"})}else if(!e.ok)throw new Error(e.statusText)}catch(e){const n={title:"Deployment couldn't be created",message:e.message,type:"error"};l(n)}finally{p()}},P=async(s,o)=>{c();const t=`${i}/organization/${a.value}/deployments/${s}/clone`;try{const e=await fetch(t,{method:"POST",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(o)});if(e.status===403)r(a.value);else if(e.status===409){let n=await e.json();l({title:"Deployment couldn't be cloned",message:"A deployment with the same name already exists",type:"error"})}else if(e.ok){const n=await e.json();window.location.assign(`/deployments/view/?id=${n.id}`)}else throw new Error(e.statusText)}catch(e){const n={title:"Deployment couldn't be cloned",message:e.message,type:"error"};l(n)}finally{p()}},u=g(null);async function v(s){return u.set(s),u.get()}const O=async s=>{c();const o=`${i}/organization/${a.value}/deployments/${s}`;try{const t=await fetch(o);if(t.status===403)r(a.value);else if(t.ok){const e=await t.json();v(e)}else throw new Error(t.statusText)}catch(t){const e={title:"Deployment couldn't be fetched",message:t.message,type:"error"};l(e)}p()},R=async s=>{c();let o=!0;const t=`${i}/organization/${a.value}/deployments/${s}`;try{const e=await fetch(t,{method:"DELETE"});if(e.status===403)r(a.value);else if(e.status===400){let n=await e.json();l({title:"Deployment couldn't be deleted",message:"This deployment is used by a plan. You must delete the plan before proceeding.",type:"error"}),o=!1}else if(!e.ok)throw new Error(e.statusText)}catch(e){const n={title:"Deployment couldn't be deleted",message:e.message,type:"error"};l(n),o=!1}finally{return p(),o}};export{O as a,u as b,k as c,R as d,y as e,_ as f,P as g,z as h};
