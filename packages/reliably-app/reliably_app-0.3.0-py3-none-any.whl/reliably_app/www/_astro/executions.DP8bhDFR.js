import{h as c}from"./user.BEEfOshe.js";import{o as k,m as S}from"./user.Bg1Nd46A.js";import{i as u,d as p}from"./loader.BQDlK3Tc.js";import{a as i}from"./notifications.NSMm1_5U.js";import{u as T}from"./index.CwJxcYEt.js";import{a as $}from"./index.BSdFiPHn.js";const _={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,PUBLIC_API_URL:"/api",SITE:void 0,SSR:!1},r=T(k),l=_===void 0?"https://62ff903e9350a1e548e1952e.mockapi.io/api":"/api",R=l==="https://62ff903e9350a1e548e1952e.mockapi.io/api",g=R?"&limit=10":"",E=S({page:0,executions:[],total:0,isReady:!1});async function j(s){return E.set(s),E.get()}const L=async(s,n)=>{u();let a=`${l}/organization/${r.value}/executions?page=${s}${g}`;n&&(a=`${l}/organization/${r.value}/experiments/${n}/executions?page=${s}${g}`);try{const e=await fetch(a);if(e.status===403)c(r.value);else if(e.ok){const t=await e.json();let o={page:s,executions:t.items,total:t.count,isReady:!0};j(o)}else throw new Error(e.statusText)}catch(e){const t={title:"Executions couldn't be fetched",message:e.message,type:"error"};i(t)}finally{p()}},d=$(null);async function m(s){return d.set(s),d.get()}const O=async(s,n)=>{u();const a=`${l}/organization/${r.value}/experiments/${n}/executions/${s}`;try{const e=await fetch(a);if(e.status===403)c(r.value);else if(e.ok){const t=await e.json();m(t)}else throw new Error(e.statusText)}catch(e){const t={title:"Execution couldn't be fetched",message:e.message,type:"error"};i(t)}finally{p()}},D=async(s,n)=>{u();const a=`${l}/organization/${r.value}/experiments/${n}/executions/${s}`;try{const e=await fetch(a,{method:"DELETE"});if(e.status===403)c(r.value);else if(!e.ok)throw new Error(e.statusText)}catch(e){const t={title:"Execution couldn't be deleted",message:e.message,type:"error"};i(t)}finally{p()}},N=async(s,n,a)=>{u();const e=`${l}/organization/${r.value}/experiments/${n}/executions/${s}/state`;try{const t=await fetch(e,{method:"PUT",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify({current:"terminate",skip_rollbacks:a})});if(t.status===403)c(r.value);else if(t.ok){let o=d.get();o.user_state.current="terminated",m(o),i({title:"Execution successfully stopped",message:`Termination can take a few seconds to proceed.${a?" Rollbacks will not be played.":""}`,type:"success"})}else throw new Error(t.statusText)}catch(t){const o={title:"Execution couldn't be stopped",message:t.message,type:"error"};i(o)}finally{p()}},J=async(s,n)=>{u();const a=`${l}/organization/${r.value}/experiments/${n}/executions/${s}/state`;try{const e=await fetch(a,{method:"PUT",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify({current:"pause",duration:300})});if(e.status===403)c(r.value);else if(e.ok){let t=d.get();t.user_state.current="pause",m(t),i({title:"Execution successfully paused",message:"It will be paused after the current activity is over.",type:"success"})}else throw new Error(e.statusText)}catch(e){const t={title:"Execution couldn't be paused",message:e.message,type:"error"};i(t)}finally{p()}},M=async(s,n)=>{u();const a=`${l}/organization/${r.value}/experiments/${n}/executions/${s}/state`;try{const e=await fetch(a,{method:"PUT",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify({current:"resume"})});if(e.status===403)c(r.value);else if(e.ok){let t=d.get();t.user_state.current="running",m(t),i({title:"Execution successfully resumed",message:"The next queued activity will start in a few seconds.",type:"success"})}else throw new Error(e.statusText)}catch(e){const t={title:"Execution couldn't be resumed",message:e.message,type:"error"};i(t)}finally{p()}},b=$({experimentId:null,lastExecution:null,lastStatuses:[]});async function w(s){return b.set(s),b.get()}const B=async s=>{u();try{const t=`${l}/organization/${r.value}/experiments/${s}/executions?limit=5`,o=await fetch(t);if(o.status===403)c(r.value);else if(o.ok){const f=await o.json();var n=[],a=Math.min(5,f.items.length);if(a>0){for(var e=0;e<a;e++){let x=f.items[e].result,v=x.deviated,h=x.status;v?n.push("deviated"):["completed","interrupted","aborted"].includes(h)?n.push(h):n.push("")}let y={experimentId:s,lastExecution:f.items[0].created_date,lastStatuses:n};w(y)}else w({experimentId:s,lastExecution:null,lastStatuses:[]})}else throw new Error(o.statusText)}catch(t){const o={title:"Experiment Status couldn't be retrieved",message:t.message,type:"error"};i(o)}finally{p()}};function F(s){const n=s.user_state;return n===null?{label:"Not run yet",type:"unknown"}:n.current==="finished"?n.status==="completed"?n.deviated?{label:"Deviated",type:"ko"}:s.result.steady_states.before&&s.result.steady_states.before.steady_state_met===!1?{label:"Initial system condition not met",type:"ko"}:s.result.rollbacks.length?s.result.rollbacks.every(e=>e.status==="succeeded")?{label:"Completed",type:"ok"}:{label:"Rollbacks failed",type:"ko"}:{label:"Completed",type:"ok"}:n.status?n.status==="failed"?{label:"Failed",type:"ko"}:{label:n.status,type:"warning"}:{label:"Unknown",type:"unknown"}:n.current==="pause"?{label:"pausing...",type:"warning"}:n.current==="terminate"?{label:"stopping...",type:"warning"}:{label:n.current,type:null}}export{b as a,B as b,d as c,D as d,E as e,L as f,F as g,O as h,J as p,M as r,N as s};
