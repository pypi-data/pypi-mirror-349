import{v as c,w as q}from"./runtime-dom.esm-bundler.DChKj6X8.js";import{c as B}from"./integrations.CUprebZ9.js";import{_ as D}from"./_plugin-vue_export-helper.DlAUqK2U.js";import{d as x,c as u,a as n,b as d,w as v,e as _,n as f,r as t,g,h as m}from"./runtime-core.esm-bundler.Y6RLDZTT.js";import"./user.BEEfOshe.js";import"./user.Bg1Nd46A.js";import"./index.BSdFiPHn.js";import"./loader.BQDlK3Tc.js";import"./notifications.NSMm1_5U.js";import"./index.CwJxcYEt.js";const C=x({__name:"DynatraceIntegrationForm",setup(b,{expose:r}){r();const o=t(""),e=t(!0);function k(){o.value===""?e.value=!1:e.value=!0}const i=t(""),a=t(!0);function E(){i.value===""?a.value=!1:a.value=!0}const l=t(""),s=t(!0);function V(){l.value===""?s.value=!1:s.value=!0}const p=t(!1),y=g(()=>p.value||!e.value||o.value===""||!a.value||i.value===""||!s.value||l.value==="");async function N(){if(!y.value){p.value=!0;const W={name:o.value,provider:"opentelemetry",vendor:"dynatrace",environment:{name:"otel",used_for:"integration",envvars:[{var_name:"OTEL_VENDOR",value:"dynatrace"},{var_name:"OTEL_EXPORTER_OTLP_TRACES_ENDPOINT",value:i.value}],secrets:[{key:"dynatrace-token",var_name:"DYNATRACE_TOKEN",value:l.value}]}};await B(W),p.value=!1}}const T={name:o,isNameValid:e,onNameBlur:k,endpoint:i,isEndpointValid:a,onEndpointBlur:E,token:l,isTokenValid:s,onTokenBlur:V,isCreating:p,isSubmitDisabled:y,create:N};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}}),O={class:"integrationForm form"},R={key:0,class:"inputWrapper__help inputWrapper__help--error"},h={key:0,class:"inputWrapper__help inputWrapper__help--error"},A={key:0,class:"inputWrapper__help inputWrapper__help--error"},I={class:"inputWrapper"},P=["disabled"];function S(b,r,o,e,k,i){return m(),u("form",O,[n("div",{class:f(["inputWrapper",{"inputWrapper--error":!e.isNameValid}])},[r[3]||(r[3]=n("label",{for:"name"},[d(" Name "),n("span",{class:"required"},"Required")],-1)),v(n("input",{type:"text",name:"name",id:"name","onUpdate:modelValue":r[0]||(r[0]=a=>e.name=a),onBlur:e.onNameBlur,placeholder:"Send traces to Dynatrace",required:""},null,544),[[c,e.name]]),e.isNameValid?_("",!0):(m(),u("p",R," A name for your integration is required. "))],2),n("div",{class:f(["inputWrapper",{"inputWrapper--error":!e.isEndpointValid}])},[r[5]||(r[5]=n("label",{for:"endpoint"},[d(" Traces Endpoint "),n("span",{class:"required"},"Required")],-1)),v(n("input",{type:"text",name:"endpoint",id:"endpoint","onUpdate:modelValue":r[1]||(r[1]=a=>e.endpoint=a),onBlur:e.onEndpointBlur,placeholder:"https://{your-environment-id}.live.dynatrace.com/api/v2/otlp/v1/traces",required:""},null,544),[[c,e.endpoint]]),e.isEndpointValid?_("",!0):(m(),u("p",h,r[4]||(r[4]=[d(" The Dynatrace endpoint is required."),n("br",null,null,-1)])))],2),n("div",{class:f(["inputWrapper",{"inputWrapper--error":!e.isTokenValid}])},[r[6]||(r[6]=n("label",{for:"token"},[d(" API Token "),n("span",{class:"required"},"Required")],-1)),v(n("input",{type:"text",name:"token",id:"token","onUpdate:modelValue":r[2]||(r[2]=a=>e.token=a),onBlur:e.onTokenBlur,autocomplete:"off",required:""},null,544),[[c,e.token]]),e.isTokenValid?_("",!0):(m(),u("p",A," Your API Token is required. "))],2),n("div",I,[n("button",{onClick:q(e.create,["prevent"]),disabled:e.isSubmitDisabled,class:"button button--primary"}," Create ",8,P)])])}const G=D(C,[["render",S]]);export{G as default};
