import{h as u}from"./user.BEEfOshe.js";import{o as E,m as h}from"./user.Bg1Nd46A.js";import{i as m,d}from"./loader.BQDlK3Tc.js";import{a as i}from"./notifications.NSMm1_5U.js";import{u as w}from"./index.CwJxcYEt.js";import{a as y}from"./index.BSdFiPHn.js";const g={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,PUBLIC_API_URL:"/api",SITE:void 0,SSR:!1},c=g===void 0?"https://62ff903e9350a1e548e1952e.mockapi.io/api":"/api",$=c==="https://62ff903e9350a1e548e1952e.mockapi.io/api",f=$?"&limit=10":"",r=w(E),p=h({page:0,environments:[],total:0,isReady:!1});async function T(n){return p.set(n),p.get()}const A=async(n,s)=>{m();let t=`${c}/organization/${r.value}/environments?page=${n}${f}`;s&&(t=`${c}/organization/${r.value}/environments/search?pattern=${s}&page=${n}${f}`);try{const e=await fetch(t);if(e.status===403)u(r.value);else if(e.ok){const a=await e.json();let o={page:n,environments:a.items,total:a.count,isReady:!0};T(o)}else throw new Error(e.statusText)}catch(e){const a={title:"Environments couldn't be fetched",message:e.message,type:"error"};i(a)}finally{d()}},v=y(null);async function b(n){return v.set(n),v.get()}const P=async n=>{m();const s=`${c}/organization/${r.value}/environments/${n}`;try{const t=await fetch(s);if(t.status===403)u(r.value);else if(t.ok){const e=await t.json();b(e)}else throw new Error(t.statusText)}catch(t){const e={title:"Environment couldn't be fetched",message:t.message,type:"error"};i(e)}d()},L=async n=>{m();let s=!0;const t=`${c}/organization/${r.value}/environments/${n}`;try{const e=await fetch(t,{method:"DELETE"});if(e.status===403)u(r.value);else if(e.status===400){let a=await e.json();i({title:"Environment couldn't be deleted",message:"This environment is used by a plan. You must delete the plan before proceeding.",type:"warning"}),s=!1}else if(!e.ok)throw new Error(e.statusText)}catch(e){const a={title:"Environment couldn't be deleted",message:e.message,type:"error"};i(a),s=!1}finally{return d(),s}},O=async n=>{if(n.envvars.length+n.secrets.length===0)i({title:"Environment couldn't be created",message:"You must provide at least one environment variable or secret",type:"error"});else{m();const s=`${c}/organization/${r.value}/environments`;try{const t=await fetch(s,{method:"POST",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(n)});if(t.status===403)u(r.value);else if(t.status===422){let e="";throw(await t.json()).forEach(o=>{o.type==="value_error"&&(e+=`${o.msg}. `)}),e!==""?new Error(`${t.statusText}: ${e}`):new Error(t.statusText)}else if(t.ok){const e=await t.json();window.location.assign(`/environments/view/?id=${e.id}`)}else throw new Error(t.statusText)}catch(t){const e={title:"Environment couldn't be created",message:t.message,type:"error"};i(e)}finally{d()}}},R=async(n,s)=>{m();const t=`${c}/organization/${r.value}/environments/${n}/clone`;try{const e=await fetch(t,{method:"POST",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify({name:s})});if(e.status===403)u(r.value);else if(e.ok){const a=await e.json();window.location.assign(`/environments/view/?id=${a.id}`)}else throw new Error(e.statusText)}catch(e){const a={title:"Environment couldn't be cloned",message:e.message,type:"error"};i(a)}finally{d()}},C=async(n,s,t)=>{m();let e=!0;const a=`${c}/organization/${r.value}/environments/${t}/remove/${n}`;try{const o=await fetch(a,{method:"DELETE"}),l={title:`Environment ${s} deleted`,message:`Environment ${s} ${n} was successfully deleted`,type:"success"};if(i(l),o.status===403)u(r.value);else if(!o.ok)throw new Error(o.statusText)}catch(o){const l={title:`Environment ${s} couldn't be deleted`,message:o.message,type:"error"};i(l),e=!1}finally{return d(),e}},U=async(n,s,t)=>{m();let e=!0;const a=`${c}/organization/${r.value}/environments/${t}/set`;try{const o=await fetch(a,{method:"PUT",headers:{Accept:"application/json, text/plain, */*","Content-Type":"application/json"},body:JSON.stringify(n)}),l={title:`Environment ${s} updated`,message:`Environment ${s} was successfully updated`,type:"success"};if(i(l),o.status===403)u(r.value);else if(!o.ok)throw new Error(o.statusText)}catch(o){const l={title:`Environment ${s} couldn't be updated`,message:o.message,type:"error"};i(l),e=!1}finally{return d(),e}};export{P as a,p as b,O as c,L as d,v as e,A as f,C as g,R as h,U as u};
