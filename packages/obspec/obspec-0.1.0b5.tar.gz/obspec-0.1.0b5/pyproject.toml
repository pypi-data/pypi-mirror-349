[project]
name = "obspec"
version = "0.1.0-beta.5"
description = "Object storage interface definitions for Python."
license = "MIT"
readme = "README.md"
authors = [{ name = "Kyle Barron", email = "kyle@developmentseed.org" }]
requires-python = ">=3.9"
dependencies = ["typing-extensions; python_version < '3.12'"]
keywords = []
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
]

[project.urls]
homepage = "https://developmentseed.org/obstore/latest/"
documentation = "https://developmentseed.org/obstore/latest/"
repository = "https://github.com/developmentseed/obstore"
issues = "https://github.com/developmentseed/obstore/issues"
changelog = "https://github.com/developmentseed/obstore/blob/main/obspec/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "griffe>=1.7.3",
    "ipykernel>=6.29.5",
    "mike>=2.1.3",
    "mkdocs-material[imaging]>=9.6.14",
    "mkdocs>=1.6.1",
    "mkdocstrings>=0.29.1",
    "mkdocstrings-python>=1.16.10",
    "pip>=24.2",
    "pytest>=8.3.3",
    "ruff>=0.11.10",
    "pytest-mypy-plugins>=3.2.0",
    "mypy>=1.15.0",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D104",   # Missing docstring in public package
    "EM101",
    "FIX002", # Line contains TODO, consider resolving the issue
    "PYI021", # docstring-in-stub
    "PYI051", # redundant-literal-union
    "PYI011", # typed-argument-default-in-stub
    "TD",     # Todo comments
    "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = [
    "ANN204", # Missing return type annotation for special method
    "E501",   # Line too long
]
"tests/*" = [
    "S101",    # assert
    "ANN201",  # Missing return type annotation for public function
    "ANN202",  # Missing return type annotation for private function `it`
    "D100",    # Missing docstring in public module
    "D103",    # Missing docstring in public function
    "PLR2004", # Magic value used in comparison, consider replacing `100` with a constant variable
    "S301",    # `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
    "SLF001",  # Private member accessed
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.extend-per-file-ignores]
"__init__.py" = [
    "F401", # Allow unused imports in __init__.py files
    "F403", # unable to detect undefined names
]

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
