[project]
name = "mseep-steampipe-mcp-server"
version = "0.2.3"
description = "A Python MCP server interacting with PostgreSQL, intended for use with Steampipe."
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
maintainers = [
    { name = "mseep", email = "support@skydeck.ai" },
]
keywords = [
    "mcp",
    "llm",
    "postgres",
    "postgresql",
    "steampipe",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp[cli]>=1.6.0",
    "psycopg[binary,pool]>=3.1.0",
    "pydantic>=2.0.0",
    "click>=8.1.8",
]

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [
    "ruff>=0.8.5",
    "pyright>=1.1.391",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "build>=1.0.0",
]

[project.scripts]
steampipe-mcp-server = "steampipe_mcp_server.cli:main"

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "tests",
]
python_files = "test_*.py"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 88
target-version = "py310"
src = [
    "src",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "I",
    "UP",
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pyright]
include = [
    "src",
    "tests",
]
venvPath = "."
venv = ".venv"

[tool.uv]
dev-dependencies = [
    "ruff>=0.8.5",
    "pyright>=1.1.391",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "build>=1.0.0",
]

[tool.hatch.build.targets]
