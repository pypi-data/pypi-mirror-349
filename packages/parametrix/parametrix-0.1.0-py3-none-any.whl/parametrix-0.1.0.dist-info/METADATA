Metadata-Version: 2.3
Name: parametrix
Version: 0.1.0
Summary: Flax-like computed parameters for bare JAX
Author: Gabriel S. Gerlero
Author-email: Gabriel S. Gerlero <ggerlero@cimec.unl.edu.ar>
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries
Classifier: Typing :: Typed
Classifier: Operating System :: OS Independent
Requires-Dist: equinox>=0.12.1,<0.13
Requires-Dist: jax>=0.6,<0.7
Requires-Dist: numpy>=1,<3
Requires-Dist: typing-extensions>=4,<5 ; python_full_version < '3.11'
Requires-Dist: mkdocs>=1.6.1,<2 ; extra == 'docs'
Requires-Dist: mkdocs-material>=9.6.12,<10 ; extra == 'docs'
Requires-Dist: mkdocstrings[python]>=0.29.1,<0.30 ; extra == 'docs'
Requires-Python: >=3.10
Project-URL: Homepage, https://github.com/gerlero/parametrix
Project-URL: Repository, https://github.com/gerlero/parametrix
Provides-Extra: docs
Description-Content-Type: text/markdown

# <center>[<img src="https://raw.githubusercontent.com/gerlero/parametrix/main/logo.png" alt="Parametrix logo" width=250></img>](https://github.com/gerlero/parametrix/)</center>

[`flax.nnx.Param`](https://flax.readthedocs.io/en/latest/api_reference/flax.nnx/variables.html#flax.nnx.Param)-like computed parameters for bare [JAX](https://github.com/jax-ml/jax) (and [Equinox](https://github.com/patrick-kidger/equinox)).

[![Documentation](https://img.shields.io/readthedocs/parametrix)](https://parametrix.readthedocs.io/)
[![CI](https://github.com/gerlero/parametrix/actions/workflows/ci.yml/badge.svg)](https://github.com/gerlero/parametrix/actions/workflows/ci.yml)
[![Codecov](https://codecov.io/gh/gerlero/parametrix/branch/main/graph/badge.svg)](https://codecov.io/gh/gerlero/parametrix)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)
[![uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)
[![Publish](https://github.com/gerlero/parametrix/actions/workflows/pypi-publish.yml/badge.svg)](https://github.com/gerlero/parametrix/actions/workflows/pypi-publish.yml)
[![PyPI](https://img.shields.io/pypi/v/parametrix)](https://pypi.org/project/parametrix/)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/parametrix)](https://pypi.org/project/parametrix/)


## Installation

```bash
pip install parametrix
```

## Example

The following example shows how to use `Param` as a base class for parameter class that enforces positivity:

```python
import jax.numpy as jnp
from parametrix import Param

class PositiveParam(Param):
    def __init__(self, value):
        super().__init__(jnp.log(value))

    @property
    def value(self):
        return jnp.exp(self.raw_value)
```

The backing values of `Param`s are always stored as `jax.Array`s, meaning that they will automatically be picked up as learnable parameters by libraries like Equinox.

`Param` objects also behave like numeric types, so that they are able to be used within models and any other functions without having to make any changes to the code.

## Documentation

API documentation is available at [Read the Docs](https://parametrix.readthedocs.io/).
