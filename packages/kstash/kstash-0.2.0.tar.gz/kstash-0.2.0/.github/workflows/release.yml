name: CI

on: [push]

jobs:
  
  test:
    name: Run the test suite
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.13"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Lint code with Ruff
        run: |
          source .venv/bin/activate
          ruff check --output-format=github
      - name: Check code formatting with Ruff
        run: |
          source .venv/bin/activate
          ruff format --diff
      - name: Type check with Pyright
        run: |
          npm install -g pyright
          source .venv/bin/activate
          pyright
      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest
  
  build:
    name: Build distribution
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
    - name: Build a binary wheel and a source tarball
      run: uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-dist
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/kstash
    permissions:
      id-token: write
    steps:
    - name: Fetch build output
      uses: actions/download-artifact@v4
      with:
        name: python-package-dist
        path: dist/
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/kstash
    permissions:
      id-token: write
    steps:
    - name: Fetch build output
      uses: actions/download-artifact@v4
      with:
        name: python-package-dist
        path: dist/
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        verbose: true
