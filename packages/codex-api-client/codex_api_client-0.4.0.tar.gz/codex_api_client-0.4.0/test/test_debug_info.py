# coding: utf-8

"""
    Codex API

    List of endpoints and interfaces available to Codex API users

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from codex_api_client.models.debug_info import DebugInfo

class TestDebugInfo(unittest.TestCase):
    """DebugInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DebugInfo:
        """Test DebugInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DebugInfo`
        """
        model = DebugInfo()
        if include_optional:
            return DebugInfo(
                id = 'QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N',
                addrs = [
                    '/ip4/127.0.0.1/tcp/8080'
                    ],
                repo = '',
                spr = '',
                table = codex_api_client.models.peers_table.PeersTable(
                    local_node = codex_api_client.models.node.Node(
                        node_id = '', 
                        peer_id = '', 
                        record = '', 
                        address = '', 
                        seen = True, ), 
                    nodes = [
                        codex_api_client.models.node.Node(
                            node_id = '', 
                            peer_id = '', 
                            record = '', 
                            address = '', 
                            seen = True, )
                        ], ),
                codex = codex_api_client.models.codex_version.CodexVersion(
                    version = 'v0.1.7', 
                    revision = '0c647d8', )
            )
        else:
            return DebugInfo(
        )
        """

    def testDebugInfo(self):
        """Test DebugInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
