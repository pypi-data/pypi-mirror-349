# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel
from .workflow_task_step_kind import WorkflowTaskStepKind


class WorkflowTaskStep(UncheckedBaseModel):
    kind: WorkflowTaskStepKind = pydantic.Field()
    """
    The type of operation the task performs.
    """

    label: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional label for the output of this step.
    """

    format: typing.Optional[str] = pydantic.Field(default=None)
    """
    Output format (e.g., mp4, jpg)
    """

    width: typing.Optional[int] = pydantic.Field(default=None)
    """
    Output width
    """

    height: typing.Optional[int] = pydantic.Field(default=None)
    """
    Output height
    """

    resize: typing.Optional[str] = pydantic.Field(default=None)
    """
    Resize mode
    """

    quality: typing.Optional[int] = pydantic.Field(default=None)
    """
    Quality setting
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
