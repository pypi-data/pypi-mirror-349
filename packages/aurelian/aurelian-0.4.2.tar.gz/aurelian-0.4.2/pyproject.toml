[project]
name = "aurelian"

[tool.poetry]
name = "aurelian"
version = "0.4.2"
description = "aurelian"
authors = ["Author 1 <author@org.org>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
click = "*"
importlib-metadata = ">=8.2.0"
oaklib = ">=0.6.19"
tabulate = ">=0.9.0"
linkml-store = {extras = ["llm", "mongodb"], version = ">=0.2.4"}
rdkit = {optional=true, version="*"}
gocam = {optional=true, version="*"}
linkml = {optional=true, version="*"}
gradio = "^5.23.3"
pydantic-ai = ">=0.2.0"
logfire = ">=3.5.3"
bs4 = ">=0.0.2"
duckduckgo-search = ">=7.3.2"
markdownify = ">=0.14.1"
wikipedia = ">=1.4.0"
onnxruntime = "<=1.19.0"
markitdown = ">=0.1.1"
pypaperbot = {optional=true, version=">=1.4.1"}
undetected-chromedriver = ">=3.5.5"
bioservices = ">=1.12.0"
pdfminer-six = {optional=true, version="*"}
mcp = {extras = ["cli"], version = "^1.3.0"}
pytest-asyncio = "^0.25.3"
cairosvg = "^2.7.1"
paper-qa = "^5.20.0"

[tool.poetry.group.dev.dependencies]
pytest = {version = ">=8.3.2"}
pytest-reportlog = {version = "*"}
pytest-metadata = {version = "*"}
tox = {version = ">=4.16.0"}
mypy = {version = "*"}
types-PyYAML = {version = "*"}
jupyter = {version = "*"}
papermill = {version = "*"}
nbdime = {version = "*"}
nbformat = {version = "*"}
pre-commit = {version = ">=3.3.3"}

[tool.poetry.extras]
rdkit = ["rdkit"]
gocam = ["gocam"]
gradio = ["gradio"]
bioservices = ["bioservices"]
linkml = ["linkml"]
chem = ["rdkit"]
pdfminer = ["pdfminer-six"]
pypaperbot = ["pypaperbot"]

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests that might have external dependencies",
    "flaky: marks tests that might occasionally fail due to external conditions",
]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mkdocs-mermaid2-plugin = "*"
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"
mknotebooks = ">=0.8.0"
mkdocs-windmill = "*"
mkdocs-click = "*"
mkdocstrings = {extras = ["crystal", "python"], version = "*"}
typer = ">=0.9.0"  # Required for mkdocs-click

[tool.poetry.scripts]
aurelian = "aurelian.cli:main"
aurelian-mcp-gocam = "aurelian.agents.gocam.gocam_mcp:main"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "pep440"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
extend-ignore = [
    "S101",  # Allow assert statements in tests
    "D104",  # Ignore missing docstrings in __init__.py
    "D417",  # Ignore missing argument descriptions in docstrings
    "D401",  # Ignore enforcing imperative mood in docstrings
    "D400", "D415",  # Ignore docstring punctuation enforcement
    "D200",  # Ignore "one-line docstring should fit on one line"
    "F821",  # Ignore undefined name errors (useful if missing imports)
    "S113",  # Ignore "requests call without timeout" warnings
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Ignore asserts only in test files

fixable = ["ALL"]
select = [
    "B",  # bugbear
    "D",  # pydocstyle
    "E",  # pycodestyle errors
    "F",  # Pyflakes
    "I",  # isort
    "S",  # flake8-bandit
    "W",  # Warning
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.codespell]
skip = "*.po,*.ts,.git,pyproject.toml"
count = ""
quiet-level = 3

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
