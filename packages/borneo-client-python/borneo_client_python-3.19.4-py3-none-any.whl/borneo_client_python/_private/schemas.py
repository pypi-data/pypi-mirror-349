# Code generated by smithy-python-codegen DO NOT EDIT.

from smithy_core.prelude import (
    BOOLEAN,
    DOCUMENT,
    DOUBLE,
    INTEGER,
    LONG,
    STRING,
    TIMESTAMP,
    UNIT,
)
from smithy_core.schemas import Schema
from smithy_core.shapes import ShapeID, ShapeType
from smithy_core.traits import Trait


UNIQUE_STRING_LIST = Schema.collection(
    id=ShapeID("borneo#UniqueStringList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": STRING,
        },
    },
)

ACCESS_LOG_MEMBER = Schema.collection(
    id=ShapeID("borneo#AccessLogMember"),
    members={
        "time": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "email": {
            "target": STRING,
        },
        "requestId": {
            "target": STRING,
        },
        "roles": {
            "target": UNIQUE_STRING_LIST,
        },
        "operation": {
            "target": STRING,
        },
        "msg": {
            "target": STRING,
        },
        "input": {
            "target": DOCUMENT,
        },
    },
)

ACCESS_LOGS_RESULTS = Schema.collection(
    id=ShapeID("borneo#AccessLogsResults"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ACCESS_LOG_MEMBER,
        },
    },
)

ACCOUNT_ID = Schema(
    id=ShapeID("borneo#AccountId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

ACCOUNT_NAME = Schema(
    id=ShapeID("borneo#AccountName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9.,_ @+=-]{1,100}$"),
    ],
)

AWS_RESOURCE_TYPE = Schema.collection(
    id=ShapeID("borneo#AwsResourceType"),
    type=ShapeType.ENUM,
    members={
        "DYNAMODB_TABLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_dynamodb_table"),
            ],
        },
        "EC2_INSTANCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_ec2_instance"),
            ],
        },
        "EBS_VOLUME": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_ebs_volume"),
            ],
        },
        "ES_DOMAIN": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="aws_elasticsearch_domain"
                ),
            ],
        },
        "S3_BUCKET": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_s3_bucket"),
            ],
        },
        "REDSHIFT_CLUSTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_redshift_cluster"),
            ],
        },
        "EKS_CLUSTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_eks_cluster"),
            ],
        },
        "ECS_CLUSTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_ecs_cluster"),
            ],
        },
        "EMR_CLUSTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_emr_cluster"),
            ],
        },
        "RDS_INSTANCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="aws_rds_db_instance"),
            ],
        },
    },
)

ENABLED_RESOURCE_TYPE_LIST = Schema.collection(
    id=ShapeID("borneo#EnabledResourceTypeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": AWS_RESOURCE_TYPE,
        },
    },
)

ACCOUNT_PERMISSIONS = Schema.collection(
    id=ShapeID("borneo#AccountPermissions"),
    members={
        "enableInventoryPolicy": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "enableAwsConfigPolicy": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "enableDataplaneDeployPolicy": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "enableDpCli": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "regions": {
            "target": UNIQUE_STRING_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "addEventBridgePermission": {
            "target": BOOLEAN,
        },
        "trustedDataPlanes": {
            "target": UNIQUE_STRING_LIST,
        },
        "enabledResourceTypes": {
            "target": ENABLED_RESOURCE_TYPE_LIST,
        },
    },
)

ACCOUNT_ROLE_TYPE = Schema.collection(
    id=ShapeID("borneo#AccountRoleType"),
    type=ShapeType.ENUM,
    members={
        "CONTROL_PLANE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="control_plane"),
            ],
        },
        "DATA_PLANE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="data_plane"),
            ],
        },
        "CLI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cli"),
            ],
        },
    },
)

ACCOUNT_ROLE_VALIDATION = Schema.collection(
    id=ShapeID("borneo#AccountRoleValidation"),
    members={
        "validated": {
            "target": BOOLEAN,
        },
        "dataPlaneId": {
            "target": STRING,
        },
    },
)

ACCOUNT_ROLE_VALIDATIONS = Schema.collection(
    id=ShapeID("borneo#AccountRoleValidations"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ACCOUNT_ROLE_VALIDATION,
        },
    },
)

ACCOUNT_ROLE = Schema.collection(
    id=ShapeID("borneo#AccountRole"),
    members={
        "name": {
            "target": STRING,
        },
        "type": {
            "target": ACCOUNT_ROLE_TYPE,
        },
        "externalId": {
            "target": STRING,
        },
        "validations": {
            "target": ACCOUNT_ROLE_VALIDATIONS,
        },
    },
)

ACCOUNT_ROLES = Schema.collection(
    id=ShapeID("borneo#AccountRoles"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ACCOUNT_ROLE,
        },
    },
)

ACCOUNT_STATUS = Schema.collection(
    id=ShapeID("borneo#AccountStatus"),
    type=ShapeType.ENUM,
    members={
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NEW"),
            ],
        },
        "VALIDATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VALIDATED"),
            ],
        },
        "VALIDATION_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VALIDATION_FAILED"),
            ],
        },
        "DELETING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETING"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
    },
)

ACCOUNT_STATUS_DETAILS = Schema.collection(
    id=ShapeID("borneo#AccountStatusDetails"),
    members={
        "validationTime": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "validationMessage": {
            "target": STRING,
        },
    },
)

ACCOUNT_TYPE = Schema.collection(
    id=ShapeID("borneo#AccountType"),
    type=ShapeType.ENUM,
    members={
        "AWS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AWS"),
            ],
        },
        "GCP": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="GCP"),
            ],
        },
        "AZURE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AZURE"),
            ],
        },
    },
)

VALIDATION_EXCEPTION_FIELD = Schema.collection(
    id=ShapeID("smithy.framework#ValidationExceptionField"),
    members={
        "path": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "message": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

FIELD_LIST = Schema.collection(
    id=ShapeID("borneo#FieldList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": VALIDATION_EXCEPTION_FIELD,
        },
    },
)

DATA_VALIDATION_EXCEPTION = Schema.collection(
    id=ShapeID("borneo#DataValidationException"),
    traits=[
        Trait(id=ShapeID("smithy.api#httpError"), value=400),
    ],
    members={
        "message": {
            "target": STRING,
        },
        "fieldList": {
            "target": FIELD_LIST,
        },
        "data": {
            "target": DOCUMENT,
        },
    },
)

DESCRIBE_ACCOUNT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeAccountInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "accountId": {
            "target": ACCOUNT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

OPEN_PROPERTIES = Schema.collection(
    id=ShapeID("borneo#OpenProperties"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": DOCUMENT,
        },
    },
)

DESCRIBE_ACCOUNT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeAccountOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "accountId": {
            "target": ACCOUNT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": ACCOUNT_NAME,
        },
        "cloudAccountId": {
            "target": STRING,
        },
        "type": {
            "target": ACCOUNT_TYPE,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "roles": {
            "target": ACCOUNT_ROLES,
        },
        "permissions": {
            "target": ACCOUNT_PERMISSIONS,
        },
        "statusDetails": {
            "target": ACCOUNT_STATUS_DETAILS,
        },
        "status": {
            "target": ACCOUNT_STATUS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdBy": {
            "target": STRING,
        },
        "ownerEmail": {
            "target": STRING,
        },
    },
)

NO_SUCH_RESOURCE = Schema.collection(
    id=ShapeID("borneo#NoSuchResource"),
    traits=[
        Trait(id=ShapeID("smithy.api#httpError"), value=404),
    ],
    members={
        "resourceType": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UNAUTHORIZED = Schema.collection(
    id=ShapeID("borneo#Unauthorized"),
    traits=[
        Trait(id=ShapeID("smithy.api#httpError"), value=401),
    ],
    members={
        "message": {
            "target": STRING,
        },
    },
)

UNEXPECTED_SERVER_ERROR = Schema.collection(
    id=ShapeID("borneo#UnexpectedServerError"),
    traits=[
        Trait(id=ShapeID("smithy.api#httpError"), value=500),
    ],
    members={
        "message": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

VALIDATION_EXCEPTION_FIELD_LIST = Schema.collection(
    id=ShapeID("smithy.framework#ValidationExceptionFieldList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": VALIDATION_EXCEPTION_FIELD,
        },
    },
)

VALIDATION_EXCEPTION = Schema.collection(
    id=ShapeID("smithy.framework#ValidationException"),
    members={
        "message": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "fieldList": {
            "target": VALIDATION_EXCEPTION_FIELD_LIST,
        },
    },
)

DESCRIBE_CLOUD_ACCOUNT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCloudAccountInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "cloudAccountId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_CLOUD_ACCOUNT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCloudAccountOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "accountId": {
            "target": ACCOUNT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": ACCOUNT_NAME,
        },
        "cloudAccountId": {
            "target": STRING,
        },
        "type": {
            "target": ACCOUNT_TYPE,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "roles": {
            "target": ACCOUNT_ROLES,
        },
        "permissions": {
            "target": ACCOUNT_PERMISSIONS,
        },
        "statusDetails": {
            "target": ACCOUNT_STATUS_DETAILS,
        },
        "status": {
            "target": ACCOUNT_STATUS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdBy": {
            "target": STRING,
        },
        "ownerEmail": {
            "target": STRING,
        },
    },
)

ACCOUNT_FILTER = Schema.collection(
    id=ShapeID("borneo#AccountFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "accountId": {
            "target": UNIQUE_STRING_LIST,
        },
        "cloudAccountId": {
            "target": UNIQUE_STRING_LIST,
        },
        "activeStates": {
            "target": BOOLEAN,
        },
    },
)

PAGE_SIZE = Schema(
    id=ShapeID("borneo#PageSize"),
    type=ShapeType.INTEGER,
    traits=[
        Trait(id=ShapeID("smithy.api#box")),
        Trait(
            id=ShapeID("smithy.api#range"),
            value={
                "min": 1,
                "max": 10000,
            },
        ),
    ],
)

COLUMN_NAME = Schema(
    id=ShapeID("borneo#ColumnName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9_]+$"),
    ],
)

SORT_ORDER = Schema.collection(
    id=ShapeID("borneo#SortOrder"),
    type=ShapeType.ENUM,
    members={
        "ASC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ASC"),
            ],
        },
        "DESC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DESC"),
            ],
        },
    },
)

SORT_RECORDS = Schema.collection(
    id=ShapeID("borneo#SortRecords"),
    members={
        "column": {
            "target": COLUMN_NAME,
        },
        "order": {
            "target": SORT_ORDER,
        },
    },
)

LIST_ACCOUNTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListAccountsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": ACCOUNT_FILTER,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

ACCOUNT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#AccountListMember"),
    members={
        "accountId": {
            "target": ACCOUNT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": ACCOUNT_NAME,
        },
        "cloudAccountId": {
            "target": STRING,
        },
        "type": {
            "target": ACCOUNT_TYPE,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "roles": {
            "target": ACCOUNT_ROLES,
        },
        "permissions": {
            "target": ACCOUNT_PERMISSIONS,
        },
        "statusDetails": {
            "target": ACCOUNT_STATUS_DETAILS,
        },
        "status": {
            "target": ACCOUNT_STATUS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdBy": {
            "target": STRING,
        },
        "ownerEmail": {
            "target": STRING,
        },
    },
)

ACCOUNTS_LIST = Schema.collection(
    id=ShapeID("borneo#AccountsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ACCOUNT_LIST_MEMBER,
        },
    },
)

LIST_ACCOUNTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListAccountsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "accounts": {
            "target": ACCOUNTS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

ACTIVE_RESOURCES_STATS = Schema.collection(
    id=ShapeID("borneo#ActiveResourcesStats"),
    members={
        "timestamp": {
            "target": TIMESTAMP,
        },
        "activeCount": {
            "target": INTEGER,
        },
    },
)

ACTIVE_RESOURCES_STATS_LIST = Schema.collection(
    id=ShapeID("borneo#ActiveResourcesStatsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ACTIVE_RESOURCES_STATS,
        },
    },
)

UUID = Schema(
    id=ShapeID("borneo#Uuid"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

UUID_COLLECTION = Schema.collection(
    id=ShapeID("borneo#UuidCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": UUID,
        },
    },
)

ADD_DISCOVERED_RECIPIENT_AS_RECIPIENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#AddDiscoveredRecipientAsRecipientsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredRecipientIds": {
            "target": UUID_COLLECTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

ADD_DISCOVERED_RECIPIENT_AS_RECIPIENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#AddDiscoveredRecipientAsRecipientsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "recipientIds": {
            "target": UUID_COLLECTION,
        },
    },
)

ADDITIONAL_DATA_OPTIONS = Schema.collection(
    id=ShapeID("borneo#AdditionalDataOptions"),
    members={
        "violationSummary": {
            "target": BOOLEAN,
        },
        "frameworkExceptionsCount": {
            "target": BOOLEAN,
        },
    },
)

CHILD_RESOURCE_STATS_OPTIONS = Schema.collection(
    id=ShapeID("borneo#ChildResourceStatsOptions"),
    members={
        "scans": {
            "target": BOOLEAN,
        },
        "dataSize": {
            "target": BOOLEAN,
        },
    },
)

ADDITIONAL_INVENTORY_DATA_OPTIONS = Schema.collection(
    id=ShapeID("borneo#AdditionalInventoryDataOptions"),
    members={
        "childResourceStats": {
            "target": CHILD_RESOURCE_STATS_OPTIONS,
        },
        "violationMetrics": {
            "target": BOOLEAN,
        },
        "frameworkExceptionsCount": {
            "target": BOOLEAN,
        },
        "cloudConnectionDetails": {
            "target": BOOLEAN,
        },
    },
)

PROCESSING_ACTIVITY_DOC_TYPE = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityDocType"),
    type=ShapeType.ENUM,
    members={
        "THRESHOLD": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="threshold"),
            ],
        },
        "DPIA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpia"),
            ],
        },
        "THRESHOLD_AND_DPIA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="thresholdAndDpia"),
            ],
        },
    },
)

ADD_TA_DPIA_FILE_INPUT = Schema.collection(
    id=ShapeID("borneo#AddTaDpiaFileInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "uploadedFileId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "docType": {
            "target": PROCESSING_ACTIVITY_DOC_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "link": {
            "target": STRING,
        },
    },
)

ADD_TA_DPIA_FILE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#AddTaDpiaFileOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

AGGREGATE_SCAN_STATS = Schema.collection(
    id=ShapeID("borneo#AggregateScanStats"),
    members={
        "scanDurationinMs": {
            "target": DOUBLE,
        },
        "dataScanned": {
            "target": DOUBLE,
        },
        "identifiersMatched": {
            "target": INTEGER,
        },
        "scannedResources": {
            "target": INTEGER,
        },
        "totalResourceCount": {
            "target": INTEGER,
        },
        "failedScans": {
            "target": INTEGER,
        },
        "totalScans": {
            "target": INTEGER,
        },
        "successfulScans": {
            "target": INTEGER,
        },
        "repeatedScans": {
            "target": INTEGER,
        },
        "oneTimeScans": {
            "target": INTEGER,
        },
        "fullScans": {
            "target": INTEGER,
        },
        "sampleScans": {
            "target": INTEGER,
        },
        "incrementScannedResources": {
            "target": INTEGER,
        },
    },
)

ARCHIVE_DISCOVERED_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#ArchiveDiscoveredRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredRecipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

ARCHIVE_DISCOVERED_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ArchiveDiscoveredRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

ASSET_ID = Schema(
    id=ShapeID("borneo#AssetId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

LOCATION_TYPE = Schema.collection(
    id=ShapeID("borneo#LocationType"),
    type=ShapeType.ENUM,
    members={
        "EXTERNAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="external"),
            ],
        },
        "REMOTE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="remote"),
            ],
        },
        "OFFICE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="office"),
            ],
        },
    },
)

TYPE = Schema.collection(
    id=ShapeID("borneo#Type"),
    type=ShapeType.ENUM,
    members={
        "APPLICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="applications"),
            ],
        },
        "CLOUDSERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudServices"),
            ],
        },
        "COMMUNICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="communications"),
            ],
        },
        "DATAINFORMATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataInformation"),
            ],
        },
        "EXTERNALSTORAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="externalStorage"),
            ],
        },
        "HARDWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="hardware"),
            ],
        },
        "HOSTING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="hosting"),
            ],
        },
        "FURNITURE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="furniture"),
            ],
        },
        "OTHER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="other"),
            ],
        },
        "PAPERDOCUMENTATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="paperDocumentation"),
            ],
        },
        "PRINTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="printer"),
            ],
        },
        "SERVER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="server"),
            ],
        },
        "SHREDDER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="shredder"),
            ],
        },
        "VIDEOSURVEILLANCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="videoSurveillance"),
            ],
        },
        "FILINGROOM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="filingRoom"),
            ],
        },
    },
)

CREATE_ASSET_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateAssetInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "type": {
            "target": TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
        "locationType": {
            "target": LOCATION_TYPE,
        },
        "locationId": {
            "target": UUID,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
    },
)

CREATE_ASSET_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateAssetOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

NOT_ALLOWED = Schema.collection(
    id=ShapeID("borneo#NotAllowed"),
    traits=[
        Trait(id=ShapeID("smithy.api#httpError"), value=403),
    ],
    members={
        "message": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_ASSET_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeAssetInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

PHYSICAL_ADDRESS = Schema(
    id=ShapeID("borneo#PhysicalAddress"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 500,
            },
        ),
    ],
)

HEADQUARTER_CITY = Schema(
    id=ShapeID("borneo#HeadquarterCity"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 100,
            },
        ),
    ],
)

COUNTRY_CODE = Schema(
    id=ShapeID("borneo#CountryCode"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Z]{2}$"),
    ],
)

HEADQUARTER_ID = Schema(
    id=ShapeID("borneo#HeadquarterId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

HEADQUARTER_NAME = Schema(
    id=ShapeID("borneo#HeadquarterName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9.,_ @+=-]{1,100}$"),
    ],
)

TOM_CATEGORY = Schema(
    id=ShapeID("borneo#TomCategory"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 200,
            },
        ),
    ],
)

TOM_DESCRIPTION = Schema(
    id=ShapeID("borneo#TomDescription"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 1000,
            },
        ),
    ],
)

TOM_LIST = Schema(
    id=ShapeID("borneo#TomList"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 200,
            },
        ),
    ],
)

TOM_NAME = Schema(
    id=ShapeID("borneo#TomName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 500,
            },
        ),
    ],
)

TOM_NOTE = Schema(
    id=ShapeID("borneo#TomNote"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 3000,
            },
        ),
    ],
)

TOM_REFERENCE_CODE = Schema(
    id=ShapeID("borneo#TomReferenceCode"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 200,
            },
        ),
    ],
)

TOM_STATUS = Schema.collection(
    id=ShapeID("borneo#TomStatus"),
    type=ShapeType.ENUM,
    members={
        "IMPLEMENTED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="implemented"),
            ],
        },
        "AVAILABLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="available"),
            ],
        },
        "PENDING_TO_IMPLEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pendingToImplement"),
            ],
        },
    },
)

TOM_ID = Schema(
    id=ShapeID("borneo#TomId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 80,
            },
        ),
    ],
)

TOM_TYPE = Schema.collection(
    id=ShapeID("borneo#TomType"),
    type=ShapeType.ENUM,
    members={
        "ORGANISATIONAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="organisational"),
            ],
        },
        "TECHNICAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="technical"),
            ],
        },
    },
)

TOM_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#TomListMember"),
    members={
        "tomId": {
            "target": TOM_ID,
        },
        "name": {
            "target": TOM_NAME,
        },
        "description": {
            "target": TOM_DESCRIPTION,
        },
        "list": {
            "target": TOM_LIST,
        },
        "category": {
            "target": TOM_CATEGORY,
        },
        "type": {
            "target": TOM_TYPE,
        },
        "referenceCode": {
            "target": TOM_REFERENCE_CODE,
        },
        "status": {
            "target": TOM_STATUS,
        },
        "note": {
            "target": TOM_NOTE,
        },
    },
)

TOM_COLLECTION = Schema.collection(
    id=ShapeID("borneo#TomCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": TOM_LIST_MEMBER,
        },
    },
)

ZIP_CODE = Schema(
    id=ShapeID("borneo#ZipCode"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 15,
            },
        ),
    ],
)

HEADQUARTER_RECORD = Schema.collection(
    id=ShapeID("borneo#HeadquarterRecord"),
    members={
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": HEADQUARTER_NAME,
        },
        "city": {
            "target": HEADQUARTER_CITY,
        },
        "address": {
            "target": PHYSICAL_ADDRESS,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "zipcode": {
            "target": ZIP_CODE,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
    },
)

DESCRIBE_ASSET_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeAssetOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#AssetRecord"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": TYPE,
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
        "locationType": {
            "target": LOCATION_TYPE,
        },
        "locationId": {
            "target": UUID,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
        "location": {
            "target": HEADQUARTER_RECORD,
        },
    },
)

ASSET_TYPE_LIST = Schema.collection(
    id=ShapeID("borneo#AssetTypeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": TYPE,
        },
    },
)

ASSET_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#AssetSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "type": {
            "target": ASSET_TYPE_LIST,
        },
    },
)

LIST_ASSETS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListAssetsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#AssetListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "nextToken": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="nextToken"),
            ],
        },
        "pageSize": {
            "target": PAGE_SIZE,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="maxResults"),
            ],
        },
        "filter": {
            "target": ASSET_SELECT_FILTER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

ASSET_LIST_RECORD = Schema.collection(
    id=ShapeID("borneo#AssetListRecord"),
    members={
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": TYPE,
        },
        "locationType": {
            "target": LOCATION_TYPE,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
        "location": {
            "target": HEADQUARTER_RECORD,
        },
        "noOfProcessingActivities": {
            "target": INTEGER,
        },
    },
)

ASSET_LIST = Schema.collection(
    id=ShapeID("borneo#AssetList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ASSET_LIST_RECORD,
        },
    },
)

LIST_ASSETS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListAssetsOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#AssetListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "assets": {
            "target": ASSET_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

REMOVE_ASSET_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveAssetInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_ASSET_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveAssetOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_ASSET_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateAssetInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "type": {
            "target": TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
        "locationType": {
            "target": LOCATION_TYPE,
        },
        "locationId": {
            "target": UUID,
        },
    },
)

UPDATE_ASSET_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateAssetOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

ASSET_RECORD = Schema.collection(
    id=ShapeID("borneo#AssetRecord"),
    members={
        "assetId": {
            "target": ASSET_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": TYPE,
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
        "locationType": {
            "target": LOCATION_TYPE,
        },
        "locationId": {
            "target": UUID,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
        "location": {
            "target": HEADQUARTER_RECORD,
        },
    },
)

AUDIT_LOGS_RESULTS = Schema.collection(
    id=ShapeID("borneo#AuditLogsResults"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DOCUMENT,
        },
    },
)

AUTOMATION_STATUS = Schema.collection(
    id=ShapeID("borneo#AutomationStatus"),
    type=ShapeType.ENUM,
    members={
        "IGNORED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ignored"),
            ],
        },
        "CREATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="created"),
            ],
        },
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="new"),
            ],
        },
    },
)

OBJECT_TYPE = Schema.collection(
    id=ShapeID("borneo#ObjectType"),
    type=ShapeType.ENUM,
    members={
        "EMAIL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="email"),
            ],
        },
    },
)

SUGGESTION_SOURCE = Schema.collection(
    id=ShapeID("borneo#SuggestionSource"),
    type=ShapeType.ENUM,
    members={
        "USER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="user"),
            ],
        },
        "EMPLOYEE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="employee"),
            ],
        },
        "ALL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="all"),
            ],
        },
    },
)

LIST_AUTO_SUGGESTIONS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListAutoSuggestionsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "prefix": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#pattern"), value="^[a-zA-Z0-9._%+-]+$"),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="prefix"),
            ],
        },
        "objectType": {
            "target": OBJECT_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#pattern"), value="^[a-zA-Z]+$"),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="objectType"),
            ],
        },
        "source": {
            "target": SUGGESTION_SOURCE,
            "traits": [
                Trait(id=ShapeID("smithy.api#default"), value="all"),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="source"),
            ],
        },
    },
)

SUGGESTION = Schema.collection(
    id=ShapeID("borneo#Suggestion"),
    members={
        "objectId": {
            "target": STRING,
        },
        "objectType": {
            "target": STRING,
        },
        "objectName": {
            "target": STRING,
        },
        "source": {
            "target": SUGGESTION_SOURCE,
        },
    },
)

SUGGESTIONS = Schema.collection(
    id=ShapeID("borneo#Suggestions"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SUGGESTION,
        },
    },
)

LIST_AUTO_SUGGESTIONS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListAutoSuggestionsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "suggestions": {
            "target": SUGGESTIONS,
        },
    },
)

BOOLEAN_LIST = Schema.collection(
    id=ShapeID("borneo#BooleanList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": BOOLEAN,
        },
    },
)

COMPLIANCE_DETAIL = Schema.collection(
    id=ShapeID("borneo#ComplianceDetail"),
    members={
        "name": {
            "target": STRING,
        },
        "compliant": {
            "target": BOOLEAN,
        },
        "infotypes": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

COMPLIANCE_DETAIL_LIST = Schema.collection(
    id=ShapeID("borneo#ComplianceDetailList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": COMPLIANCE_DETAIL,
        },
    },
)

RESOURCE_ID = Schema(
    id=ShapeID("borneo#ResourceId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

DESCRIBE_CATALOG_RESOURCE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCatalogResourceInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "includeParentDetails": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="includeParentDetails"),
            ],
        },
    },
)

OWNER_OBJECT = Schema.collection(
    id=ShapeID("borneo#OwnerObject"),
    members={
        "name": {
            "target": STRING,
        },
        "id": {
            "target": STRING,
        },
        "meta": {
            "target": DOCUMENT,
        },
    },
)

OWNER_OBJECT_LIST = Schema.collection(
    id=ShapeID("borneo#OwnerObjectList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": OWNER_OBJECT,
        },
    },
)

RESOURCE_PARENT = Schema.collection(
    id=ShapeID("borneo#ResourceParent"),
    members={
        "name": {
            "target": STRING,
        },
    },
)

SAMPLE_TOKENS = Schema.collection(
    id=ShapeID("borneo#SampleTokens"),
    members={
        "token": {
            "target": STRING,
        },
        "infoType": {
            "target": STRING,
        },
        "column": {
            "target": INTEGER,
        },
        "columnName": {
            "target": STRING,
        },
        "row": {
            "target": INTEGER,
        },
        "confidence": {
            "target": INTEGER,
        },
    },
)

SAMPLE_TOKENS_LIST = Schema.collection(
    id=ShapeID("borneo#SampleTokensList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SAMPLE_TOKENS,
        },
    },
)

TOKENS = Schema.collection(
    id=ShapeID("borneo#Tokens"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": SAMPLE_TOKENS_LIST,
        },
    },
)

INFOTYPE_SNAPSHOT = Schema.collection(
    id=ShapeID("borneo#InfotypeSnapshot"),
    members={
        "found": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "count": {
            "target": INTEGER,
        },
    },
)

INSPECTION_RESULT_SNAPSHOT = Schema.collection(
    id=ShapeID("borneo#InspectionResultSnapshot"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": INFOTYPE_SNAPSHOT,
        },
    },
)

SOURCE_OF_RESOURCE = Schema.collection(
    id=ShapeID("borneo#SourceOfResource"),
    type=ShapeType.ENUM,
    members={
        "DISCOVERED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="discovered"),
            ],
        },
        "MANUAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="manual_resource"),
            ],
        },
    },
)

RESOURCE_STATUS = Schema.collection(
    id=ShapeID("borneo#ResourceStatus"),
    type=ShapeType.ENUM,
    members={
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NEW"),
            ],
        },
        "VALIDATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VALIDATED"),
            ],
        },
        "VALIDATION_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VALIDATION_FAILED"),
            ],
        },
        "ACTIVE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ACTIVE"),
            ],
        },
        "DEPLOYMENT_SUCCESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DEPLOYMENT_SUCCESS"),
            ],
        },
        "DEPLOYMENT_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DEPLOYMENT_FAILED"),
            ],
        },
        "DELETING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETING"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
        "CONNECTOR_DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CONNECTOR_DELETED"),
            ],
        },
        "HOST_CONNECTIVITY_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="HOST_CONNECTIVITY_FAILED"
                ),
            ],
        },
        "CREDENTIAL_CHECK_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="CREDENTIAL_CHECK_FAILED"
                ),
            ],
        },
    },
)

DESCRIBE_CATALOG_RESOURCE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCatalogResourceOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "parentId": {
            "target": STRING,
        },
        "source": {
            "target": SOURCE_OF_RESOURCE,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "parent": {
            "target": RESOURCE_PARENT,
        },
    },
)

TIMESTAMP_COMPARATOR = Schema.collection(
    id=ShapeID("borneo#TimestampComparator"),
    type=ShapeType.ENUM,
    traits=[
        Trait(
            id=ShapeID("smithy.api#suppress"),
            value=[
                "ShouldHaveUsedTimestamp",
            ],
        ),
    ],
    members={
        "AFTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="after"),
            ],
        },
        "BEFORE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="before"),
            ],
        },
    },
)

TIME_FILTER = Schema.collection(
    id=ShapeID("borneo#TimeFilter"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": TIMESTAMP_COMPARATOR,
        },
        "value": {
            "target": TIMESTAMP,
        },
    },
)

INFO_TYPE_FILTER_OPERATION = Schema.collection(
    id=ShapeID("borneo#InfoTypeFilterOperation"),
    type=ShapeType.ENUM,
    members={
        "AND": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AND"),
            ],
        },
        "OR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OR"),
            ],
        },
    },
)

INFO_TYPES_COMBINATION_FILTER = Schema.collection(
    id=ShapeID("borneo#InfoTypesCombinationFilter"),
    members={
        "infoTypes": {
            "target": UNIQUE_STRING_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "ops": {
            "target": INFO_TYPE_FILTER_OPERATION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

INVENTORY_TAG_FILTER = Schema.collection(
    id=ShapeID("borneo#InventoryTagFilter"),
    members={
        "source": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tagKey": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tagValue": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

INVENTORY_TAG_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#InventoryTagFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": INVENTORY_TAG_FILTER,
        },
    },
)

SEVERITY_LEVEL = Schema.collection(
    id=ShapeID("borneo#SeverityLevel"),
    type=ShapeType.ENUM,
    members={
        "INFORMATIONAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="INFORMATIONAL"),
            ],
        },
        "LOW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="LOW"),
            ],
        },
        "MEDIUM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MEDIUM"),
            ],
        },
        "HIGH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="HIGH"),
            ],
        },
        "CRITICAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CRITICAL"),
            ],
        },
    },
)

SEVERITY_LIST = Schema.collection(
    id=ShapeID("borneo#SeverityList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": SEVERITY_LEVEL,
        },
    },
)

LEAF_RESOURCE_FILTER = Schema.collection(
    id=ShapeID("borneo#LeafResourceFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "account": {
            "target": UNIQUE_STRING_LIST,
        },
        "projectIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "instance": {
            "target": UNIQUE_STRING_LIST,
        },
        "database": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataset": {
            "target": UNIQUE_STRING_LIST,
        },
        "schema": {
            "target": UNIQUE_STRING_LIST,
        },
        "driveId": {
            "target": UNIQUE_STRING_LIST,
        },
        "orgUnitId": {
            "target": UNIQUE_STRING_LIST,
        },
        "driveType": {
            "target": UNIQUE_STRING_LIST,
        },
        "region": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "parentId": {
            "target": STRING,
        },
        "resourceId": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceType": {
            "target": UNIQUE_STRING_LIST,
        },
        "scanned": {
            "target": BOOLEAN,
        },
        "infoTypes": {
            "target": INFO_TYPES_COMBINATION_FILTER,
        },
        "classification": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
        "spaceStatus": {
            "target": UNIQUE_STRING_LIST,
        },
        "spaceType": {
            "target": UNIQUE_STRING_LIST,
        },
        "severityScore": {
            "target": SEVERITY_LIST,
        },
        "resourceTags": {
            "target": INVENTORY_TAG_FILTER_LIST,
        },
        "noOwner": {
            "target": BOOLEAN,
        },
        "hasOwner": {
            "target": BOOLEAN,
        },
        "firstSeen": {
            "target": TIME_FILTER,
        },
        "catalog": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_CATALOG_LEAF_RESOURCES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListCatalogLeafResourcesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "sourceType": {
            "target": STRING,
        },
        "filter": {
            "target": LEAF_RESOURCE_FILTER,
        },
        "include": {
            "target": ADDITIONAL_DATA_OPTIONS,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LEAF_RESOURCE_PARENT = Schema.collection(
    id=ShapeID("borneo#LeafResourceParent"),
    members={
        "name": {
            "target": STRING,
        },
    },
)

SEVERITY_COUNT = Schema.collection(
    id=ShapeID("borneo#SeverityCount"),
    members={
        "severity": {
            "target": SEVERITY_LEVEL,
        },
        "count": {
            "target": INTEGER,
        },
    },
)

SEVERITY_COUNT_LIST = Schema.collection(
    id=ShapeID("borneo#SeverityCountList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SEVERITY_COUNT,
        },
    },
)

LEAF_RESOURCES_DATA_RECORD_MEMBER = Schema.collection(
    id=ShapeID("borneo#LeafResourcesDataRecordMember"),
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "parentId": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "violationMetrics": {
            "target": SEVERITY_COUNT_LIST,
        },
        "frameworkExceptionsCount": {
            "target": INTEGER,
        },
        "parent": {
            "target": LEAF_RESOURCE_PARENT,
        },
    },
)

LEAF_RESOURCES_DATA_LIST = Schema.collection(
    id=ShapeID("borneo#LeafResourcesDataList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": LEAF_RESOURCES_DATA_RECORD_MEMBER,
        },
    },
)

LIST_CATALOG_LEAF_RESOURCES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListCatalogLeafResourcesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resources": {
            "target": LEAF_RESOURCES_DATA_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

LIST_CATALOG_LEAF_RESOURCES_EXPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#ListCatalogLeafResourcesExportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "sourceType": {
            "target": STRING,
        },
        "filter": {
            "target": LEAF_RESOURCE_FILTER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "detailed": {
            "target": BOOLEAN,
        },
    },
)

LIST_CATALOG_LEAF_RESOURCES_EXPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListCatalogLeafResourcesExportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
        },
    },
)

CHAT_HISTORY = Schema.collection(
    id=ShapeID("borneo#ChatHistory"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DOCUMENT,
        },
    },
)

GET_CHATBOT_RESPONSE_INPUT = Schema.collection(
    id=ShapeID("borneo#GetChatbotResponseInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "query": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "chatHistory": {
            "target": CHAT_HISTORY,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
    },
)

LINKS = Schema.collection(
    id=ShapeID("borneo#Links"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DOCUMENT,
        },
    },
)

GET_CHATBOT_RESPONSE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#GetChatbotResponseOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#ChatResponse"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "id": {
            "target": STRING,
        },
        "answer": {
            "target": STRING,
        },
        "relevantLinks": {
            "target": LINKS,
        },
        "recommendations": {
            "target": STRING,
        },
        "summary": {
            "target": STRING,
        },
    },
)

UPDATEFEEDBACK_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdatefeedbackInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "postId": {
            "target": STRING,
        },
        "rating": {
            "target": INTEGER,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
    },
)

UPDATEFEEDBACK_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdatefeedbackOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#StatusResponse",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "status": {
            "target": STRING,
        },
    },
)

CONNECTOR_ID = Schema(
    id=ShapeID("borneo#ConnectorId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

CONNECTOR_NAME = Schema(
    id=ShapeID("borneo#ConnectorName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9.,_ @+=-]{1,100}$"),
    ],
)

CONNECTOR_STATE = Schema.collection(
    id=ShapeID("borneo#ConnectorState"),
    type=ShapeType.ENUM,
    members={
        "DEPLOYEMENT_SUCCESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="deployment_success"),
            ],
        },
        "DEPLOYEMENT_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="deployment_failed"),
            ],
        },
        "HOSTCONNECTIVITY_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="hostconnectivity_failed"
                ),
            ],
        },
        "CREDENTIALCHECK_FAILED": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="credentialcheck_failed"
                ),
            ],
        },
        "PENDING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pending"),
            ],
        },
        "AVAILABLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="available"),
            ],
        },
        "DESTROYING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="destroying"),
            ],
        },
        "DESTROYED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="destroyed"),
            ],
        },
        "UNAVAILABLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="unavailable"),
            ],
        },
    },
)

CONNECTOR_STATUS_DETAILS = Schema.collection(
    id=ShapeID("borneo#ConnectorStatusDetails"),
    members={
        "validationTime": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "validationMessage": {
            "target": STRING,
        },
        "state": {
            "target": CONNECTOR_STATE,
        },
    },
)

CRON_VALUES = Schema.collection(
    id=ShapeID("borneo#CronValues"),
    type=ShapeType.ENUM,
    members={
        "EVERY_30_MIN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="*/30 * * * *"),
            ],
        },
        "EVERY_1_HOUR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 */1 * * *"),
            ],
        },
        "EVERY_4_HOUR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 */4 * * *"),
            ],
        },
        "EVERY_6_HOUR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 */6 * * *"),
            ],
        },
        "EVERY_8_HOUR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 */8 * * *"),
            ],
        },
        "EVERY_12_HOUR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 */12 * * *"),
            ],
        },
        "EVERY_1_DAY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 0 * * *"),
            ],
        },
        "EVERY_1_WEEK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 0 * * 0"),
            ],
        },
        "EVERY_1_MONTH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 0 1 * *"),
            ],
        },
        "EVERY_3_MONTH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 0 1 1,4,7,10 *"),
            ],
        },
        "EVERY_6_MONTH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0 0 1 1,7 *"),
            ],
        },
        "CUSTOM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CUSTOM"),
            ],
        },
    },
)

DATA_PLANE_ID = Schema(
    id=ShapeID("borneo#DataPlaneId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

DESCRIBE_CONNECTOR_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeConnectorInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "connectorId": {
            "target": CONNECTOR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_CONNECTOR_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeConnectorOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "connectorId": {
            "target": CONNECTOR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": CONNECTOR_NAME,
        },
        "statusDetails": {
            "target": CONNECTOR_STATUS_DETAILS,
        },
        "state": {
            "target": CONNECTOR_STATE,
        },
        "dataPlaneId": {
            "target": DATA_PLANE_ID,
        },
        "resourceType": {
            "target": STRING,
        },
        "connectorType": {
            "target": STRING,
        },
        "resourceId": {
            "target": RESOURCE_ID,
        },
        "region": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "params": {
            "target": OPEN_PROPERTIES,
        },
        "resourceAccountId": {
            "target": STRING,
        },
        "gcpConnectionId": {
            "target": STRING,
        },
        "nextMetaDataSyncSchedule": {
            "target": TIMESTAMP,
        },
        "isMetaDataSyncRunning": {
            "target": BOOLEAN,
        },
        "metaDataSyncInterval": {
            "target": CRON_VALUES,
        },
        "customMetaDataSyncInterval": {
            "target": STRING,
        },
        "createdBy": {
            "target": STRING,
        },
    },
)

CONNECTOR_FILTER = Schema.collection(
    id=ShapeID("borneo#ConnectorFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "names": {
            "target": UNIQUE_STRING_LIST,
        },
        "states": {
            "target": UNIQUE_STRING_LIST,
        },
        "activeStates": {
            "target": BOOLEAN,
        },
        "connectorIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataPlaneIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "connectorTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_CONNECTORS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListConnectorsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": CONNECTOR_FILTER,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

CONNECTOR_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#ConnectorListMember"),
    members={
        "connectorId": {
            "target": CONNECTOR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": CONNECTOR_NAME,
        },
        "statusDetails": {
            "target": CONNECTOR_STATUS_DETAILS,
        },
        "state": {
            "target": CONNECTOR_STATE,
        },
        "dataPlaneId": {
            "target": DATA_PLANE_ID,
        },
        "resourceType": {
            "target": STRING,
        },
        "connectorType": {
            "target": STRING,
        },
        "resourceId": {
            "target": RESOURCE_ID,
        },
        "region": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "params": {
            "target": OPEN_PROPERTIES,
        },
        "resourceAccountId": {
            "target": STRING,
        },
        "gcpConnectionId": {
            "target": STRING,
        },
        "nextMetaDataSyncSchedule": {
            "target": TIMESTAMP,
        },
        "isMetaDataSyncRunning": {
            "target": BOOLEAN,
        },
        "metaDataSyncInterval": {
            "target": CRON_VALUES,
        },
        "customMetaDataSyncInterval": {
            "target": STRING,
        },
        "createdBy": {
            "target": STRING,
        },
    },
)

CONNECTORS_LIST = Schema.collection(
    id=ShapeID("borneo#ConnectorsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": CONNECTOR_LIST_MEMBER,
        },
    },
)

LIST_CONNECTORS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListConnectorsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "connectors": {
            "target": CONNECTORS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

CREATE_AND_SEND_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateAndSendDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dashboardReportId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

CREATE_AND_SEND_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateAndSendDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

REPORT_RECIPIENTS = Schema.collection(
    id=ShapeID("borneo#ReportRecipients"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
        },
    },
)

REPORT_SPECIFIC_TYPE_FILTER = Schema.collection(
    id=ShapeID("borneo#ReportSpecificTypeFilter"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

REPORT_TYPE = Schema.collection(
    id=ShapeID("borneo#ReportType"),
    type=ShapeType.ENUM,
    members={
        "PRIVACY_OPS": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="PRIVACY_OPS_DASHBOARD"
                ),
            ],
        },
        "DATA_DISCOVERY": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="DATA_DISCOVERY_DASHBOARD"
                ),
            ],
        },
        "PRIVACY_OPS_DATA_FLOW": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="PRIVACY_OPS_DATA_FLOW"
                ),
            ],
        },
        "MULTI_ENTITY_PRIVACY_REPORT": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="MULTI_ENTITY_PRIVACY_REPORT",
                ),
            ],
        },
        "SENSITIVE_DATA_DISTRIBUTION": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="SENSITIVE_DATA_DISTRIBUTION",
                ),
            ],
        },
        "PERSONAL_VIOLATIONS_OVERVIEW": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="PERSONAL_VIOLATIONS_OVERVIEW",
                ),
            ],
        },
        "INFRASTRUCTURE_CHANGES": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="INFRASTRUCTURE_CHANGES"
                ),
            ],
        },
        "EXECUTIVE_REPORT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="EXECUTIVE_REPORT"),
            ],
        },
        "SCANS_SUMMARY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SCANS_SUMMARY"),
            ],
        },
        "ROPA_UPDATES_REPORT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ROPA_UPDATES_REPORT"),
            ],
        },
    },
)

REPORT_TYPE_LIST = Schema.collection(
    id=ShapeID("borneo#ReportTypeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": REPORT_TYPE,
        },
    },
)

ROLE = Schema.collection(
    id=ShapeID("borneo#Role"),
    type=ShapeType.ENUM,
    members={
        "ADMIN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="borneo_admin"),
            ],
        },
        "ENGINEER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="borneo_engineer"),
            ],
        },
        "ANALYST": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="borneo_analyst"),
            ],
        },
        "NO_ACCESS_ROLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="no_access_role"),
            ],
        },
        "DATA_ENGINEER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="data_engineer"),
            ],
        },
        "COMPLIANCE_ENGINEER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="compliance_engineer"),
            ],
        },
        "PRIVACY_SUPERVISOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="privacy_supervisor"),
            ],
        },
        "DEPARTMENT_COORDINATOR": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="department_coordinator"
                ),
            ],
        },
    },
)

REPORT_RECIPIENTS_ROLES = Schema.collection(
    id=ShapeID("borneo#ReportRecipientsRoles"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ROLE,
        },
    },
)

REPORT_STATUS = Schema.collection(
    id=ShapeID("borneo#ReportStatus"),
    type=ShapeType.ENUM,
    members={
        "SCHEDULED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SCHEDULED"),
            ],
        },
        "ONCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ONCE"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
    },
)

CREATE_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "reportTypes": {
            "target": REPORT_TYPE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "recipientsEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "externalEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "roles": {
            "target": REPORT_RECIPIENTS_ROLES,
        },
        "status": {
            "target": REPORT_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "frequency": {
            "target": CRON_VALUES,
        },
        "createdBy": {
            "target": STRING,
        },
        "triggerImmediately": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "filters": {
            "target": REPORT_SPECIFIC_TYPE_FILTER,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

CREATE_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DASHBOARD_REPORT_DELIVERY = Schema.collection(
    id=ShapeID("borneo#DashboardReportDelivery"),
    members={
        "reportDeliveryId": {
            "target": STRING,
        },
        "reportEditionId": {
            "target": STRING,
        },
        "email": {
            "target": STRING,
        },
        "tenantId": {
            "target": STRING,
        },
        "status": {
            "target": STRING,
        },
    },
)

DASHBOARD_REPORT_DELIVERY_LIST = Schema.collection(
    id=ShapeID("borneo#DashboardReportDeliveryList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DASHBOARD_REPORT_DELIVERY,
        },
    },
)

REPORT_EDITION_STATUS = Schema.collection(
    id=ShapeID("borneo#ReportEditionStatus"),
    type=ShapeType.ENUM,
    members={
        "CREATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CREATED"),
            ],
        },
        "FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="FAILED"),
            ],
        },
    },
)

DASHBOARD_REPORT_EDITION_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DashboardReportEditionListMember"),
    members={
        "reportEditionId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "dashboardReportId": {
            "target": UUID,
        },
        "tenantId": {
            "target": STRING,
        },
        "frequency": {
            "target": CRON_VALUES,
        },
        "recipientsCount": {
            "target": INTEGER,
        },
        "status": {
            "target": REPORT_EDITION_STATUS,
        },
        "url": {
            "target": STRING,
        },
        "reportDelivery": {
            "target": DASHBOARD_REPORT_DELIVERY_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DASHBOARD_REPORT_EDITION_LIST = Schema.collection(
    id=ShapeID("borneo#DashboardReportEditionList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DASHBOARD_REPORT_EDITION_LIST_MEMBER,
        },
    },
)

DESCRIBE_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "reportTypes": {
            "target": REPORT_TYPE_LIST,
        },
        "recipientsEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "externalEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "roles": {
            "target": REPORT_RECIPIENTS_ROLES,
        },
        "frequency": {
            "target": CRON_VALUES,
        },
        "status": {
            "target": REPORT_STATUS,
        },
        "reportEdition": {
            "target": DASHBOARD_REPORT_EDITION_LIST,
        },
        "createdBy": {
            "target": STRING,
        },
        "lastSentTime": {
            "target": TIMESTAMP,
        },
        "nextSendTime": {
            "target": TIMESTAMP,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportType": {
            "target": REPORT_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_FOR_SUPER_ADMIN_INPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportForSuperAdminInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportType": {
            "target": REPORT_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_FOR_SUPER_ADMIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportForSuperAdminOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
        },
    },
)

CRON_VALUES_LIST = Schema.collection(
    id=ShapeID("borneo#CronValuesList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": CRON_VALUES,
        },
    },
)

REPORT_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#ReportSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "type": {
            "target": REPORT_TYPE_LIST,
        },
        "frequency": {
            "target": CRON_VALUES_LIST,
        },
    },
)

LIST_REPORT_SCHEDULES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListReportSchedulesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": REPORT_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DASHBOARD_REPORT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DashboardReportListMember"),
    members={
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "reportTypes": {
            "target": REPORT_TYPE_LIST,
        },
        "recipientsEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "externalEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "roles": {
            "target": REPORT_RECIPIENTS_ROLES,
        },
        "frequency": {
            "target": CRON_VALUES,
        },
        "status": {
            "target": REPORT_STATUS,
        },
        "reportEdition": {
            "target": DASHBOARD_REPORT_EDITION_LIST,
        },
        "createdBy": {
            "target": STRING,
        },
        "lastSentTime": {
            "target": TIMESTAMP,
        },
        "nextSendTime": {
            "target": TIMESTAMP,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DASHBOARD_REPORT_LIST = Schema.collection(
    id=ShapeID("borneo#DashboardReportList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DASHBOARD_REPORT_LIST_MEMBER,
        },
    },
)

LIST_REPORT_SCHEDULES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListReportSchedulesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReports": {
            "target": DASHBOARD_REPORT_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

REMOVE_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DASHBOARD_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "recipientsEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "externalEmail": {
            "target": REPORT_RECIPIENTS,
        },
        "roles": {
            "target": REPORT_RECIPIENTS_ROLES,
        },
        "frequency": {
            "target": CRON_VALUES,
        },
    },
)

UPDATE_DASHBOARD_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReportId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DASHBOARD_REPORT_EDITION_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDashboardReportEditionInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportEditionId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_DASHBOARD_REPORT_EDITION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDashboardReportEditionOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "reportEditionId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "dashboardReportId": {
            "target": UUID,
        },
        "tenantId": {
            "target": STRING,
        },
        "frequency": {
            "target": CRON_VALUES,
        },
        "recipientsCount": {
            "target": INTEGER,
        },
        "status": {
            "target": REPORT_EDITION_STATUS,
        },
        "url": {
            "target": STRING,
        },
        "reportDelivery": {
            "target": DASHBOARD_REPORT_DELIVERY_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_EDITION_INPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportEditionInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportEditionId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DOWNLOAD_DASHBOARD_REPORT_EDITION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DownloadDashboardReportEditionOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
        },
    },
)

LIST_REPORTS_EDITION_INPUT = Schema.collection(
    id=ShapeID("borneo#ListReportsEditionInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dashboardReportId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_REPORTS_EDITION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListReportsEditionOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dashboardReportEditions": {
            "target": DASHBOARD_REPORT_EDITION_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DASHBOARD_USER_TYPE = Schema.collection(
    id=ShapeID("borneo#DashboardUserType"),
    type=ShapeType.ENUM,
    members={
        "OKTA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OKTA"),
            ],
        },
        "GCP": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="GCP"),
            ],
        },
    },
)

DASHBOARD_USER_FILTER = Schema.collection(
    id=ShapeID("borneo#DashboardUserFilter"),
    members={
        "type": {
            "target": DASHBOARD_USER_TYPE,
        },
        "id": {
            "target": STRING,
        },
    },
)

DASHBOARD_USER_ROLES = Schema.collection(
    id=ShapeID("borneo#DashboardUserRoles"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ROLE,
        },
    },
)

USER_ORGANISATION = Schema.collection(
    id=ShapeID("borneo#UserOrganisation"),
    members={
        "organisationId": {
            "target": INTEGER,
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "departments": {
            "target": UUID_COLLECTION,
        },
    },
)

USER_ORGANISATIONS = Schema.collection(
    id=ShapeID("borneo#UserOrganisations"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": USER_ORGANISATION,
        },
    },
)

CREATE_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "email": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
        },
        "name": {
            "target": STRING,
        },
        "filter": {
            "target": DASHBOARD_USER_FILTER,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

CREATE_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDashboardUserOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "updated": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

DESCRIBE_CURRENT_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCurrentUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
)

LANGUAGE_TYPE = Schema.collection(
    id=ShapeID("borneo#LanguageType"),
    type=ShapeType.ENUM,
    members={
        "EN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="en"),
            ],
        },
        "HI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="hi"),
            ],
        },
        "ES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="es"),
            ],
        },
        "DE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="de"),
            ],
        },
        "AR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ar"),
            ],
        },
        "FR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fr"),
            ],
        },
        "IT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="it"),
            ],
        },
        "ZH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="zh"),
            ],
        },
        "PT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pt"),
            ],
        },
        "ES_MX": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="es-MX"),
            ],
        },
        "JA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ja"),
            ],
        },
        "ES_EC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="es-EC"),
            ],
        },
    },
)

DESCRIBE_CURRENT_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCurrentUserOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DashboardUserRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
        },
        "superAdmin": {
            "target": BOOLEAN,
        },
        "enabled": {
            "target": BOOLEAN,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "provider": {
            "target": STRING,
        },
        "externalProvider": {
            "target": BOOLEAN,
        },
        "tenantId": {
            "target": STRING,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "companyName": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

DISABLE_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#DisableDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

DISABLE_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DisableDashboardUserOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DashboardUserRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
        },
        "superAdmin": {
            "target": BOOLEAN,
        },
        "enabled": {
            "target": BOOLEAN,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "provider": {
            "target": STRING,
        },
        "externalProvider": {
            "target": BOOLEAN,
        },
        "tenantId": {
            "target": STRING,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "companyName": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

ENABLE_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#EnableDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

ENABLE_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#EnableDashboardUserOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DashboardUserRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
        },
        "superAdmin": {
            "target": BOOLEAN,
        },
        "enabled": {
            "target": BOOLEAN,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "provider": {
            "target": STRING,
        },
        "externalProvider": {
            "target": BOOLEAN,
        },
        "tenantId": {
            "target": STRING,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "companyName": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

LIST_DASHBOARD_USERS_FILTER = Schema.collection(
    id=ShapeID("borneo#ListDashboardUsersFilter"),
    members={
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "tenantId": {
            "target": STRING,
        },
        "organisationId": {
            "target": INTEGER,
        },
        "departments": {
            "target": UNIQUE_STRING_LIST,
        },
        "enabled": {
            "target": BOOLEAN,
        },
    },
)

LIST_DASHBOARD_USERS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDashboardUsersInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": LIST_DASHBOARD_USERS_FILTER,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

DASHBOARD_USER_RECORD = Schema.collection(
    id=ShapeID("borneo#DashboardUserRecord"),
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "roles": {
            "target": DASHBOARD_USER_ROLES,
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
        },
        "superAdmin": {
            "target": BOOLEAN,
        },
        "enabled": {
            "target": BOOLEAN,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "provider": {
            "target": STRING,
        },
        "externalProvider": {
            "target": BOOLEAN,
        },
        "tenantId": {
            "target": STRING,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "companyName": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

USERS_LIST = Schema.collection(
    id=ShapeID("borneo#UsersList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DASHBOARD_USER_RECORD,
        },
    },
)

LIST_DASHBOARD_USERS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDashboardUsersOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "users": {
            "target": USERS_LIST,
        },
        "count": {
            "target": INTEGER,
        },
    },
)

REMOVE_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

REMOVE_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDashboardUserOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

RESET_PASSWORD_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#ResetPasswordDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

RESET_PASSWORD_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ResetPasswordDashboardUserOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DASHBOARD_USER_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardUserInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

UPDATE_DASHBOARD_USER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardUserOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DASHBOARD_USER_ROLES_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardUserRolesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "username": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisations": {
            "target": USER_ORGANISATIONS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "previousRoles": {
            "target": DASHBOARD_USER_ROLES,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "updatedRoles": {
            "target": DASHBOARD_USER_ROLES,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

UPDATE_DASHBOARD_USER_ROLES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDashboardUserRolesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

PRIVACY_OPS_LONG_TEXT = Schema(
    id=ShapeID("borneo#PrivacyOpsLongText"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 2000,
            },
        ),
    ],
)

SHORT_DATA_BREACH_DESCRIPTION = Schema(
    id=ShapeID("borneo#ShortDataBreachDescription"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 1,
                "max": 100,
            },
        ),
    ],
)

CREATE_DATA_BREACH_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDataBreachInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "shortDescription": {
            "target": SHORT_DATA_BREACH_DESCRIPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "occurredAt": {
            "target": TIMESTAMP,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "description": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "howDiscovered": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "wasIntentional": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "kindOfData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "profilePeopleAffected": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "consequences": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "affectedPeopleFrom": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "numberAffectedPeople": {
            "target": INTEGER,
        },
        "securityMeasuresOrProtocols": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "measuresToPrevent": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "problemOfSecurityMeasures": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "peopleInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "authoritiesInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInformation": {
            "target": UUID_COLLECTION,
        },
        "createdBy": {
            "target": STRING,
        },
        "evaluatedBy": {
            "target": STRING,
        },
        "compromisedSensitiveData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "saveAsDraft": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "language": {
            "target": LANGUAGE_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

CREATE_DATA_BREACH_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDataBreachOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DATA_BREACH_LOCATION = Schema.collection(
    id=ShapeID("borneo#DataBreachLocation"),
    type=ShapeType.ENUM,
    members={
        "OUR_ORGANISATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ourOrganisation"),
            ],
        },
        "THIRD_PARTY_PROCESSOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="thirdPartyProcessor"),
            ],
        },
    },
)

DATA_BREACH_STATUS = Schema.collection(
    id=ShapeID("borneo#DataBreachStatus"),
    type=ShapeType.ENUM,
    members={
        "REPORT_IN_DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="report_in_draft"),
            ],
        },
        "PENDING_EVALUATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pending_evaluation"),
            ],
        },
        "EVALUATION_IN_DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="evaluation_in_draft"),
            ],
        },
        "COMPLETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="completed"),
            ],
        },
    },
)

DESCRIBE_DATA_BREACH_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDataBreachInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

TRANSLATIONS = Schema.collection(
    id=ShapeID("borneo#Translations"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": LANGUAGE_TYPE,
        },
        "value": {
            "target": STRING,
        },
    },
)

FIELD_TRANSLATIONS = Schema.collection(
    id=ShapeID("borneo#FieldTranslations"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": TRANSLATIONS,
        },
    },
)

DESCRIBE_DATA_BREACH_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDataBreachOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "shortDescription": {
            "target": SHORT_DATA_BREACH_DESCRIPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "occurredAt": {
            "target": TIMESTAMP,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "description": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "howDiscovered": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "wasIntentional": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "kindOfData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "profilePeopleAffected": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "consequences": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "affectedPeopleFrom": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "numberAffectedPeople": {
            "target": INTEGER,
        },
        "securityMeasuresOrProtocols": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "measuresToPrevent": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "problemOfSecurityMeasures": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "peopleInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "authoritiesInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInformation": {
            "target": UUID_COLLECTION,
        },
        "createdBy": {
            "target": STRING,
        },
        "evaluatedBy": {
            "target": STRING,
        },
        "compromisedSensitiveData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sequence": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "status": {
            "target": DATA_BREACH_STATUS,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

DESCRIBE_DATA_BREACH_EVALUATION_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDataBreachEvaluationInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

PRIVACY_OPS_STANDARD_TEXT = Schema(
    id=ShapeID("borneo#PrivacyOpsStandardText"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 300,
            },
        ),
    ],
)

RECIPIENT_ROLE = Schema.collection(
    id=ShapeID("borneo#RecipientRole"),
    type=ShapeType.ENUM,
    members={
        "CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="controller"),
            ],
        },
        "PROCESSOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="processor"),
            ],
        },
        "JOINT_CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="joint_controller"),
            ],
        },
        "SUB_PROCESSOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="sub_processor"),
            ],
        },
        "INDEPENDENT_CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="independent_controller"
                ),
            ],
        },
    },
)

DESCRIBE_DATA_BREACH_EVALUATION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDataBreachEvaluationOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "authoritiesNotified": {
            "target": BOOLEAN,
        },
        "reportLanguage": {
            "target": LANGUAGE_TYPE,
        },
        "evaluation": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "dataSubjectsNotified": {
            "target": BOOLEAN,
        },
        "processorNotified": {
            "target": BOOLEAN,
        },
        "processorsInvolved": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "companiesAffected": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "role": {
            "target": RECIPIENT_ROLE,
        },
        "dataBreachLocation": {
            "target": DATA_BREACH_LOCATION,
        },
        "dataBreachController": {
            "target": STRING,
        },
        "evaluatedBy": {
            "target": STRING,
        },
    },
)

DATA_BREACH_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#DataBreachSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "authoritiesNotified": {
            "target": BOOLEAN_LIST,
        },
        "owner": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_DATA_BREACH_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDataBreachInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DataBreachListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": DATA_BREACH_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DATA_BREACH_LIST_RECORD = Schema.collection(
    id=ShapeID("borneo#DataBreachListRecord"),
    members={
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sequence": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "shortDescription": {
            "target": SHORT_DATA_BREACH_DESCRIPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "occurredAt": {
            "target": TIMESTAMP,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "status": {
            "target": DATA_BREACH_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "evaluatedBy": {
            "target": STRING,
        },
    },
)

DATA_BREACH_LIST = Schema.collection(
    id=ShapeID("borneo#DataBreachList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DATA_BREACH_LIST_RECORD,
        },
    },
)

LIST_DATA_BREACH_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDataBreachOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DataBreachListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "dataBreaches": {
            "target": DATA_BREACH_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_DATA_BREACH_FILTER_TYPE = Schema.collection(
    id=ShapeID("borneo#ListDataBreachFilterType"),
    type=ShapeType.ENUM,
    members={
        "OWNER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="owner"),
            ],
        },
        "STATUS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="status"),
            ],
        },
    },
)

LIST_DATA_BREACH_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDataBreachFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filterType": {
            "target": LIST_DATA_BREACH_FILTER_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DATA_BREACH_FILTER_FILTER_OUTPUT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DataBreachFilterFilterOutputListMember"),
    members={
        "id": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
    },
)

DATA_BREACH_FILTER_FILTER_OUTPUT_LIST = Schema.collection(
    id=ShapeID("borneo#DataBreachFilterFilterOutputList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DATA_BREACH_FILTER_FILTER_OUTPUT_LIST_MEMBER,
        },
    },
)

LIST_DATA_BREACH_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDataBreachFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "entries": {
            "target": DATA_BREACH_FILTER_FILTER_OUTPUT_LIST,
        },
    },
)

REMOVE_DATA_BREACH_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDataBreachInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DATA_BREACH_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDataBreachOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

REMOVE_DATA_BREACH_EVALUATION_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDataBreachEvaluationInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DATA_BREACH_EVALUATION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDataBreachEvaluationOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DATA_BREACH_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDataBreachInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "shortDescription": {
            "target": SHORT_DATA_BREACH_DESCRIPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "occurredAt": {
            "target": TIMESTAMP,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "description": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "howDiscovered": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "wasIntentional": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "kindOfData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "profilePeopleAffected": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "consequences": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "affectedPeopleFrom": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "numberAffectedPeople": {
            "target": INTEGER,
        },
        "securityMeasuresOrProtocols": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "measuresToPrevent": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "problemOfSecurityMeasures": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "peopleInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "authoritiesInformed": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInformation": {
            "target": UUID_COLLECTION,
        },
        "createdBy": {
            "target": STRING,
        },
        "evaluatedBy": {
            "target": STRING,
        },
        "compromisedSensitiveData": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "saveAsDraft": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DATA_BREACH_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDataBreachOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DATA_BREACH_EVALUATION_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDataBreachEvaluationInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "dataBreachId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "authoritiesNotified": {
            "target": BOOLEAN,
        },
        "reportLanguage": {
            "target": LANGUAGE_TYPE,
        },
        "evaluation": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "dataSubjectsNotified": {
            "target": BOOLEAN,
        },
        "processorNotified": {
            "target": BOOLEAN,
        },
        "processorsInvolved": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "companiesAffected": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "role": {
            "target": RECIPIENT_ROLE,
        },
        "dataBreachLocation": {
            "target": DATA_BREACH_LOCATION,
        },
        "dataBreachController": {
            "target": STRING,
        },
        "evaluatedBy": {
            "target": STRING,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "saveAsDraft": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DATA_BREACH_EVALUATION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDataBreachEvaluationOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

DEPARTMENT_MODEL = Schema(
    id=ShapeID("borneo#DepartmentModel"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 1,
                "max": 255,
            },
        ),
    ],
)

CREATE_DEPARTMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDepartmentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

DEPARTMENT_ID = Schema(
    id=ShapeID("borneo#DepartmentId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

CREATE_DEPARTMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDepartmentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DEPARTMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDepartmentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_DEPARTMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDepartmentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DEPARTMENT_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#DepartmentSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "departmentIds": {
            "target": UUID_COLLECTION,
        },
    },
)

LIST_DEPARTMENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDepartmentsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DepartmentListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": DEPARTMENT_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DEPARTMENT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DepartmentListMember"),
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
        },
        "employees": {
            "target": INTEGER,
        },
        "processingActivities": {
            "target": INTEGER,
        },
        "numberOfUsers": {
            "target": INTEGER,
        },
    },
)

DEPARTMENT_LIST = Schema.collection(
    id=ShapeID("borneo#DepartmentList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DEPARTMENT_LIST_MEMBER,
        },
    },
)

LIST_DEPARTMENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDepartmentsOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DepartmentListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "departments": {
            "target": DEPARTMENT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_DEPARTMENTS_FOR_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDepartmentsForFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
)

DEPARTMENT_FOR_FILTER_MEMBER = Schema.collection(
    id=ShapeID("borneo#DepartmentForFilterMember"),
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DEPARTMENT_FOR_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#DepartmentForFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DEPARTMENT_FOR_FILTER_MEMBER,
        },
    },
)

LIST_DEPARTMENTS_FOR_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDepartmentsForFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "departments": {
            "target": DEPARTMENT_FOR_FILTER_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

REMOVE_DEPARTMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDepartmentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DEPARTMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDepartmentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DEPARTMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDepartmentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
        },
    },
)

UPDATE_DEPARTMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDepartmentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DISCOVERED_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredDocumentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DOCUMENT_DOMAIN_STATUS = Schema.collection(
    id=ShapeID("borneo#DocumentDomainStatus"),
    type=ShapeType.ENUM,
    members={
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
        "ACTIVE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ACTIVE"),
            ],
        },
    },
)

DISCOVERED_DOCUMENT_STATUS = Schema.collection(
    id=ShapeID("borneo#DiscoveredDocumentStatus"),
    type=ShapeType.ENUM,
    members={
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NEW"),
            ],
        },
        "IGNORED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="IGNORED"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
        "ADDED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ADDED"),
            ],
        },
        "DOMAIN_DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DOMAIN_DELETED"),
            ],
        },
    },
)

DESCRIBE_DISCOVERED_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredDocumentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "domainId": {
            "target": STRING,
        },
        "domainName": {
            "target": STRING,
        },
        "documentName": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_DOCUMENT_STATUS,
        },
        "domainStatus": {
            "target": DOCUMENT_DOMAIN_STATUS,
        },
        "region": {
            "target": STRING,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DISCOVERED_DOCUMENTS_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#DiscoveredDocumentsSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_DOCUMENT_STATUS,
        },
    },
)

LIST_DISCOVERED_DOCUMENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredDocumentsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": DISCOVERED_DOCUMENTS_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DISCOVERED_DOCUMENTS_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DiscoveredDocumentsListMember"),
    members={
        "discoveredDocumentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "domainId": {
            "target": STRING,
        },
        "domainName": {
            "target": STRING,
        },
        "documentName": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_DOCUMENT_STATUS,
        },
        "domainStatus": {
            "target": DOCUMENT_DOMAIN_STATUS,
        },
        "region": {
            "target": STRING,
        },
        "discoveredAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DISCOVERED_DOCUMENTS_LIST = Schema.collection(
    id=ShapeID("borneo#DiscoveredDocumentsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DISCOVERED_DOCUMENTS_LIST_MEMBER,
        },
    },
)

LIST_DISCOVERED_DOCUMENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredDocumentsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredDocuments": {
            "target": DISCOVERED_DOCUMENTS_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

UPDATE_DISCOVERED_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDiscoveredDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredDocumentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "status": {
            "target": DISCOVERED_DOCUMENT_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DISCOVERED_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDiscoveredDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

DESCRIBE_DISCOVERED_INFOTYPES_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredInfotypesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredInfotypeId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

LEGAL_DOCUMENT_INFOTYPES = Schema.collection(
    id=ShapeID("borneo#LegalDocumentInfotypes"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
        },
    },
)

LEGAL_DOCUMENT_STATUS = Schema.collection(
    id=ShapeID("borneo#LegalDocumentStatus"),
    type=ShapeType.ENUM,
    members={
        "CREATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CREATED"),
            ],
        },
        "SCANNING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SCANNING"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
    },
)

LEGAL_DOCUMENT_TYPE = Schema.collection(
    id=ShapeID("borneo#LegalDocumentType"),
    type=ShapeType.ENUM,
    members={
        "PRIVACY_POLICY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="PRIVACY_POLICY"),
            ],
        },
        "DATA_PROCESSING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DATA_PROCESSING"),
            ],
        },
    },
)

LEGAL_DOCUMENT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#LegalDocumentListMember"),
    members={
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": LEGAL_DOCUMENT_TYPE,
        },
        "source": {
            "target": STRING,
        },
        "documentLink": {
            "target": STRING,
        },
        "bucketUri": {
            "target": STRING,
        },
        "discoveredInfotypes": {
            "target": LEGAL_DOCUMENT_INFOTYPES,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "region": {
            "target": STRING,
        },
        "status": {
            "target": LEGAL_DOCUMENT_STATUS,
        },
        "isDiscoverInfotype": {
            "target": BOOLEAN,
        },
        "fromDiscoveredDocumentId": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

LEGAL_DOCUMENT_LIST = Schema.collection(
    id=ShapeID("borneo#LegalDocumentList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": LEGAL_DOCUMENT_LIST_MEMBER,
        },
    },
)

DISCOVERED_INFOTYPES_STATUS = Schema.collection(
    id=ShapeID("borneo#DiscoveredInfotypesStatus"),
    type=ShapeType.ENUM,
    members={
        "APPROVED_AUTOMATICALLY": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="APPROVED_AUTOMATICALLY"
                ),
            ],
        },
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NEW"),
            ],
        },
        "IGNORED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="IGNORED"),
            ],
        },
        "APPROVED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="APPROVED"),
            ],
        },
        "REQUESTED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="REQUESTED"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
        "NOT_PRESENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NOT_PRESENT"),
            ],
        },
    },
)

DESCRIBE_DISCOVERED_INFOTYPES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredInfotypesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredInfotypeId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "keyword": {
            "target": UNIQUE_STRING_LIST,
        },
        "discovery": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_INFOTYPES_STATUS,
        },
        "lastDiscovered": {
            "target": TIMESTAMP,
        },
        "legalDocuments": {
            "target": LEGAL_DOCUMENT_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DISCOVERED_INFOTYPES_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#DiscoveredInfotypesSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_INFOTYPES_STATUS,
        },
    },
)

LIST_DISCOVERED_INFOTYPES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredInfotypesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": DISCOVERED_INFOTYPES_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DISCOVERED_INFOTYPES_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DiscoveredInfotypesListMember"),
    members={
        "discoveredInfotypeId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "keyword": {
            "target": UNIQUE_STRING_LIST,
        },
        "discovery": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_INFOTYPES_STATUS,
        },
        "lastDiscovered": {
            "target": TIMESTAMP,
        },
        "legalDocuments": {
            "target": LEGAL_DOCUMENT_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

DISCOVERED_INFOTYPES_LIST = Schema.collection(
    id=ShapeID("borneo#DiscoveredInfotypesList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DISCOVERED_INFOTYPES_LIST_MEMBER,
        },
    },
)

LIST_DISCOVERED_INFOTYPES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredInfotypesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredInfotypes": {
            "target": DISCOVERED_INFOTYPES_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

UPDATE_DISCOVERED_INFOTYPES_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDiscoveredInfotypesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredInfotypeId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "status": {
            "target": DISCOVERED_INFOTYPES_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DISCOVERED_INFOTYPES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDiscoveredInfotypesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredInfotypeId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DISCOVERED_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredRecipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DISCOVERY_SOURCE_NAME = Schema(
    id=ShapeID("borneo#DiscoverySourceName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 2000,
            },
        ),
    ],
)

DISCOVERY_SOURCE_LIST = Schema.collection(
    id=ShapeID("borneo#DiscoverySourceList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": DISCOVERY_SOURCE_NAME,
        },
    },
)

DESCRIBE_DISCOVERED_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDiscoveredRecipientOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#DiscoveredRecipientRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredRecipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "recipientModelId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "discoverySource": {
            "target": DISCOVERY_SOURCE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DISCOVERED_RECIPIENT_STATUS = Schema.collection(
    id=ShapeID("borneo#DiscoveredRecipientStatus"),
    type=ShapeType.ENUM,
    members={
        "IGNORED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ignored"),
            ],
        },
        "NEW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="new"),
            ],
        },
    },
)

DISCOVERED_RECIPIENT_FILTERS = Schema.collection(
    id=ShapeID("borneo#DiscoveredRecipientFilters"),
    members={
        "search": {
            "target": STRING,
        },
        "status": {
            "target": DISCOVERED_RECIPIENT_STATUS,
        },
        "discoverySource": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_DISCOVERED_RECIPIENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredRecipientsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "filter": {
            "target": DISCOVERED_RECIPIENT_FILTERS,
        },
    },
)

DISCOVERED_RECIPIENT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DiscoveredRecipientListMember"),
    members={
        "discoveredRecipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "recipientModelId": {
            "target": UUID,
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "discoverySource": {
            "target": DISCOVERY_SOURCE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "status": {
            "target": DISCOVERED_RECIPIENT_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "userCount": {
            "target": INTEGER,
        },
    },
)

DISCOVERED_RECIPIENT_LIST = Schema.collection(
    id=ShapeID("borneo#DiscoveredRecipientList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DISCOVERED_RECIPIENT_LIST_MEMBER,
        },
    },
)

LIST_DISCOVERED_RECIPIENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredRecipientsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "discoveredRecipients": {
            "target": DISCOVERED_RECIPIENT_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_DISCOVERED_RECIPIENTS_USERS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredRecipientsUsersInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "discoveredRecipientId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

OKTA_USER_STATUS = Schema.collection(
    id=ShapeID("borneo#OktaUserStatus"),
    type=ShapeType.ENUM,
    members={
        "ACTIVE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ACTIVE"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DELETED"),
            ],
        },
    },
)

USER_ID = Schema(
    id=ShapeID("borneo#UserId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

OKTA_USER_DISCOVERY_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#OktaUserDiscoveryListMember"),
    members={
        "userId": {
            "target": USER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "oktaUsername": {
            "target": STRING,
        },
        "firstName": {
            "target": STRING,
        },
        "lastName": {
            "target": STRING,
        },
        "oktaConnectionId": {
            "target": STRING,
        },
        "oktaEmail": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "addedToRegister": {
            "target": BOOLEAN,
        },
        "lastDiscoveredAt": {
            "target": TIMESTAMP,
        },
        "status": {
            "target": OKTA_USER_STATUS,
        },
    },
)

OKTA_USER_DISCOVERY_LIST = Schema.collection(
    id=ShapeID("borneo#OktaUserDiscoveryList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": OKTA_USER_DISCOVERY_LIST_MEMBER,
        },
    },
)

LIST_DISCOVERED_RECIPIENTS_USERS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDiscoveredRecipientsUsersOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "oktaUsers": {
            "target": OKTA_USER_DISCOVERY_LIST,
        },
    },
)

DOMAIN_FREQUENCY = Schema.collection(
    id=ShapeID("borneo#DomainFrequency"),
    type=ShapeType.ENUM,
    members={
        "MANUAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="manual"),
            ],
        },
        "EVERY_6_HOURS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="6h"),
            ],
        },
        "EVERY_12_HOURS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="12h"),
            ],
        },
        "EVERY_1_DAY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="1d"),
            ],
        },
        "EVERY_1_WEEK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="1w"),
            ],
        },
        "EVERY_30_DAYS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="30d"),
            ],
        },
    },
)

DOMAIN_NAME = Schema(
    id=ShapeID("borneo#DomainName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 500,
            },
        ),
    ],
)

CREATE_DOMAIN_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDomainInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": DOMAIN_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "frequency": {
            "target": DOMAIN_FREQUENCY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CREATE_DOMAIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDomainOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DOMAIN_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDomainInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DOCUMENTS_DISCOVERED_OF_DOMAIN_LIST = Schema.collection(
    id=ShapeID("borneo#DocumentsDiscoveredOfDomainList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
        },
    },
)

RECIPIENT_NAME = Schema(
    id=ShapeID("borneo#RecipientName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 255,
            },
        ),
    ],
)

RECIPIENTS_DISCOVERED_OF_DOMAIN_LIST = Schema.collection(
    id=ShapeID("borneo#RecipientsDiscoveredOfDomainList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RECIPIENT_NAME,
        },
    },
)

DOMAIN_STATUS = Schema.collection(
    id=ShapeID("borneo#DomainStatus"),
    type=ShapeType.ENUM,
    members={
        "DOMAIN_NOT_REACHED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="domain_not_reached"),
            ],
        },
        "IN_PROGRESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="in_progress"),
            ],
        },
        "COMPLETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="finished"),
            ],
        },
    },
)

DESCRIBE_DOMAIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDomainOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#DomainRecord"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DOMAIN_NAME,
        },
        "status": {
            "target": DOMAIN_STATUS,
        },
        "frequency": {
            "target": DOMAIN_FREQUENCY,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "recipients": {
            "target": RECIPIENTS_DISCOVERED_OF_DOMAIN_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "discoveredDocuments": {
            "target": DOCUMENTS_DISCOVERED_OF_DOMAIN_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

LIST_DOMAINS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListDomainsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

DOMAIN_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#DomainListMember"),
    members={
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DOMAIN_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "status": {
            "target": DOMAIN_STATUS,
        },
        "frequency": {
            "target": DOMAIN_FREQUENCY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "recipients": {
            "target": RECIPIENTS_DISCOVERED_OF_DOMAIN_LIST,
        },
        "discoveredDocuments": {
            "target": DOCUMENTS_DISCOVERED_OF_DOMAIN_LIST,
        },
    },
)

DOMAIN_LIST = Schema.collection(
    id=ShapeID("borneo#DomainList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DOMAIN_LIST_MEMBER,
        },
    },
)

LIST_DOMAINS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListDomainsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "domains": {
            "target": DOMAIN_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

POLL_DOMAIN_INPUT = Schema.collection(
    id=ShapeID("borneo#PollDomainInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

POLL_DOMAIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#PollDomainOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

REMOVE_DOMAIN_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDomainInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DOMAIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDomainOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DOMAIN_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDomainInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "domainId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": DOMAIN_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "frequency": {
            "target": DOMAIN_FREQUENCY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_DOMAIN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDomainOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

DPIA_LONG_TEXT = Schema(
    id=ShapeID("borneo#DpiaLongText"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 4000,
            },
        ),
    ],
)

DPIA_RISK_LIKELIHOOD = Schema.collection(
    id=ShapeID("borneo#DpiaRiskLikelihood"),
    type=ShapeType.ENUM,
    members={
        "NEGLIGIBLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="negligible"),
            ],
        },
        "UNLIKELY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="unlikely"),
            ],
        },
        "LIMITED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="limited"),
            ],
        },
        "LIKELY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="likely"),
            ],
        },
        "MAXIMUM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="maximum"),
            ],
        },
    },
)

DPIA_RISK_SEVERITY = Schema.collection(
    id=ShapeID("borneo#DpiaRiskSeverity"),
    type=ShapeType.ENUM,
    members={
        "VERY_LOW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="very_low"),
            ],
        },
        "LOW": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="low"),
            ],
        },
        "MEDIUM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="medium"),
            ],
        },
        "HIGH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="high"),
            ],
        },
        "VERY_HIGH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="very_high"),
            ],
        },
    },
)

DPIA_AVAILABILITY_RISK_IMPACT_ID = Schema(
    id=ShapeID("borneo#DpiaAvailabilityRiskImpactId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|discrimination|financial_loss|damage_reputation|economic|impediment|impediment_prevention|exclusion|physical_harm)$",
        ),
    ],
)

DPIA_CUSTOM_NAME_TEXT = Schema(
    id=ShapeID("borneo#DpiaCustomNameText"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 200,
            },
        ),
    ],
)

DPIA_AVAILABILITY_RISK_IMPACT = Schema.collection(
    id=ShapeID("borneo#DpiaAvailabilityRiskImpact"),
    members={
        "id": {
            "target": DPIA_AVAILABILITY_RISK_IMPACT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_AVAILABILITY_RISK_IMPACTS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaAvailabilityRiskImpactsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_AVAILABILITY_RISK_IMPACT,
        },
    },
)

DPIA_RISK_RISK_SOURCE_ID = Schema(
    id=ShapeID("borneo#DpiaRiskRiskSourceId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|hardware_error|software_error|employee_error|internal_attack|external_attack|force_majeure|infrastructure_issue)$",
        ),
    ],
)

DPIA_RISK_RISK_SOURCE = Schema.collection(
    id=ShapeID("borneo#DpiaRiskRiskSource"),
    members={
        "id": {
            "target": DPIA_RISK_RISK_SOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_RISK_RISK_SOURCES_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaRiskRiskSourcesCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_RISK_RISK_SOURCE,
        },
    },
)

DPIA_AVAILABILITY_RISK_THREAT_ID = Schema(
    id=ShapeID("borneo#DpiaAvailabilityRiskThreatId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|unauthorized_unlawful|processing|destruction_data|denial_data)$",
        ),
    ],
)

DPIA_AVAILABILITY_RISK_THREAT = Schema.collection(
    id=ShapeID("borneo#DpiaAvailabilityRiskThreat"),
    members={
        "id": {
            "target": DPIA_AVAILABILITY_RISK_THREAT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_AVAILABILITY_RISK_THREATS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaAvailabilityRiskThreatsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_AVAILABILITY_RISK_THREAT,
        },
    },
)

DPIA_AVAILABILITY_RISK = Schema.collection(
    id=ShapeID("borneo#DpiaAvailabilityRisk"),
    members={
        "threats": {
            "target": DPIA_AVAILABILITY_RISK_THREATS_COLLECTION,
        },
        "threatsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "impacts": {
            "target": DPIA_AVAILABILITY_RISK_IMPACTS_COLLECTION,
        },
        "impactsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "riskSources": {
            "target": DPIA_RISK_RISK_SOURCES_COLLECTION,
        },
        "riskSourcesComment": {
            "target": DPIA_LONG_TEXT,
        },
        "implementedToms": {
            "target": UUID_COLLECTION,
        },
        "implementedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "plannedToms": {
            "target": UUID_COLLECTION,
        },
        "plannedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "baselineSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "baselineLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "baselineComment": {
            "target": DPIA_LONG_TEXT,
        },
        "residualRiskSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "residualRiskLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "residualRiskComment": {
            "target": DPIA_LONG_TEXT,
        },
    },
)

DPIA_CONFIDENTIALITY_RISK_IMPACT_ID = Schema(
    id=ShapeID("borneo#DpiaConfidentialityRiskImpactId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|discrimination|identity_theft|financial_loss|damage_reputation|economic|impediment|impediment_prevention|exclusion|profiling|physical_harm)$",
        ),
    ],
)

DPIA_CONFIDENTIALITY_RISK_IMPACT = Schema.collection(
    id=ShapeID("borneo#DpiaConfidentialityRiskImpact"),
    members={
        "id": {
            "target": DPIA_CONFIDENTIALITY_RISK_IMPACT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_CONFIDENTIALITY_RISK_IMPACTS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaConfidentialityRiskImpactsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_CONFIDENTIALITY_RISK_IMPACT,
        },
    },
)

DPIA_CONFIDENTIALITY_RISK_THREAT_ID = Schema(
    id=ShapeID("borneo#DpiaConfidentialityRiskThreatId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|unauthorized_unlawful|processing|unauthorized_of_data|denial_data|use_data|processing_unanticipated_data|processing_beyond_retention)$",
        ),
    ],
)

DPIA_CONFIDENTIALITY_RISK_THREAT = Schema.collection(
    id=ShapeID("borneo#DpiaConfidentialityRiskThreat"),
    members={
        "id": {
            "target": DPIA_CONFIDENTIALITY_RISK_THREAT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_CONFIDENTIALITY_RISK_THREATS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaConfidentialityRiskThreatsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_CONFIDENTIALITY_RISK_THREAT,
        },
    },
)

DPIA_CONFIDENTIALITY_RISK = Schema.collection(
    id=ShapeID("borneo#DpiaConfidentialityRisk"),
    members={
        "threats": {
            "target": DPIA_CONFIDENTIALITY_RISK_THREATS_COLLECTION,
        },
        "threatsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "impacts": {
            "target": DPIA_CONFIDENTIALITY_RISK_IMPACTS_COLLECTION,
        },
        "impactsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "riskSources": {
            "target": DPIA_RISK_RISK_SOURCES_COLLECTION,
        },
        "riskSourcesComment": {
            "target": DPIA_LONG_TEXT,
        },
        "implementedToms": {
            "target": UUID_COLLECTION,
        },
        "implementedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "plannedToms": {
            "target": UUID_COLLECTION,
        },
        "plannedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "baselineSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "baselineLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "baselineComment": {
            "target": DPIA_LONG_TEXT,
        },
        "residualRiskSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "residualRiskLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "residualRiskComment": {
            "target": DPIA_LONG_TEXT,
        },
    },
)

DPIA_INTEGRITY_RISK_IMPACT_ID = Schema(
    id=ShapeID("borneo#DpiaIntegrityRiskImpactId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|financial_loss|company_standstill|damage_reputation|economic|impediment|impediment_prevention|exclusion|physical_harm)$",
        ),
    ],
)

DPIA_INTEGRITY_RISK_IMPACT = Schema.collection(
    id=ShapeID("borneo#DpiaIntegrityRiskImpact"),
    members={
        "id": {
            "target": DPIA_INTEGRITY_RISK_IMPACT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_INTEGRITY_RISK_IMPACTS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaIntegrityRiskImpactsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_INTEGRITY_RISK_IMPACT,
        },
    },
)

DPIA_INTEGRITY_RISK_THREAT_ID = Schema(
    id=ShapeID("borneo#DpiaIntegrityRiskThreatId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|unauthorized_unlawful|processing|processing_transparent|denial_data|destruction_data)$",
        ),
    ],
)

DPIA_INTEGRITY_RISK_THREAT = Schema.collection(
    id=ShapeID("borneo#DpiaIntegrityRiskThreat"),
    members={
        "id": {
            "target": DPIA_INTEGRITY_RISK_THREAT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DPIA_CUSTOM_NAME_TEXT,
        },
    },
)

DPIA_INTEGRITY_RISK_THREATS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DpiaIntegrityRiskThreatsCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DPIA_INTEGRITY_RISK_THREAT,
        },
    },
)

DPIA_INTEGRITY_RISK = Schema.collection(
    id=ShapeID("borneo#DpiaIntegrityRisk"),
    members={
        "threats": {
            "target": DPIA_INTEGRITY_RISK_THREATS_COLLECTION,
        },
        "threatsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "impacts": {
            "target": DPIA_INTEGRITY_RISK_IMPACTS_COLLECTION,
        },
        "impactsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "riskSources": {
            "target": DPIA_RISK_RISK_SOURCES_COLLECTION,
        },
        "riskSourcesComment": {
            "target": DPIA_LONG_TEXT,
        },
        "implementedToms": {
            "target": UUID_COLLECTION,
        },
        "implementedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "plannedToms": {
            "target": UUID_COLLECTION,
        },
        "plannedTomsComment": {
            "target": DPIA_LONG_TEXT,
        },
        "baselineSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "baselineLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "baselineComment": {
            "target": DPIA_LONG_TEXT,
        },
        "residualRiskSeverity": {
            "target": DPIA_RISK_SEVERITY,
        },
        "residualRiskLikelihood": {
            "target": DPIA_RISK_LIKELIHOOD,
        },
        "residualRiskComment": {
            "target": DPIA_LONG_TEXT,
        },
    },
)

DPIA_PRIVACY_FRAMEWORK = Schema.collection(
    id=ShapeID("borneo#DpiaPrivacyFramework"),
    members={
        "purposeLimitation": {
            "target": DPIA_LONG_TEXT,
        },
        "dataMinimisation": {
            "target": DPIA_LONG_TEXT,
        },
        "accuracy": {
            "target": DPIA_LONG_TEXT,
        },
        "retention": {
            "target": BOOLEAN,
        },
        "retentionComment": {
            "target": DPIA_LONG_TEXT,
        },
        "transparency": {
            "target": DPIA_LONG_TEXT,
        },
        "consent": {
            "target": DPIA_LONG_TEXT,
        },
        "dataRightsExercised": {
            "target": DPIA_LONG_TEXT,
        },
        "additionalComment": {
            "target": DPIA_LONG_TEXT,
        },
    },
)

DPIA_STATUS = Schema.collection(
    id=ShapeID("borneo#DpiaStatus"),
    type=ShapeType.ENUM,
    members={
        "DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="draft"),
            ],
        },
        "ACTIVATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="activated"),
            ],
        },
    },
)

CREATE_DPIA_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateDpiaInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "privacyFramework": {
            "target": DPIA_PRIVACY_FRAMEWORK,
        },
        "confidentiality": {
            "target": DPIA_CONFIDENTIALITY_RISK,
        },
        "integrity": {
            "target": DPIA_INTEGRITY_RISK,
        },
        "availability": {
            "target": DPIA_AVAILABILITY_RISK,
        },
        "additionalInformation": {
            "target": DPIA_LONG_TEXT,
        },
        "additionalInformationFiles": {
            "target": UUID_COLLECTION,
        },
        "status": {
            "target": DPIA_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

CREATE_DPIA_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateDpiaOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "dpiaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_DPIA_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDpiaInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dpiaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_DPIA_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeDpiaOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "privacyFramework": {
            "target": DPIA_PRIVACY_FRAMEWORK,
        },
        "confidentiality": {
            "target": DPIA_CONFIDENTIALITY_RISK,
        },
        "integrity": {
            "target": DPIA_INTEGRITY_RISK,
        },
        "availability": {
            "target": DPIA_AVAILABILITY_RISK,
        },
        "additionalInformation": {
            "target": DPIA_LONG_TEXT,
        },
        "additionalInformationFiles": {
            "target": UUID_COLLECTION,
        },
        "status": {
            "target": DPIA_STATUS,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "uploadedDpiaFileId": {
            "target": UUID,
        },
        "language": {
            "target": LANGUAGE_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

REMOVE_DPIA_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDpiaInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dpiaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_DPIA_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveDpiaOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_DPIA_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDpiaInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "dpiaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "privacyFramework": {
            "target": DPIA_PRIVACY_FRAMEWORK,
        },
        "confidentiality": {
            "target": DPIA_CONFIDENTIALITY_RISK,
        },
        "integrity": {
            "target": DPIA_INTEGRITY_RISK,
        },
        "availability": {
            "target": DPIA_AVAILABILITY_RISK,
        },
        "additionalInformation": {
            "target": DPIA_LONG_TEXT,
        },
        "additionalInformationFiles": {
            "target": UUID_COLLECTION,
        },
        "status": {
            "target": DPIA_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

UPDATE_DPIA_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateDpiaOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

VERIFICATION_TYPE = Schema.collection(
    id=ShapeID("borneo#VerificationType"),
    type=ShapeType.ENUM,
    members={
        "DSAR_DATA_DOWNLOAD_REQUEST": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="dsarDataDownloadRequest"
                ),
            ],
        },
        "DSAR_DATA_DELETION_REQUEST": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="dsarDataDeletionRequest"
                ),
            ],
        },
    },
)

VERIFY_EMAIL_INPUT = Schema.collection(
    id=ShapeID("borneo#VerifyEmailInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "verificationId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "token": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

VERIFY_EMAIL_OUTPUT = Schema.collection(
    id=ShapeID("borneo#VerifyEmailOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "verificationId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "token": {
            "target": STRING,
        },
        "type": {
            "target": VERIFICATION_TYPE,
        },
        "isUsed": {
            "target": BOOLEAN,
        },
        "expiresAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

CREATE_EMPLOYEE_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateEmployeeInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "surname": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "position": {
            "target": STRING,
        },
        "nif": {
            "target": STRING,
        },
        "startDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "endDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "email": {
            "target": STRING,
        },
        "manager": {
            "target": STRING,
        },
        "department": {
            "target": UUID,
        },
        "referenceId": {
            "target": STRING,
        },
    },
)

EMPLOYEE_ID = Schema(
    id=ShapeID("borneo#EmployeeId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

CREATE_EMPLOYEE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateEmployeeOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DEPARTMENT_OBJECT = Schema.collection(
    id=ShapeID("borneo#DepartmentObject"),
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_EMPLOYEE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeEmployeeInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

EMPLOYEE_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#EmployeeSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "department": {
            "target": UNIQUE_STRING_LIST,
        },
        "employeeIds": {
            "target": UUID_COLLECTION,
        },
    },
)

LIST_EMPLOYEES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListEmployeesInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#EmployeeListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": EMPLOYEE_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="nextToken"),
            ],
        },
        "pageSize": {
            "target": PAGE_SIZE,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="pageSize"),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_EMPLOYEES_FOR_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListEmployeesForFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
    },
)

EMPLOYEE_FOR_FILTER_MEMBER = Schema.collection(
    id=ShapeID("borneo#EmployeeForFilterMember"),
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "surname": {
            "target": STRING,
        },
    },
)

EMPLOYEES_FOR_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#EmployeesForFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": EMPLOYEE_FOR_FILTER_MEMBER,
        },
    },
)

LIST_EMPLOYEES_FOR_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListEmployeesForFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "employees": {
            "target": EMPLOYEES_FOR_FILTER_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

REMOVE_EMPLOYEE_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveEmployeeInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_EMPLOYEE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveEmployeeOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_EMPLOYEE_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateEmployeeInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "surname": {
            "target": STRING,
        },
        "position": {
            "target": STRING,
        },
        "nif": {
            "target": STRING,
        },
        "startDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "endDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "email": {
            "target": STRING,
        },
        "manager": {
            "target": STRING,
        },
        "department": {
            "target": UUID,
        },
    },
)

UPDATE_EMPLOYEE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateEmployeeOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CONTEXT_ID_LIST = Schema.collection(
    id=ShapeID("borneo#ContextIdList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
        },
    },
)

ERROR_ID = Schema(
    id=ShapeID("borneo#ErrorId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

DESCRIBE_ERROR_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeErrorInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "errorId": {
            "target": ERROR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_ERROR_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeErrorOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#ErrorRecord"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "errorId": {
            "target": ERROR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "context": {
            "target": CONTEXT_ID_LIST,
        },
        "stackTrace": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "message": {
            "target": STRING,
        },
        "firstSeen": {
            "target": TIMESTAMP,
        },
        "lastSeen": {
            "target": TIMESTAMP,
        },
        "count": {
            "target": INTEGER,
        },
        "component": {
            "target": STRING,
        },
        "componentId": {
            "target": STRING,
        },
        "workflowId": {
            "target": STRING,
        },
        "workflowType": {
            "target": STRING,
        },
        "workflowRunId": {
            "target": STRING,
        },
        "activityType": {
            "target": STRING,
        },
        "cluster": {
            "target": STRING,
        },
        "hostname": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

ERRORS_FILTER = Schema.collection(
    id=ShapeID("borneo#ErrorsFilter"),
    members={
        "scanIterationId": {
            "target": STRING,
        },
        "resourceId": {
            "target": STRING,
        },
        "accountId": {
            "target": STRING,
        },
        "scanExecutionId": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
    },
)

LIST_ERRORS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListErrorsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": ERRORS_FILTER,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

ERROR_RECORD = Schema.collection(
    id=ShapeID("borneo#ErrorRecord"),
    members={
        "errorId": {
            "target": ERROR_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "context": {
            "target": CONTEXT_ID_LIST,
        },
        "stackTrace": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "message": {
            "target": STRING,
        },
        "firstSeen": {
            "target": TIMESTAMP,
        },
        "lastSeen": {
            "target": TIMESTAMP,
        },
        "count": {
            "target": INTEGER,
        },
        "component": {
            "target": STRING,
        },
        "componentId": {
            "target": STRING,
        },
        "workflowId": {
            "target": STRING,
        },
        "workflowType": {
            "target": STRING,
        },
        "workflowRunId": {
            "target": STRING,
        },
        "activityType": {
            "target": STRING,
        },
        "cluster": {
            "target": STRING,
        },
        "hostname": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

ERRORS_LIST = Schema.collection(
    id=ShapeID("borneo#ErrorsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ERROR_RECORD,
        },
    },
)

LIST_ERRORS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListErrorsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "errors": {
            "target": ERRORS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

CREATE_HEADQUARTER_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateHeadquarterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": HEADQUARTER_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "city": {
            "target": HEADQUARTER_CITY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "address": {
            "target": PHYSICAL_ADDRESS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "country": {
            "target": COUNTRY_CODE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "zipcode": {
            "target": ZIP_CODE,
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
    },
)

CREATE_HEADQUARTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateHeadquarterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_HEADQUARTER_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeHeadquarterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_HEADQUARTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeHeadquarterOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#HeadquarterRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": HEADQUARTER_NAME,
        },
        "city": {
            "target": HEADQUARTER_CITY,
        },
        "address": {
            "target": PHYSICAL_ADDRESS,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "zipcode": {
            "target": ZIP_CODE,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
    },
)

HEADQUARTER_FILTERS = Schema.collection(
    id=ShapeID("borneo#HeadquarterFilters"),
    members={
        "headquarterIds": {
            "target": UUID_COLLECTION,
        },
    },
)

LIST_HEADQUARTERS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListHeadquartersInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#HeadquarterListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "filter": {
            "target": HEADQUARTER_FILTERS,
        },
    },
)

HEADQUARTER_LIST_RECORD = Schema.collection(
    id=ShapeID("borneo#HeadquarterListRecord"),
    members={
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": HEADQUARTER_NAME,
        },
        "city": {
            "target": HEADQUARTER_CITY,
        },
        "address": {
            "target": PHYSICAL_ADDRESS,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "zipcode": {
            "target": ZIP_CODE,
        },
        "toms": {
            "target": TOM_COLLECTION,
        },
    },
)

HEADQUARTER_LIST = Schema.collection(
    id=ShapeID("borneo#HeadquarterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": HEADQUARTER_LIST_RECORD,
        },
    },
)

LIST_HEADQUARTERS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListHeadquartersOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#HeadquarterListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "headquarters": {
            "target": HEADQUARTER_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

REMOVE_HEADQUARTER_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveHeadquarterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_HEADQUARTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveHeadquarterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_HEADQUARTER_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateHeadquarterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "headquarterId": {
            "target": HEADQUARTER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": HEADQUARTER_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "city": {
            "target": HEADQUARTER_CITY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "address": {
            "target": PHYSICAL_ADDRESS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "country": {
            "target": COUNTRY_CODE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "zipcode": {
            "target": ZIP_CODE,
        },
        "tomIds": {
            "target": UUID_COLLECTION,
        },
    },
)

UPDATE_HEADQUARTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateHeadquarterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

CATEGORY_LABEL = Schema(
    id=ShapeID("borneo#CategoryLabel"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^.{1,255}$"),
    ],
)

INFOTYPE_CODE = Schema(
    id=ShapeID("borneo#InfotypeCode"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^.{1,255}$"),
    ],
)

INFOTYPE_CODE_LIST = Schema.collection(
    id=ShapeID("borneo#InfotypeCodeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": INFOTYPE_CODE,
        },
    },
)

CREATE_CATEGORY_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateCategoryInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "description": {
            "target": STRING,
        },
        "infotypes": {
            "target": INFOTYPE_CODE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CREATE_CATEGORY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateCategoryOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_CATEGORY_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCategoryInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_CATEGORY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeCategoryOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "description": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

LIST_INFOTYPE_CATEGORIES_FILTER = Schema.collection(
    id=ShapeID("borneo#ListInfotypeCategoriesFilter"),
    members={
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_INFOTYPE_CATEGORIES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListInfotypeCategoriesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": LIST_INFOTYPE_CATEGORIES_FILTER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

CATEGORY_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#CategoryListMember"),
    members={
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "description": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

CATEGORY_LIST = Schema.collection(
    id=ShapeID("borneo#CategoryList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": CATEGORY_LIST_MEMBER,
        },
    },
)

LIST_INFOTYPE_CATEGORIES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListInfotypeCategoriesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "categories": {
            "target": CATEGORY_LIST,
        },
    },
)

REMOVE_CATEGORY_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveCategoryInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_CATEGORY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveCategoryOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_CATEGORY_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateCategoryInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "description": {
            "target": STRING,
        },
        "infotypes": {
            "target": INFOTYPE_CODE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_CATEGORY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateCategoryOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "categoryLabel": {
            "target": CATEGORY_LABEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

SCAN_ITERATION_ID = Schema(
    id=ShapeID("borneo#ScanIterationId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

PREPARE_DETAILED_INSPECTION_RESULT_INPUT = Schema.collection(
    id=ShapeID("borneo#PrepareDetailedInspectionResultInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "scanId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "scanIterationId": {
            "target": SCAN_ITERATION_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "pageId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

PREPARE_DETAILED_INSPECTION_RESULT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#PrepareDetailedInspectionResultOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "success": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

INSPECTION_RESULT_ID = Schema(
    id=ShapeID("borneo#InspectionResultId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

INSPECTION_RESULT_TYPE = Schema.collection(
    id=ShapeID("borneo#InspectionResultType"),
    type=ShapeType.ENUM,
    members={
        "SCAN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="scan"),
            ],
        },
        "PAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="page"),
            ],
        },
    },
)

DESCRIBE_INSPECTION_RESULT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeInspectionResultInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "id": {
            "target": INSPECTION_RESULT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "type": {
            "target": INSPECTION_RESULT_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

CONFIDENCE_SNAPSHOT = Schema.collection(
    id=ShapeID("borneo#ConfidenceSnapshot"),
    members={
        "certainCount": {
            "target": INTEGER,
        },
        "likelyCount": {
            "target": INTEGER,
        },
        "possibleCount": {
            "target": INTEGER,
        },
        "found": {
            "target": BOOLEAN,
        },
        "columns": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

INSPECTION_CONFIDENCE_SNAPSHOT = Schema.collection(
    id=ShapeID("borneo#InspectionConfidenceSnapshot"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": CONFIDENCE_SNAPSHOT,
        },
    },
)

SCAN_ID = Schema(
    id=ShapeID("borneo#ScanId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

COMPLIANCE_LIST = Schema.collection(
    id=ShapeID("borneo#ComplianceList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": STRING,
        },
    },
)

INFOTYPES_LIST = Schema.collection(
    id=ShapeID("borneo#InfotypesList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": STRING,
        },
    },
)

INSPECTION_POLICY = Schema.collection(
    id=ShapeID("borneo#InspectionPolicy"),
    members={
        "collectTokens": {
            "target": BOOLEAN,
        },
        "maskDetails": {
            "target": BOOLEAN,
        },
        "infotypes": {
            "target": INFOTYPES_LIST,
        },
        "compliance": {
            "target": COMPLIANCE_LIST,
        },
    },
)

RESOURCE_ID_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceIdList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_ID,
        },
    },
)

TAG_FILTER_ACTION = Schema.collection(
    id=ShapeID("borneo#TagFilterAction"),
    type=ShapeType.ENUM,
    members={
        "INCLUDE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="include"),
            ],
        },
        "EXCLUDE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="exclude"),
            ],
        },
    },
)

TAG_FILTER = Schema.collection(
    id=ShapeID("borneo#TagFilter"),
    members={
        "action": {
            "target": TAG_FILTER_ACTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tagKey": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tagValue": {
            "target": STRING,
        },
    },
)

TAG_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#TagFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": TAG_FILTER,
        },
    },
)

UNIQUE_LONG_LIST = Schema.collection(
    id=ShapeID("borneo#UniqueLongList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": LONG,
        },
    },
)

SCAN_RESOURCES = Schema.collection(
    id=ShapeID("borneo#ScanResources"),
    members={
        "accountId": {
            "target": STRING,
        },
        "projectId": {
            "target": STRING,
        },
        "region": {
            "target": STRING,
        },
        "regions": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
        "resourceType": {
            "target": STRING,
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "parentId": {
            "target": STRING,
        },
        "accountIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "parentIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "isPublic": {
            "target": BOOLEAN,
        },
        "isUnencrypted": {
            "target": BOOLEAN,
        },
        "tags": {
            "target": TAG_FILTER_LIST,
        },
        "database": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataset": {
            "target": UNIQUE_STRING_LIST,
        },
        "name": {
            "target": UNIQUE_STRING_LIST,
        },
        "schema": {
            "target": UNIQUE_STRING_LIST,
        },
        "driveId": {
            "target": UNIQUE_STRING_LIST,
        },
        "zendeskGroupId": {
            "target": UNIQUE_LONG_LIST,
        },
        "googleGroups": {
            "target": UNIQUE_STRING_LIST,
        },
        "orgUnitId": {
            "target": UNIQUE_STRING_LIST,
        },
        "driveType": {
            "target": UNIQUE_STRING_LIST,
        },
        "infoTypes": {
            "target": INFO_TYPES_COMBINATION_FILTER,
        },
        "isArchived": {
            "target": BOOLEAN,
        },
        "isExternal": {
            "target": BOOLEAN,
        },
        "teamId": {
            "target": STRING,
        },
        "teamName": {
            "target": STRING,
        },
        "teamUrl": {
            "target": STRING,
        },
        "isPrivate": {
            "target": BOOLEAN,
        },
        "isSlackDirectMessages": {
            "target": BOOLEAN,
        },
        "spaceStatus": {
            "target": UNIQUE_STRING_LIST,
        },
        "spaceType": {
            "target": UNIQUE_STRING_LIST,
        },
        "excludedResources": {
            "target": RESOURCE_ID_LIST,
        },
        "namespace": {
            "target": UNIQUE_STRING_LIST,
        },
        "set": {
            "target": UNIQUE_STRING_LIST,
        },
        "all": {
            "target": BOOLEAN,
        },
    },
)

RESOURCE_BASED_FILTER = Schema.collection(
    id=ShapeID("borneo#ResourceBasedFilter"),
    members={
        "values": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceId": {
            "target": RESOURCE_ID,
        },
    },
)

RESOURCE_BASED_FILTERS = Schema.collection(
    id=ShapeID("borneo#ResourceBasedFilters"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_BASED_FILTER,
        },
    },
)

SCAN_FILTER_TYPES = Schema.collection(
    id=ShapeID("borneo#ScanFilterTypes"),
    type=ShapeType.ENUM,
    members={
        "LAST_MODIFIED_GREATER_THAN": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="lastModifiedGreaterThan"
                ),
            ],
        },
        "LAST_MODIFIED_LESS_THAN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="lastModifiedLessThan"),
            ],
        },
        "PREFIX": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="prefix"),
            ],
        },
        "FILE_EXTENSIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fileExtensions"),
            ],
        },
        "ONLY_INCLUDE_KEYS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="onlyIncludeKeys"),
            ],
        },
        "VISIBILITY_FILTER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="visibilityFilter"),
            ],
        },
        "INTERNAL_DOMAINS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="internalDomains"),
            ],
        },
        "SCAN_ATTACHMENTS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="scanAttachments"),
            ],
        },
        "ZENDESK_GROUPS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="zendeskGroups"),
            ],
        },
        "JIRA_PROJECTS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="jiraProjects"),
            ],
        },
        "EXCLUDE_COLUMNS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="excludeColumns"),
            ],
        },
        "INCLUDE_NAMESPACES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="includeNamespaces"),
            ],
        },
    },
)

SCAN_FILTER = Schema.collection(
    id=ShapeID("borneo#ScanFilter"),
    members={
        "type": {
            "target": SCAN_FILTER_TYPES,
        },
        "filters": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceBasedFilters": {
            "target": RESOURCE_BASED_FILTERS,
        },
    },
)

SCAN_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#ScanFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SCAN_FILTER,
        },
    },
)

SCAN_PARAMETERS = Schema.collection(
    id=ShapeID("borneo#ScanParameters"),
    members={
        "resources": {
            "target": SCAN_RESOURCES,
        },
        "resourceType": {
            "target": STRING,
        },
        "scanFilter": {
            "target": SCAN_FILTER_LIST,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
    },
)

RECORD_TYPE = Schema.collection(
    id=ShapeID("borneo#RecordType"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": STRING,
        },
    },
)

INSIGHT_STATUS = Schema.collection(
    id=ShapeID("borneo#InsightStatus"),
    type=ShapeType.ENUM,
    members={
        "PAUSED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="paused"),
            ],
        },
        "TERMINATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="terminated"),
            ],
        },
        "SCANNING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="scanning"),
            ],
        },
        "SUCCESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="success"),
            ],
        },
        "FAILED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="failed"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="deleted"),
            ],
        },
    },
)

DESCRIBE_INSPECTION_RESULT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeInspectionResultOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#InspectionResultRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "id": {
            "target": INSPECTION_RESULT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "resourceId": {
            "target": RESOURCE_ID,
        },
        "resourceName": {
            "target": STRING,
        },
        "resourceType": {
            "target": STRING,
        },
        "fileName": {
            "target": STRING,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "parentId": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "stats": {
            "target": RECORD_TYPE,
        },
        "tokens": {
            "target": TOKENS,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "scanParameters": {
            "target": SCAN_PARAMETERS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "hasFinding": {
            "target": BOOLEAN,
        },
        "status": {
            "target": INSIGHT_STATUS,
        },
        "userName": {
            "target": STRING,
        },
        "userEmail": {
            "target": STRING,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_INSIGHTS_FILTER_TYPE = Schema.collection(
    id=ShapeID("borneo#ListInsightsFilterType"),
    type=ShapeType.ENUM,
    members={
        "FILE_EXTENSION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fileExtension"),
            ],
        },
    },
)

LIST_INSIGHTS_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListInsightsFilterInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#InsightsFilterInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "scanId": {
            "target": STRING,
        },
        "filterType": {
            "target": LIST_INSIGHTS_FILTER_TYPE,
        },
    },
)

LIST_INSIGHTS_FILTER_VALUE_PARAMETER = Schema.collection(
    id=ShapeID("borneo#ListInsightsFilterValueParameter"),
    members={
        "id": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
    },
)

INSIGHTS_FILTER_VALUE_PARAMETER_LIST = Schema.collection(
    id=ShapeID("borneo#InsightsFilterValueParameterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": LIST_INSIGHTS_FILTER_VALUE_PARAMETER,
        },
    },
)

LIST_INSIGHTS_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListInsightsFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "entries": {
            "target": INSIGHTS_FILTER_VALUE_PARAMETER_LIST,
        },
    },
)

INFOTYPE_CONFIDENCE = Schema.collection(
    id=ShapeID("borneo#InfotypeConfidence"),
    type=ShapeType.ENUM,
    members={
        "CERTAIN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="certain"),
            ],
        },
        "POTENTIAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="potential"),
            ],
        },
        "LIKELY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="likely"),
            ],
        },
    },
)

INFOTYPE_CONFIDENCE_LIST = Schema.collection(
    id=ShapeID("borneo#InfotypeConfidenceList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": INFOTYPE_CONFIDENCE,
        },
    },
)

INSIGHT_STATUS_LIST = Schema.collection(
    id=ShapeID("borneo#InsightStatusList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": INSIGHT_STATUS,
        },
    },
)

INSPECTION_RESULT_FILTER = Schema.collection(
    id=ShapeID("borneo#InspectionResultFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
        "pageId": {
            "target": STRING,
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceType": {
            "target": STRING,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "infoTypes": {
            "target": INFO_TYPES_COMBINATION_FILTER,
        },
        "userEmails": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": INSIGHT_STATUS_LIST,
        },
        "fileExtension": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
        "infotypeConfidence": {
            "target": INFOTYPE_CONFIDENCE_LIST,
        },
    },
)

LIST_INSPECTION_RESULTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListInspectionResultsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "type": {
            "target": INSPECTION_RESULT_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "filter": {
            "target": INSPECTION_RESULT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

INSPECTION_RESULT_RECORD = Schema.collection(
    id=ShapeID("borneo#InspectionResultRecord"),
    members={
        "id": {
            "target": INSPECTION_RESULT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "resourceId": {
            "target": RESOURCE_ID,
        },
        "resourceName": {
            "target": STRING,
        },
        "resourceType": {
            "target": STRING,
        },
        "fileName": {
            "target": STRING,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "parentId": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "stats": {
            "target": RECORD_TYPE,
        },
        "tokens": {
            "target": TOKENS,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "scanParameters": {
            "target": SCAN_PARAMETERS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "hasFinding": {
            "target": BOOLEAN,
        },
        "status": {
            "target": INSIGHT_STATUS,
        },
        "userName": {
            "target": STRING,
        },
        "userEmail": {
            "target": STRING,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

INSPECTION_RESULT_LIST = Schema.collection(
    id=ShapeID("borneo#InspectionResultList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": INSPECTION_RESULT_RECORD,
        },
    },
)

LIST_INSPECTION_RESULTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListInspectionResultsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "inspectionResults": {
            "target": INSPECTION_RESULT_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

SCAN_EXECUTION_INSIGHTS_LIST_FILTER = Schema.collection(
    id=ShapeID("borneo#ScanExecutionInsightsListFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "infoTypes": {
            "target": INFO_TYPES_COMBINATION_FILTER,
        },
        "statuses": {
            "target": INSIGHT_STATUS_LIST,
        },
        "infotypeConfidence": {
            "target": INFOTYPE_CONFIDENCE_LIST,
        },
    },
)

LIST_SCAN_EXECUTION_INSIGHTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListScanExecutionInsightsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": SCAN_EXECUTION_INSIGHTS_LIST_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

RESOURCE_RECORD = Schema.collection(
    id=ShapeID("borneo#ResourceRecord"),
    members={
        "meta": {
            "target": DOCUMENT,
        },
        "type": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
    },
)

MONTH = Schema.collection(
    id=ShapeID("borneo#Month"),
    type=ShapeType.ENUM,
    members={
        "JANUARY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="JANUARY"),
            ],
        },
        "FEBRUARY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="FEBRUARY"),
            ],
        },
        "MARCH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MARCH"),
            ],
        },
        "APRIL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="APRIL"),
            ],
        },
        "MAY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MAY"),
            ],
        },
        "JUNE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="JUNE"),
            ],
        },
        "JULY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="JULY"),
            ],
        },
        "AUGUST": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AUGUST"),
            ],
        },
        "SEPTEMBER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SEPTEMBER"),
            ],
        },
        "OCTOBER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OCTOBER"),
            ],
        },
        "NOVEMBER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NOVEMBER"),
            ],
        },
        "DECEMBER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DECEMBER"),
            ],
        },
    },
)

CALENDAR_SPEC = Schema.collection(
    id=ShapeID("borneo#CalendarSpec"),
    members={
        "second": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#range"),
                    value={
                        "min": 0,
                        "max": 59,
                    },
                ),
            ],
        },
        "minute": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#range"),
                    value={
                        "min": 0,
                        "max": 59,
                    },
                ),
            ],
        },
        "hour": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#range"),
                    value={
                        "min": 0,
                        "max": 23,
                    },
                ),
            ],
        },
        "dayOfMonth": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#range"),
                    value={
                        "min": 1,
                        "max": 31,
                    },
                ),
            ],
        },
        "month": {
            "target": MONTH,
        },
        "year": {
            "target": INTEGER,
        },
    },
)

CALENDAR_SPEC_LIST = Schema.collection(
    id=ShapeID("borneo#CalendarSpecList"),
    type=ShapeType.LIST,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 1,
                "max": 1,
            },
        ),
    ],
    members={
        "member": {
            "target": CALENDAR_SPEC,
        },
    },
)

SCAN_SCHEDULE = Schema.collection(
    id=ShapeID("borneo#ScanSchedule"),
    members={
        "calendars": {
            "target": CALENDAR_SPEC_LIST,
        },
        "timezone": {
            "target": STRING,
        },
    },
)

SCAN_DETAIL = Schema.collection(
    id=ShapeID("borneo#ScanDetail"),
    members={
        "name": {
            "target": STRING,
        },
        "scanType": {
            "target": STRING,
        },
        "scheduleType": {
            "target": STRING,
        },
        "cron": {
            "target": STRING,
        },
        "schedule": {
            "target": SCAN_SCHEDULE,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
    },
)

SCAN_DATA_PROCESSED = Schema.collection(
    id=ShapeID("borneo#ScanDataProcessed"),
    members={
        "readFromSourceBytes": {
            "target": LONG,
        },
        "inspectedBytes": {
            "target": LONG,
        },
        "extractedBytes": {
            "target": LONG,
        },
    },
)

SCAN_STATUS = Schema.collection(
    id=ShapeID("borneo#ScanStatus"),
    type=ShapeType.ENUM,
    members={
        "SCHEDULED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="scheduled"),
            ],
        },
        "PENDING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pending"),
            ],
        },
        "INPROGRESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="inprogress"),
            ],
        },
        "PAUSED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="paused"),
            ],
        },
        "PAUSING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pausing"),
            ],
        },
        "RESUMING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="resuming"),
            ],
        },
        "COMPLETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="completed"),
            ],
        },
        "TERMINATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="terminated"),
            ],
        },
    },
)

STATE_CHANGE_EVENTS = Schema.collection(
    id=ShapeID("borneo#StateChangeEvents"),
    members={
        "status": {
            "target": SCAN_STATUS,
        },
        "previousStatus": {
            "target": SCAN_STATUS,
        },
        "epoch": {
            "target": LONG,
        },
    },
)

STATE_CHANGE_EVENTS_LIST = Schema.collection(
    id=ShapeID("borneo#StateChangeEventsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STATE_CHANGE_EVENTS,
        },
    },
)

SCAN_STATS = Schema.collection(
    id=ShapeID("borneo#ScanStats"),
    members={
        "stateChangeEvents": {
            "target": STATE_CHANGE_EVENTS_LIST,
        },
        "dataProcessed": {
            "target": SCAN_DATA_PROCESSED,
        },
        "scanDuration": {
            "target": DOUBLE,
        },
    },
)

SCAN_EXECUTION_RECORD = Schema.collection(
    id=ShapeID("borneo#ScanExecutionRecord"),
    members={
        "scanExecutionId": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "resourceId": {
            "target": STRING,
        },
        "resource": {
            "target": RESOURCE_RECORD,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "status": {
            "target": STRING,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "scanStartTime": {
            "target": TIMESTAMP,
        },
        "stats": {
            "target": SCAN_STATS,
        },
        "scan": {
            "target": SCAN_DETAIL,
        },
    },
)

SCAN_EXECUTION_RECORDS_LIST = Schema.collection(
    id=ShapeID("borneo#ScanExecutionRecordsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SCAN_EXECUTION_RECORD,
        },
    },
)

LIST_SCAN_EXECUTION_INSIGHTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListScanExecutionInsightsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "results": {
            "target": SCAN_EXECUTION_RECORDS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

POLICY_INFOTYPE_CONFIDENCE_LEVEL = Schema.collection(
    id=ShapeID("borneo#PolicyInfotypeConfidenceLevel"),
    type=ShapeType.ENUM,
    members={
        "POTENTIAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="potential"),
            ],
        },
        "LIKELY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="likely"),
            ],
        },
        "CERTAIN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="certain"),
            ],
        },
    },
)

POLICY_INFOTYPE_CONFIDENCE_LEVEL_LIST = Schema.collection(
    id=ShapeID("borneo#PolicyInfotypeConfidenceLevelList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": POLICY_INFOTYPE_CONFIDENCE_LEVEL,
        },
    },
)

REPORTING_PERIODS = Schema.collection(
    id=ShapeID("borneo#ReportingPeriods"),
    type=ShapeType.ENUM,
    members={
        "LAST_DAY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_day"),
            ],
        },
        "LAST_WEEK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_week"),
            ],
        },
        "LAST_TWO_WEEKS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_two_weeks"),
            ],
        },
        "LAST_MONTH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_month"),
            ],
        },
        "LAST_3_MONTHS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_3_months"),
            ],
        },
        "LAST_YEAR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="last_year"),
            ],
        },
    },
)

LIST_TOP_RESOURCES_WITH_SENSITIVE_DATA_DETAILS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListTopResourcesWithSensitiveDataDetailsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#SensitiveDataDistributionStatsInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
        },
        "identifiers": {
            "target": UNIQUE_STRING_LIST,
        },
        "classifications": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "confidenceLevels": {
            "target": POLICY_INFOTYPE_CONFIDENCE_LEVEL_LIST,
        },
        "count": {
            "target": INTEGER,
        },
    },
)

RESOURCE_SENSITIVE_DATA_DETAILS = Schema.collection(
    id=ShapeID("borneo#ResourceSensitiveDataDetails"),
    members={
        "resourceId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceName": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceType": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "dataScanned": {
            "target": LONG,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "identifierCount": {
            "target": LONG,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "identifiersFound": {
            "target": UNIQUE_STRING_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "confidenceLevels": {
            "target": POLICY_INFOTYPE_CONFIDENCE_LEVEL_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "numberOfScans": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

RESOURCE_SENSITIVE_DATA_DETAILS_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceSensitiveDataDetailsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_SENSITIVE_DATA_DETAILS,
        },
    },
)

LIST_TOP_RESOURCES_WITH_SENSITIVE_DATA_DETAILS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListTopResourcesWithSensitiveDataDetailsOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#TopSensitiveResourcesOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resources": {
            "target": RESOURCE_SENSITIVE_DATA_DETAILS_LIST,
        },
    },
)

PAGE_INSIGHTS_EXPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#PageInsightsExportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "filter": {
            "target": INSPECTION_RESULT_FILTER,
        },
        "detailed": {
            "target": BOOLEAN,
        },
    },
)

PAGE_INSIGHTS_EXPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#PageInsightsExportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

SUMMARIZE_DATA_IDENTIFIER_STATS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeDataIdentifierStatsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#SensitiveDataDistributionStatsInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
        },
        "identifiers": {
            "target": UNIQUE_STRING_LIST,
        },
        "classifications": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "confidenceLevels": {
            "target": POLICY_INFOTYPE_CONFIDENCE_LEVEL_LIST,
        },
        "count": {
            "target": INTEGER,
        },
    },
)

IDENTIFIER_STATS = Schema.collection(
    id=ShapeID("borneo#IdentifierStats"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": INTEGER,
        },
    },
)

SUMMARIZE_DATA_IDENTIFIER_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeDataIdentifierStatsOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#IdentifierStatsOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "stats": {
            "target": IDENTIFIER_STATS,
        },
    },
)

SUMMARIZE_RESOURCE_TYPE_DATA_IDENTIFIER_COUNTS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceTypeDataIdentifierCountsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#SensitiveDataDistributionStatsInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
        },
        "identifiers": {
            "target": UNIQUE_STRING_LIST,
        },
        "classifications": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "confidenceLevels": {
            "target": POLICY_INFOTYPE_CONFIDENCE_LEVEL_LIST,
        },
        "count": {
            "target": INTEGER,
        },
    },
)

SUMMARIZE_RESOURCE_TYPE_DATA_IDENTIFIER_COUNTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceTypeDataIdentifierCountsOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#IdentifierStatsOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "stats": {
            "target": IDENTIFIER_STATS,
        },
    },
)

COMPLIANCE_RISK = Schema.collection(
    id=ShapeID("borneo#ComplianceRisk"),
    members={
        "infotypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "classifications": {
            "target": UNIQUE_STRING_LIST,
        },
        "sensitive": {
            "target": BOOLEAN,
        },
    },
)

DATA_SECURITY_EVENT = Schema.collection(
    id=ShapeID("borneo#DataSecurityEvent"),
    members={
        "eventId": {
            "target": STRING,
        },
        "issueId": {
            "target": STRING,
        },
        "resourceId": {
            "target": STRING,
        },
        "source": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "details": {
            "target": OPEN_PROPERTIES,
        },
    },
)

DATA_SECURITY_EVENT_LIST = Schema.collection(
    id=ShapeID("borneo#DataSecurityEventList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DATA_SECURITY_EVENT,
        },
    },
)

ISSUE_ID = Schema(
    id=ShapeID("borneo#IssueId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

DESCRIBE_ISSUE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeIssueInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "issueId": {
            "target": ISSUE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

ISSUE_NOTIFICATION = Schema.collection(
    id=ShapeID("borneo#IssueNotification"),
    members={
        "success": {
            "target": BOOLEAN,
        },
        "type": {
            "target": STRING,
        },
        "link": {
            "target": STRING,
        },
        "time": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
    },
)

ISSUE_NOTIFICATION_LIST = Schema.collection(
    id=ShapeID("borneo#IssueNotificationList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ISSUE_NOTIFICATION,
        },
    },
)

ISSUE_RESOURCE_DETAILS = Schema.collection(
    id=ShapeID("borneo#IssueResourceDetails"),
    members={
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "aka": {
            "target": STRING,
        },
        "properties": {
            "target": OPEN_PROPERTIES,
        },
    },
)

SECURITY_RISK = Schema.collection(
    id=ShapeID("borneo#SecurityRisk"),
    members={
        "failedRules": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

ISSUE_STATE = Schema.collection(
    id=ShapeID("borneo#IssueState"),
    type=ShapeType.ENUM,
    members={
        "OPEN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="open"),
            ],
        },
        "RESOLVED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="resolved"),
            ],
        },
    },
)

DESCRIBE_ISSUE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeIssueOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#IssueRecord"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "issueId": {
            "target": ISSUE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceId": {
            "target": STRING,
        },
        "state": {
            "target": ISSUE_STATE,
        },
        "severity": {
            "target": SEVERITY_LEVEL,
        },
        "resource": {
            "target": ISSUE_RESOURCE_DETAILS,
        },
        "securityRisk": {
            "target": SECURITY_RISK,
        },
        "complianceRisk": {
            "target": COMPLIANCE_RISK,
        },
        "events": {
            "target": DATA_SECURITY_EVENT_LIST,
        },
        "notifications": {
            "target": ISSUE_NOTIFICATION_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

EVENTS_FILTER = Schema.collection(
    id=ShapeID("borneo#EventsFilter"),
    members={
        "eventId": {
            "target": UNIQUE_STRING_LIST,
        },
        "issueId": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceId": {
            "target": UNIQUE_STRING_LIST,
        },
        "scanId": {
            "target": UNIQUE_STRING_LIST,
        },
        "userId": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
        "issueType": {
            "target": UNIQUE_STRING_LIST,
        },
        "newInfotypeFound": {
            "target": BOOLEAN,
        },
    },
)

LIST_EVENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListEventsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": EVENTS_FILTER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

EVENTS = Schema.collection(
    id=ShapeID("borneo#Events"),
    members={
        "eventId": {
            "target": STRING,
        },
        "issueId": {
            "target": STRING,
        },
        "resourceId": {
            "target": STRING,
        },
        "source": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "details": {
            "target": DOCUMENT,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "resourceName": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
        "tokens": {
            "target": TOKENS,
        },
        "status": {
            "target": STRING,
        },
        "scanIterationId": {
            "target": STRING,
        },
        "scanExecutionId": {
            "target": STRING,
        },
        "meta": {
            "target": DOCUMENT,
        },
        "pageInspectionInsightId": {
            "target": STRING,
        },
        "resourceType": {
            "target": STRING,
        },
        "userId": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "email": {
            "target": STRING,
        },
        "connectorUserId": {
            "target": STRING,
        },
        "connectorUsername": {
            "target": STRING,
        },
        "external": {
            "target": BOOLEAN,
        },
    },
)

EVENTS_LIST = Schema.collection(
    id=ShapeID("borneo#EventsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": EVENTS,
        },
    },
)

LIST_EVENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListEventsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "events": {
            "target": EVENTS_LIST,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

ISSUE_FILTER = Schema.collection(
    id=ShapeID("borneo#IssueFilter"),
    members={
        "resources": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "cloudAccountTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "cloudAccountIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "states": {
            "target": UNIQUE_STRING_LIST,
        },
        "severities": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
        "failedControls": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

RELATION_EXPRESSION = Schema.collection(
    id=ShapeID("borneo#RelationExpression"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": BOOLEAN,
        },
    },
)

LIST_ISSUES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListIssuesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": ISSUE_FILTER,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "include": {
            "target": RELATION_EXPRESSION,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "pageSize": {
            "target": PAGE_SIZE,
            "traits": [
                Trait(id=ShapeID("smithy.api#default"), value=10),
            ],
        },
    },
)

ISSUE_RECORD = Schema.collection(
    id=ShapeID("borneo#IssueRecord"),
    members={
        "issueId": {
            "target": ISSUE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceId": {
            "target": STRING,
        },
        "state": {
            "target": ISSUE_STATE,
        },
        "severity": {
            "target": SEVERITY_LEVEL,
        },
        "resource": {
            "target": ISSUE_RESOURCE_DETAILS,
        },
        "securityRisk": {
            "target": SECURITY_RISK,
        },
        "complianceRisk": {
            "target": COMPLIANCE_RISK,
        },
        "events": {
            "target": DATA_SECURITY_EVENT_LIST,
        },
        "notifications": {
            "target": ISSUE_NOTIFICATION_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

ISSUE_LIST = Schema.collection(
    id=ShapeID("borneo#IssueList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ISSUE_RECORD,
        },
    },
)

LIST_ISSUES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListIssuesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "issues": {
            "target": ISSUE_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

CREATE_LEGAL_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateLegalDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "documentLink": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "type": {
            "target": LEGAL_DOCUMENT_TYPE,
        },
        "source": {
            "target": STRING,
        },
        "region": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "isDiscoverInfotype": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "fromDiscoveredDocumentId": {
            "target": STRING,
        },
    },
)

CREATE_LEGAL_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateLegalDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_LEGAL_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeLegalDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_LEGAL_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeLegalDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": LEGAL_DOCUMENT_TYPE,
        },
        "source": {
            "target": STRING,
        },
        "documentLink": {
            "target": STRING,
        },
        "bucketUri": {
            "target": STRING,
        },
        "discoveredInfotypes": {
            "target": LEGAL_DOCUMENT_INFOTYPES,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "region": {
            "target": STRING,
        },
        "status": {
            "target": LEGAL_DOCUMENT_STATUS,
        },
        "isDiscoverInfotype": {
            "target": BOOLEAN,
        },
        "fromDiscoveredDocumentId": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

LEGAL_DOCUMENT_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#LegalDocumentSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "status": {
            "target": LEGAL_DOCUMENT_STATUS,
        },
    },
)

LIST_LEGAL_DOCUMENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListLegalDocumentsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": LEGAL_DOCUMENT_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_LEGAL_DOCUMENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListLegalDocumentsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "legalDocuments": {
            "target": LEGAL_DOCUMENT_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "isBorneoAiScanning": {
            "target": BOOLEAN,
        },
    },
)

REMOVE_LEGAL_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveLegalDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_LEGAL_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveLegalDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "documentId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

SCAN_LEGAL_DOCUMENT_INPUT = Schema.collection(
    id=ShapeID("borneo#ScanLegalDocumentInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "documentId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

SCAN_LEGAL_DOCUMENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ScanLegalDocumentOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

NANO_TIMESTAMP = Schema(
    id=ShapeID("borneo#NanoTimestamp"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#suppress"),
            value=[
                "ShouldHaveUsedTimestamp",
            ],
        ),
        Trait(id=ShapeID("smithy.api#pattern"), value="^\\d{19}$"),
    ],
)

LOG_TYPE = Schema.collection(
    id=ShapeID("borneo#LogType"),
    type=ShapeType.ENUM,
    members={
        "API": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="API"),
            ],
        },
    },
)

LIST_ACCESS_LOGS_FILTER = Schema.collection(
    id=ShapeID("borneo#ListAccessLogsFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "logType": {
            "target": LOG_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#default"), value="API"),
            ],
        },
        "email": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#pattern"),
                    value="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
                ),
            ],
        },
        "operationName": {
            "target": STRING,
        },
        "requestId": {
            "target": STRING,
        },
        "start": {
            "target": NANO_TIMESTAMP,
        },
        "end": {
            "target": NANO_TIMESTAMP,
        },
    },
)

LIST_ACCESS_LOGS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListAccessLogsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": LIST_ACCESS_LOGS_FILTER,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

LIST_ACCESS_LOGS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListAccessLogsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "logs": {
            "target": ACCESS_LOGS_RESULTS,
        },
        "size": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

LOG_CATEGORY = Schema.collection(
    id=ShapeID("borneo#LogCategory"),
    type=ShapeType.ENUM,
    members={
        "SCAN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="scan"),
            ],
        },
        "CONNECTOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="connector"),
            ],
        },
        "DATA_PLANE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataPlane"),
            ],
        },
        "CLOUD_AWS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudAWS"),
            ],
        },
        "CLOUD_GCP": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudGCP"),
            ],
        },
        "CLOUD_AZURE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudAzure"),
            ],
        },
        "NOTIFICATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="notification"),
            ],
        },
    },
)

LIST_AUDIT_LOGS_FILTER = Schema.collection(
    id=ShapeID("borneo#ListAuditLogsFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "scanId": {
            "target": STRING,
        },
        "connectorId": {
            "target": STRING,
        },
        "dataPlaneId": {
            "target": STRING,
        },
        "accountId": {
            "target": STRING,
        },
        "gcpConnectionId": {
            "target": STRING,
        },
        "gcpProjectId": {
            "target": STRING,
        },
        "azureConnectionId": {
            "target": STRING,
        },
        "azureSubscriptionId": {
            "target": STRING,
        },
        "category": {
            "target": LOG_CATEGORY,
        },
        "start": {
            "target": NANO_TIMESTAMP,
        },
        "end": {
            "target": NANO_TIMESTAMP,
        },
    },
)

LIST_AUDIT_LOGS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListAuditLogsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": LIST_AUDIT_LOGS_FILTER,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

LIST_AUDIT_LOGS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListAuditLogsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "logs": {
            "target": AUDIT_LOGS_RESULTS,
        },
        "size": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

THRESHOLD_LOPDP_COMMENT = Schema(
    id=ShapeID("borneo#ThresholdLopdpComment"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 2000,
            },
        ),
    ],
)

THRESHOLD_LOPDP_STATUS = Schema.collection(
    id=ShapeID("borneo#ThresholdLopdpStatus"),
    type=ShapeType.ENUM,
    members={
        "DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="draft"),
            ],
        },
        "ACTIVATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="activated"),
            ],
        },
    },
)

CREATE_LOPDP_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateLopdpThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "comment": {
            "target": THRESHOLD_LOPDP_COMMENT,
        },
        "systematicPersonalAssessment": {
            "target": BOOLEAN,
        },
        "largeScaleObservation": {
            "target": BOOLEAN,
        },
        "processingPersonalDataRisk": {
            "target": BOOLEAN,
        },
        "specialCategoryDataProcessed": {
            "target": BOOLEAN,
        },
        "sensitiveOrSpecialData": {
            "target": BOOLEAN,
        },
        "rightsRiskProcessingData": {
            "target": BOOLEAN,
        },
        "freedomRiskProcessingData": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "additionalComment": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_LOPDP_STATUS,
        },
    },
)

CREATE_LOPDP_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateLopdpThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "lopdpThresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_LOPDP_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeLopdpThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "lopdpThresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

THRESHOLD_LOPDP_DPIA_STATUS = Schema.collection(
    id=ShapeID("borneo#ThresholdLopdpDpiaStatus"),
    type=ShapeType.ENUM,
    members={
        "NECESSARY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="necessary"),
            ],
        },
        "RECOMMENDED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recommended"),
            ],
        },
        "OPTIONAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="optional"),
            ],
        },
    },
)

DESCRIBE_LOPDP_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeLopdpThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "comment": {
            "target": THRESHOLD_LOPDP_COMMENT,
        },
        "systematicPersonalAssessment": {
            "target": BOOLEAN,
        },
        "largeScaleObservation": {
            "target": BOOLEAN,
        },
        "processingPersonalDataRisk": {
            "target": BOOLEAN,
        },
        "specialCategoryDataProcessed": {
            "target": BOOLEAN,
        },
        "sensitiveOrSpecialData": {
            "target": BOOLEAN,
        },
        "rightsRiskProcessingData": {
            "target": BOOLEAN,
        },
        "freedomRiskProcessingData": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "additionalComment": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_LOPDP_STATUS,
        },
        "dpiaStatus": {
            "target": THRESHOLD_LOPDP_DPIA_STATUS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
    },
)

REMOVE_LOPDP_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveLopdpThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "lopdpThresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_LOPDP_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveLopdpThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_LOPDP_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateLopdpThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "lopdpThresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "comment": {
            "target": THRESHOLD_LOPDP_COMMENT,
        },
        "systematicPersonalAssessment": {
            "target": BOOLEAN,
        },
        "largeScaleObservation": {
            "target": BOOLEAN,
        },
        "processingPersonalDataRisk": {
            "target": BOOLEAN,
        },
        "specialCategoryDataProcessed": {
            "target": BOOLEAN,
        },
        "sensitiveOrSpecialData": {
            "target": BOOLEAN,
        },
        "rightsRiskProcessingData": {
            "target": BOOLEAN,
        },
        "freedomRiskProcessingData": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "additionalComment": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_LOPDP_STATUS,
        },
    },
)

UPDATE_LOPDP_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateLopdpThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

MIGRATION_ID = Schema(
    id=ShapeID("borneo#MigrationId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

MISSING_OBJECT = Schema.collection(
    id=ShapeID("borneo#MissingObject"),
    members={
        "id": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
    },
)

MISSING_OBJECT_LIST = Schema.collection(
    id=ShapeID("borneo#MissingObjectList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": MISSING_OBJECT,
        },
    },
)

PRIVACY_OPS_FIELD_OPTION_TYPE = Schema.collection(
    id=ShapeID("borneo#PrivacyOpsFieldOptionType"),
    type=ShapeType.ENUM,
    members={
        "THREAT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="threat"),
            ],
        },
        "IMPACT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="impact"),
            ],
        },
        "RISK_SOURCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="riskSource"),
            ],
        },
        "DATA_TYPE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataType"),
            ],
        },
        "DATA_SOURCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataSource"),
            ],
        },
        "DATA_SUBJECT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataSubject"),
            ],
        },
        "RECIPIENT_LAWFUL_BASIS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recipientLawfulBasis"),
            ],
        },
        "CONFIDENTIALITY_THREAT": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="confidentialityThreat"
                ),
            ],
        },
        "AVAILABILITY_THREAT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="availabilityThreat"),
            ],
        },
        "INTEGRITY_THREAT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="integrityThreat"),
            ],
        },
        "CONFIDENTIALITY_IMPACT": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="confidentialityImpact"
                ),
            ],
        },
        "AVAILABILITY_IMPACT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="availabilityImpact"),
            ],
        },
        "INTEGRITY_IMPACT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="integrityImpact"),
            ],
        },
    },
)

MISSING_PRIVACY_OPS_FIELD_OPTIONS = Schema.collection(
    id=ShapeID("borneo#MissingPrivacyOpsFieldOptions"),
    members={
        "type": {
            "target": PRIVACY_OPS_FIELD_OPTION_TYPE,
        },
        "missingOptions": {
            "target": MISSING_OBJECT_LIST,
        },
    },
)

MISSING_PRIVACY_OPS_FIELD_OPTIONS_LIST = Schema.collection(
    id=ShapeID("borneo#MissingPrivacyOpsFieldOptionsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": MISSING_PRIVACY_OPS_FIELD_OPTIONS,
        },
    },
)

MISSING_DPIA_FIELD_OPTIONS = Schema.collection(
    id=ShapeID("borneo#MissingDpiaFieldOptions"),
    members={
        "missingPrivacyOpsFieldOptions": {
            "target": MISSING_PRIVACY_OPS_FIELD_OPTIONS_LIST,
        },
    },
)

MISSING_DPIA_OBJECTS = Schema.collection(
    id=ShapeID("borneo#MissingDpiaObjects"),
    members={
        "availability": {
            "target": MISSING_DPIA_FIELD_OPTIONS,
        },
        "integrity": {
            "target": MISSING_DPIA_FIELD_OPTIONS,
        },
        "confidentiality": {
            "target": MISSING_DPIA_FIELD_OPTIONS,
        },
    },
)

MISSING_PROCESSING_ACTIVITY_OBJECTS = Schema.collection(
    id=ShapeID("borneo#MissingProcessingActivityObjects"),
    members={
        "missingDepartments": {
            "target": MISSING_OBJECT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingRecipients": {
            "target": MISSING_OBJECT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingAssets": {
            "target": MISSING_OBJECT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingPrivacyOpsFieldOptions": {
            "target": MISSING_PRIVACY_OPS_FIELD_OPTIONS_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingInfoTypes": {
            "target": MISSING_OBJECT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CLONE_PA_IN_TARGET_ORG_INPUT = Schema.collection(
    id=ShapeID("borneo#ClonePaInTargetOrgInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "sourcePaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "targetOrganisationId": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(
                    id=ShapeID("smithy.api#length"),
                    value={
                        "min": 3,
                        "max": 300,
                    },
                ),
            ],
        },
        "cloneTa": {
            "target": BOOLEAN,
        },
        "cloneDpia": {
            "target": BOOLEAN,
        },
        "missingProcessingActivityObjects": {
            "target": MISSING_PROCESSING_ACTIVITY_OBJECTS,
        },
        "missingDpiaObjects": {
            "target": MISSING_DPIA_OBJECTS,
        },
        "owner": {
            "target": STRING,
        },
    },
)

CLONE_PA_IN_TARGET_ORG_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ClonePaInTargetOrgOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "clonedPaId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

COMPANY_ROLE = Schema.collection(
    id=ShapeID("borneo#CompanyRole"),
    type=ShapeType.ENUM,
    members={
        "CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="controller"),
            ],
        },
        "PROCESSOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="processor"),
            ],
        },
        "JOINT_CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="joint_controller"),
            ],
        },
        "SUB_PROCESSOR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="sub_processor"),
            ],
        },
        "INDEPENDENT_CONTROLLER": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="independent_controller"
                ),
            ],
        },
    },
)

COMPANY_ROLE_LIST = Schema.collection(
    id=ShapeID("borneo#CompanyRoleList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": COMPANY_ROLE,
        },
    },
)

DATA_FLOW_RELATIONSHIP_OPTION_TYPE = Schema.collection(
    id=ShapeID("borneo#DataFlowRelationshipOptionType"),
    type=ShapeType.ENUM,
    members={
        "MY_ORGANISATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MyOrganisation"),
            ],
        },
        "DATA_SOURCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataSource"),
            ],
        },
        "SPECIFIC_PROCESSING_ACTIVITY": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="specificProcessingActivity",
                ),
            ],
        },
        "RECIPIENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recipient"),
            ],
        },
    },
)

DATA_FLOW_RELATIONSHIP_OPTION = Schema.collection(
    id=ShapeID("borneo#DataFlowRelationshipOption"),
    members={
        "type": {
            "target": DATA_FLOW_RELATIONSHIP_OPTION_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "value": {
            "target": STRING,
        },
    },
)

DATA_FLOW_RELATIONSHIP = Schema.collection(
    id=ShapeID("borneo#DataFlowRelationship"),
    members={
        "from": {
            "target": DATA_FLOW_RELATIONSHIP_OPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "to": {
            "target": DATA_FLOW_RELATIONSHIP_OPTION,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DATA_FLOW_RELATIONSHIPS = Schema.collection(
    id=ShapeID("borneo#DataFlowRelationships"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DATA_FLOW_RELATIONSHIP,
        },
    },
)

PROCESSING_ACTIVITY_DATA_SOURCE = Schema(
    id=ShapeID("borneo#ProcessingActivityDataSource"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|data_controller|data_processor|data_subject|legal_representative|other_processing_activity|public_source|self_generated|third_party|other_processing_activity)$",
        ),
    ],
)

PROCESSING_ACTIVITIY_DATA_SOURCE_COLLECTION = Schema.collection(
    id=ShapeID("borneo#ProcessingActivitiyDataSourceCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_DATA_SOURCE,
        },
    },
)

DATA_SUBJECT = Schema(
    id=ShapeID("borneo#DataSubject"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|candidates|citizens|clients|contributors|employees|potential_clients|suppliers|users|visitors)$",
        ),
    ],
)

DATA_SUBJECT_COLLECTION = Schema.collection(
    id=ShapeID("borneo#DataSubjectCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": DATA_SUBJECT,
        },
    },
)

INFOTYPE_CATEGORY_LIST = Schema.collection(
    id=ShapeID("borneo#InfotypeCategoryList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": STRING,
        },
    },
)

INFOTYPE_VOLUME = Schema.collection(
    id=ShapeID("borneo#InfotypeVolume"),
    type=ShapeType.ENUM,
    members={
        "VOLUME_0_1000": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="0-1000"),
            ],
        },
        "VOLUME_1000_10000": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="1000-10000"),
            ],
        },
        "VOLUME_10000_100000": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="10000-100000"),
            ],
        },
        "VOLUME_100000_PLUS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="100000+"),
            ],
        },
    },
)

UPLOADED_FILE_CATEGORY = Schema.collection(
    id=ShapeID("borneo#UploadedFileCategory"),
    type=ShapeType.ENUM,
    members={
        "PROCESSING_ACTIVITY_ADDITIONAL_INFO": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="processing-activity-additional-info",
                ),
            ],
        },
        "RECIPIENT_DPA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recipient_dpa"),
            ],
        },
        "TOM_DOCUMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="tom_document"),
            ],
        },
        "PRIDATECT_EXPORT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pridatect_export"),
            ],
        },
        "ORGANISATION_LOGO": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="organisation_logo"),
            ],
        },
        "DSAR_REQUEST": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dsar_request"),
            ],
        },
        "FALSE_POSITIVE_REPORT": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="false-positive-report"
                ),
            ],
        },
        "DATA_BREACH_DOCUMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="data_breach_document"),
            ],
        },
        "TA_DPIA_DOCUMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ta_dpia_document"),
            ],
        },
        "LIA_DOCUMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="lia_document"),
            ],
        },
        "CUSTOM_IDENTIFIER_KEYWORD_DICTIONARY": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="custom_identifier_keyword_dictionary",
                ),
            ],
        },
    },
)

UPLOADED_FILE_NAME = Schema(
    id=ShapeID("borneo#UploadedFileName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 255,
            },
        ),
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^(.*\\.(doc|txt|png|jpg|jpeg|dot|wbk|docx|docm|dotx|docb|xls|xltx|xltm|xlsb|xla|xlam|xll|xlw|ppt|pot|pps|pptx|pptm|potx|potm|ppam|ppsx|ppsm|sldx|sldm|key|odp|pps|ods|xlr|odt|odt|pdf|rtf|tex|wks|xlsx|json|csv))$",
        ),
    ],
)

FILE_INFO = Schema.collection(
    id=ShapeID("borneo#FileInfo"),
    members={
        "uploadedFileId": {
            "target": UUID,
        },
        "name": {
            "target": UPLOADED_FILE_NAME,
        },
        "category": {
            "target": UPLOADED_FILE_CATEGORY,
        },
        "url": {
            "target": STRING,
        },
    },
)

LAWFULNESS_TYPE = Schema.collection(
    id=ShapeID("borneo#LawfulnessType"),
    type=ShapeType.ENUM,
    members={
        "CONSENT_PERSON_CONCERNED": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="consent_person_concerned"
                ),
            ],
        },
        "CONTRACT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="contract"),
            ],
        },
        "STAKEHOLDER_VITAL_INTEREST": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"),
                    value="stakeholder_vital_interest",
                ),
            ],
        },
        "LEGITIMATE_INTEREST": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="legitimate_interest"),
            ],
        },
        "PUBLIC_INTEREST": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="public_interest"),
            ],
        },
        "LEGAL_OBLIGATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="legal_obligation"),
            ],
        },
    },
)

LAWFUL_BASIS = Schema.collection(
    id=ShapeID("borneo#LawfulBasis"),
    members={
        "lawfulnessType": {
            "target": LAWFULNESS_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "comment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInfoFile": {
            "target": STRING,
        },
        "additionalInfoFileObject": {
            "target": FILE_INFO,
        },
    },
)

LAWFUL_BASIS_COLLECTION = Schema.collection(
    id=ShapeID("borneo#LawfulBasisCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": LAWFUL_BASIS,
        },
    },
)

MANAGEMENT_METHOD_TYPE = Schema.collection(
    id=ShapeID("borneo#ManagementMethodType"),
    type=ShapeType.ENUM,
    members={
        "EMAIL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="email"),
            ],
        },
        "POSTAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="postal"),
            ],
        },
    },
)

POSTAL_ADDRESS = Schema.collection(
    id=ShapeID("borneo#PostalAddress"),
    members={
        "street": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "city": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "country": {
            "target": COUNTRY_CODE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "zipcode": {
            "target": ZIP_CODE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

MANAGEMENT_METHOD = Schema.collection(
    id=ShapeID("borneo#ManagementMethod"),
    members={
        "methodType": {
            "target": MANAGEMENT_METHOD_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "postalAddress": {
            "target": POSTAL_ADDRESS,
        },
    },
)

MANAGEMENT_METHOD_COLLECTION = Schema.collection(
    id=ShapeID("borneo#ManagementMethodCollection"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": MANAGEMENT_METHOD,
        },
    },
)

DATA_PROCESSING_FREQUENCY = Schema.collection(
    id=ShapeID("borneo#DataProcessingFrequency"),
    type=ShapeType.ENUM,
    members={
        "IS_SYSTEMATIC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="is_systematic"),
            ],
        },
        "IS_NOT_SYSTEMATIC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="not_systematic"),
            ],
        },
    },
)

RECIPIENT_ROLE_LIST = Schema.collection(
    id=ShapeID("borneo#RecipientRoleList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RECIPIENT_ROLE,
        },
    },
)

PROCESSING_ACTIVITY_RECIPIENT = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityRecipient"),
    members={
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "comment": {
            "target": STRING,
        },
    },
)

RECIPIENT_COLLECTION = Schema.collection(
    id=ShapeID("borneo#RecipientCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_RECIPIENT,
        },
    },
)

RETENTION_PERIOD_UNIT = Schema.collection(
    id=ShapeID("borneo#RetentionPeriodUnit"),
    type=ShapeType.ENUM,
    members={
        "DAY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="day"),
            ],
        },
        "WEEK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="week"),
            ],
        },
        "MONTH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="month"),
            ],
        },
        "YEAR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="year"),
            ],
        },
    },
)

RETENTION_PERIOD = Schema.collection(
    id=ShapeID("borneo#RetentionPeriod"),
    members={
        "unit": {
            "target": RETENTION_PERIOD_UNIT,
        },
        "value": {
            "target": INTEGER,
        },
    },
)

CREATE_PROCESSING_ACTIVITY_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateProcessingActivityInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "active": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "additionalInfo": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInfoFiles": {
            "target": UUID_COLLECTION,
        },
        "assets": {
            "target": UUID_COLLECTION,
        },
        "employees": {
            "target": UUID_COLLECTION,
        },
        "companyRole": {
            "target": COMPANY_ROLE_LIST,
        },
        "contactPerson": {
            "target": UUID,
        },
        "dataSources": {
            "target": PROCESSING_ACTIVITIY_DATA_SOURCE_COLLECTION,
        },
        "processingActivitiesAsDataSources": {
            "target": UUID_COLLECTION,
        },
        "dataSubjects": {
            "target": DATA_SUBJECT_COLLECTION,
        },
        "dataTypes": {
            "target": UUID_COLLECTION,
        },
        "departments": {
            "target": UUID_COLLECTION,
        },
        "lawfulBasis": {
            "target": LAWFUL_BASIS_COLLECTION,
        },
        "modelId": {
            "target": UUID,
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(
                    id=ShapeID("smithy.api#length"),
                    value={
                        "min": 3,
                        "max": 300,
                    },
                ),
            ],
        },
        "purpose": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "recipients": {
            "target": RECIPIENT_COLLECTION,
        },
        "retentionPeriod": {
            "target": RETENTION_PERIOD,
        },
        "retentionPeriodComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "infotypes": {
            "target": INFOTYPES_LIST,
        },
        "infotypeCategories": {
            "target": INFOTYPE_CATEGORY_LIST,
        },
        "infotypeVolume": {
            "target": INFOTYPE_VOLUME,
        },
        "processingFrequency": {
            "target": DATA_PROCESSING_FREQUENCY,
        },
        "processingFrequencyComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "isDataStored": {
            "target": BOOLEAN,
        },
        "areAccessRequestsManaged": {
            "target": BOOLEAN,
        },
        "managementMethods": {
            "target": MANAGEMENT_METHOD_COLLECTION,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "owner": {
            "target": STRING,
        },
        "dataFlowRelationships": {
            "target": DATA_FLOW_RELATIONSHIPS,
        },
        "showOnRopaDocument": {
            "target": BOOLEAN,
        },
    },
)

PROCESSING_ACTIVITY_ID = Schema(
    id=ShapeID("borneo#ProcessingActivityId"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
        ),
    ],
)

CREATE_PROCESSING_ACTIVITY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateProcessingActivityOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_PROCESSING_ACTIVITY_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeProcessingActivityInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

PROCESSING_ACTIVITY_ASSET_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityAssetList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": ASSET_RECORD,
        },
    },
)

PROCESSING_ACTIVITY_EMPLOYEE = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityEmployee"),
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "surname": {
            "target": STRING,
        },
    },
)

PROCESSING_ACTIVITY_DEPARTMENT = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityDepartment"),
    members={
        "departmentId": {
            "target": DEPARTMENT_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": DEPARTMENT_MODEL,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

PROCESSING_ACTIVITY_DEPARTMENT_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityDepartmentList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_DEPARTMENT,
        },
    },
)

PROCESSING_ACTIVITY_EMPLOYEE_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityEmployeeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_EMPLOYEE,
        },
    },
)

FRAMEWORK_TYPE = Schema.collection(
    id=ShapeID("borneo#FrameworkType"),
    type=ShapeType.ENUM,
    members={
        "GDPR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="gdpr"),
            ],
        },
        "LOPDP": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="lopdp"),
            ],
        },
    },
)

RECIPIENT_BUSINESS_NAME = Schema(
    id=ShapeID("borneo#RecipientBusinessName"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 200,
            },
        ),
    ],
)

RECIPIENT_CATEGORY = Schema.collection(
    id=ShapeID("borneo#RecipientCategory"),
    type=ShapeType.ENUM,
    members={
        "ACCOUNTING_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="accountingSoftware"),
            ],
        },
        "CLOUD_COMPUTING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudComputing"),
            ],
        },
        "CLOUD_STORAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudStorage"),
            ],
        },
        "CRM_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="crmSoftware"),
            ],
        },
        "CUSTOMER_SERVICE_PROVIDER": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="customerServiceProvider"
                ),
            ],
        },
        "CUSTOMER_SUPPORT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="customerSupport"),
            ],
        },
        "DATA_STORAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataStorage"),
            ],
        },
        "ECOMMERCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="eCommerce"),
            ],
        },
        "EMAIL_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="emailServices"),
            ],
        },
        "ERP_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="erpSoftware"),
            ],
        },
        "EVENTS_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="eventsSoftware"),
            ],
        },
        "HOSTING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="hosting"),
            ],
        },
        "INTERNAL_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="internalDepartment"),
            ],
        },
        "IT_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="itDepartment"),
            ],
        },
        "LAW_ENFORCEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="lawEnforcement"),
            ],
        },
        "LAW_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="lawServices"),
            ],
        },
        "LEGAL_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="legalDepartment"),
            ],
        },
        "LOGISTICS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="logistics"),
            ],
        },
        "MARKETING_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketingDepartment"),
            ],
        },
        "MARKETING_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketingSoftware"),
            ],
        },
        "MARKETING_TOOLS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketingTools"),
            ],
        },
        "OFFICES_APPS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="officesApps"),
            ],
        },
        "OTHER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="other"),
            ],
        },
        "PASSWORD_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="passwordManagement"),
            ],
        },
        "PAYMENT_PLATFORM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="paymentPlatform"),
            ],
        },
        "PREVENTION_RISKS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="preventionRisks"),
            ],
        },
        "PRODUCTION_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="productionDepartment"),
            ],
        },
        "PROPERTY_ADMINISTRATION": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="propertyAdministration"
                ),
            ],
        },
        "PUBLICA_DMINISTRATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="publicAdministration"),
            ],
        },
        "RRHH_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="rrhhDepartment"),
            ],
        },
        "RRHH_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="rrhhManagement"),
            ],
        },
        "RRHH_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="rrhhSoftware"),
            ],
        },
        "PRDEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="prDepartment"),
            ],
        },
        "SECURITY_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="securityServices"),
            ],
        },
        "SELL_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="sellDepartment"),
            ],
        },
        "SERVICES_PLATFORM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="servicesPlatform"),
            ],
        },
        "TAX_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="taxManagement"),
            ],
        },
        "IT_INFRASTRUCTURE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ITInfrastructure"),
            ],
        },
        "OFFICE_APPLICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="officeApplications"),
            ],
        },
        "TIC_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ticServices"),
            ],
        },
        "TRACKING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="tracking"),
            ],
        },
        "PHYSICAL_SECURITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="physicalSecurity"),
            ],
        },
        "CYBER_SECURITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cyberSecurity"),
            ],
        },
        "FINANCIAL_CRIME": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="financialCrime"),
            ],
        },
        "PHYSICAL_STORAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="physicalStorage"),
            ],
        },
        "ADMIN_DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="adminDepartment"),
            ],
        },
        "MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="management"),
            ],
        },
        "MESSAGING_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="messagingServices"),
            ],
        },
        "ORDERING_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="orderingSoftware"),
            ],
        },
        "MOBILITY_EQUIPMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="mobilityEquipment"),
            ],
        },
        "AUDIT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="audit"),
            ],
        },
        "INFORMATION_TECHNOLOGY": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="informationTechnology"
                ),
            ],
        },
        "SAAS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="saas"),
            ],
        },
        "ENTERPRISE_SOFTWARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="enterpriseSoftware"),
            ],
        },
        "FINANCIAL_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="financialServices"),
            ],
        },
        "HEALTH_CARE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="healthCare"),
            ],
        },
        "ADVERTISING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="advertising"),
            ],
        },
        "SOCIAL_MEDIA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="socialMedia"),
            ],
        },
        "ARTIFICIAL_INTELLIGENCE_AI": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="artificialIntelligenceAi"
                ),
            ],
        },
        "TELECOMMUNICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="telecommunications"),
            ],
        },
        "EDUCATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="education"),
            ],
        },
        "HOSPITALITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="hospitality"),
            ],
        },
        "VIDEO_STREAMING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="videoStreaming"),
            ],
        },
        "IDENTITY_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="identityManagement"),
            ],
        },
        "ANALYTICS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="analytics"),
            ],
        },
        "TRAVEL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="travel"),
            ],
        },
        "PHARMECEUTICALS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pharmaceuticals"),
            ],
        },
        "INSURANCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="insurance"),
            ],
        },
        "EVENTS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="events"),
            ],
        },
        "TOURISM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="tourism"),
            ],
        },
        "PAYROLL_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="payrollServices"),
            ],
        },
        "CRYPTO_CURRENCY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cryptoCurrency"),
            ],
        },
        "CONTENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="content"),
            ],
        },
        "CORE_BANKING_SYSTEM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="coreBankingSystem"),
            ],
        },
        "REGULATORY_REPORTING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="regulatoryReporting"),
            ],
        },
        "BANKCARDS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="bankCards"),
            ],
        },
        "APPS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="apps"),
            ],
        },
        "FINTECH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fintech"),
            ],
        },
        "NETWORK_SECURITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="networkSecurity"),
            ],
        },
        "MOBILE_APPS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="mobileApps"),
            ],
        },
        "BIG_DATA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="bigData"),
            ],
        },
        "DEVELOPER_TOOLS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="developerTools"),
            ],
        },
        "BUSINESS_INTELLIGENCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="businessIntelligence"),
            ],
        },
        "B2B": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="b2b"),
            ],
        },
        "MACHINE_LEARNING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="machineLearning"),
            ],
        },
        "CLOUD_SECURITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudSecurity"),
            ],
        },
        "TRAINING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="training"),
            ],
        },
        "SECURITY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="security"),
            ],
        },
        "CONSULTING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="consulting"),
            ],
        },
        "CLOUD_DATA_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudDataServices"),
            ],
        },
        "RETAIL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="retail"),
            ],
        },
        "PROJECT_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="projectManagement"),
            ],
        },
        "PROFESSIONAL_SERVICES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="professionalServices"),
            ],
        },
        "PUBLISHING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="publishing"),
            ],
        },
        "ELEARNING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="e-learning"),
            ],
        },
        "REAL_ESTATE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="realEstate"),
            ],
        },
        "BUSINESS_DEVELOPMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="businessDevelopment"),
            ],
        },
        "RISK_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="riskManagement"),
            ],
        },
        "VIDEO": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="video"),
            ],
        },
        "NON_PROFIT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="nonProfit"),
            ],
        },
        "TRANSPORTATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="transportation"),
            ],
        },
        "COMPLIANCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="compliance"),
            ],
        },
        "MARKETING_AUTOMATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketingAutomation"),
            ],
        },
        "DIGITAL_MEDIA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="digitalMedia"),
            ],
        },
        "CLOUD_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cloudManagement"),
            ],
        },
        "DATA_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataManagement"),
            ],
        },
        "PRODUCTIVITY_TOOLS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="productivityTools"),
            ],
        },
        "SMALL_AND_MEDIUM_BUSINESSES": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="smallAndMediumBusinesses"
                ),
            ],
        },
        "MEDICAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="medical"),
            ],
        },
        "AUTOMOTIVE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="automotive"),
            ],
        },
        "WEB_DESIGN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="webDesign"),
            ],
        },
        "DOCUMENT_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="documentManagement"),
            ],
        },
        "DEVOPS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="devops"),
            ],
        },
        "SEARCH_ENGINE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="searchEngine"),
            ],
        },
        "COMMUNITIES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="communities"),
            ],
        },
        "EDTECH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="edtech"),
            ],
        },
        "MARKETPLACE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketplace"),
            ],
        },
        "WELLNESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="wellness"),
            ],
        },
        "MARKET_RESEARCH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="marketResearch"),
            ],
        },
        "DATA_INTEGRATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataIntegration"),
            ],
        },
        "ONLINE_PORTALS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="onlinePortals"),
            ],
        },
        "DATABASE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="database"),
            ],
        },
        "OUTSOURCING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="outsourcing"),
            ],
        },
        "ASSET_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="assetManagement"),
            ],
        },
        "ELECTRONICS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="electronics"),
            ],
        },
        "INTERNET_OF_THINGS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="internetOfThings"),
            ],
        },
        "EMAIL_MARKETING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="emailMarketing"),
            ],
        },
        "DATA_VISUALIZATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataVisualization"),
            ],
        },
        "VENTURE_CAPITAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ventureCapital"),
            ],
        },
        "CONSUMER_ELECTRONICS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="consumerElectronics"),
            ],
        },
        "ENTERPRISE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="enterprise"),
            ],
        },
        "ENERGY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="energy"),
            ],
        },
        "CONSTRUCTION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="construction"),
            ],
        },
        "INSURTECH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="insurtech"),
            ],
        },
        "FILE_SHARING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fileSharing"),
            ],
        },
        "FOOD_AND_BEVERAGE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="foodAndBeverage"),
            ],
        },
        "VOIP": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="voip"),
            ],
        },
        "SUPPLY_CHAIN_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="supplyChainManagement"
                ),
            ],
        },
        "FITNESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="fitness"),
            ],
        },
        "AIRLINES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="airlines"),
            ],
        },
        "GOVERNMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="government"),
            ],
        },
        "BUSINESS_MANAGEMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="businessManagement"),
            ],
        },
        "NEWS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="news"),
            ],
        },
        "TRADING": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="trading"),
            ],
        },
        "CHAT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="chat"),
            ],
        },
    },
)

RECIPIENT_CATEGORY_COLLECTION = Schema.collection(
    id=ShapeID("borneo#RecipientCategoryCollection"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": RECIPIENT_CATEGORY,
        },
    },
)

COUNTRY_LIST = Schema.collection(
    id=ShapeID("borneo#CountryList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": COUNTRY_CODE,
        },
    },
)

RECIPIENT_DPA = Schema(
    id=ShapeID("borneo#RecipientDpa"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 255,
            },
        ),
    ],
)

RECIPIENT_DPA_STATUS = Schema.collection(
    id=ShapeID("borneo#RecipientDpaStatus"),
    type=ShapeType.ENUM,
    members={
        "ATTACHED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="attached"),
            ],
        },
        "NOT_REQUIRED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="notRequired"),
            ],
        },
        "REQUESTED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="requested"),
            ],
        },
    },
)

RECIPIENT_PRIVACY_POLICY_LINK = Schema(
    id=ShapeID("borneo#RecipientPrivacyPolicyLink"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 255,
            },
        ),
    ],
)

RECIPIENT_STATE = Schema.collection(
    id=ShapeID("borneo#RecipientState"),
    type=ShapeType.ENUM,
    members={
        "ACTIVE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="active"),
            ],
        },
        "ASSESSMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="assessment"),
            ],
        },
    },
)

RECIPIENT_LAWFUL_BASIS = Schema(
    id=ShapeID("borneo#RecipientLawfulBasis"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#pattern"),
            value="^([A-Za-z0-9-._]{1,36}|adequacyDecision|appropriateSafeguards|bcrs|euData|noTransfers|sccsTransfers|specificSituationExemption)$",
        ),
    ],
)

WARRANTY_LIST = Schema.collection(
    id=ShapeID("borneo#WarrantyList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": RECIPIENT_LAWFUL_BASIS,
        },
    },
)

STATE = Schema.collection(
    id=ShapeID("borneo#State"),
    type=ShapeType.ENUM,
    members={
        "AL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AL"),
            ],
        },
        "AK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AK"),
            ],
        },
        "AR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AR"),
            ],
        },
        "AZ": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AZ"),
            ],
        },
        "CA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CA"),
            ],
        },
        "CO": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CO"),
            ],
        },
        "CT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CT"),
            ],
        },
        "DC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DC"),
            ],
        },
        "DE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="DE"),
            ],
        },
        "FL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="FL"),
            ],
        },
        "GA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="GA"),
            ],
        },
        "HI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="HI"),
            ],
        },
        "IA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="IA"),
            ],
        },
        "ID": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ID"),
            ],
        },
        "IL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="IL"),
            ],
        },
        "IN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="IN"),
            ],
        },
        "KS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="KS"),
            ],
        },
        "KY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="KY"),
            ],
        },
        "LA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="LA"),
            ],
        },
        "MA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MA"),
            ],
        },
        "MD": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MD"),
            ],
        },
        "ME": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ME"),
            ],
        },
        "MI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MI"),
            ],
        },
        "MN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MN"),
            ],
        },
        "MO": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MO"),
            ],
        },
        "MS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MS"),
            ],
        },
        "MT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="MT"),
            ],
        },
        "NC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NC"),
            ],
        },
        "ND": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="ND"),
            ],
        },
        "NE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NE"),
            ],
        },
        "NH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NH"),
            ],
        },
        "NJ": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NJ"),
            ],
        },
        "NM": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NM"),
            ],
        },
        "NV": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NV"),
            ],
        },
        "NY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="NY"),
            ],
        },
        "OH": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OH"),
            ],
        },
        "OK": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OK"),
            ],
        },
        "OR": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="OR"),
            ],
        },
        "PA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="PA"),
            ],
        },
        "RI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="RI"),
            ],
        },
        "SC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SC"),
            ],
        },
        "SD": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="SD"),
            ],
        },
        "TN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="TN"),
            ],
        },
        "TX": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="TX"),
            ],
        },
        "UT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="UT"),
            ],
        },
        "VA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VA"),
            ],
        },
        "VT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="VT"),
            ],
        },
        "WA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="WA"),
            ],
        },
        "WI": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="WI"),
            ],
        },
        "WV": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="WV"),
            ],
        },
        "WY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="WY"),
            ],
        },
    },
)

RECIPIENT_STATUS = Schema.collection(
    id=ShapeID("borneo#RecipientStatus"),
    type=ShapeType.ENUM,
    members={
        "ARCHIVED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="archived"),
            ],
        },
        "VALIDATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="validated"),
            ],
        },
    },
)

PROCESSING_ACTIVITY_RECIPIENT_MEMBER = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityRecipientMember"),
    members={
        "name": {
            "target": RECIPIENT_NAME,
        },
        "businessName": {
            "target": RECIPIENT_BUSINESS_NAME,
        },
        "status": {
            "target": RECIPIENT_STATUS,
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "state": {
            "target": STATE,
        },
        "dpa": {
            "target": RECIPIENT_DPA,
        },
        "dpaFiles": {
            "target": UUID_COLLECTION,
        },
        "dpaStatus": {
            "target": RECIPIENT_DPA_STATUS,
        },
        "recipientModelId": {
            "target": UUID,
        },
        "recipientWarranties": {
            "target": WARRANTY_LIST,
        },
        "dataStorageLocation": {
            "target": COUNTRY_LIST,
        },
        "discoverySource": {
            "target": DISCOVERY_SOURCE_LIST,
        },
        "discoveredDate": {
            "target": TIMESTAMP,
        },
        "automationStatus": {
            "target": AUTOMATION_STATUS,
        },
        "recipientState": {
            "target": RECIPIENT_STATE,
        },
        "contactEmail": {
            "target": STRING,
        },
        "privacyPolicyLink": {
            "target": RECIPIENT_PRIVACY_POLICY_LINK,
        },
        "recipientId": {
            "target": UUID,
        },
        "comment": {
            "target": STRING,
        },
    },
)

PROCESSING_ACTIVITY_RECIPIENT_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityRecipientList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_RECIPIENT_MEMBER,
        },
    },
)

PROCESSING_ACTIVITY_STATUS = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityStatus"),
    type=ShapeType.ENUM,
    members={
        "PA_IN_DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="paInDraft"),
            ],
        },
        "PENDING_TA": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pendingTA"),
            ],
        },
        "TA_IN_DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="taInDraft"),
            ],
        },
        "DPIA_OPTIONAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpiaOptional"),
            ],
        },
        "DPIA_RECOMMENDED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpiaRecommended"),
            ],
        },
        "DPIA_REQUIRED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpiaRequired"),
            ],
        },
        "DPIA_IN_DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpiaInDraft"),
            ],
        },
        "DPIA_COMPLETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dpiaCompleted"),
            ],
        },
    },
)

DESCRIBE_PROCESSING_ACTIVITY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeProcessingActivityOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ProcessingActivityRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "active": {
            "target": BOOLEAN,
        },
        "additionalInfo": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInfoFiles": {
            "target": UUID_COLLECTION,
        },
        "companyRole": {
            "target": COMPANY_ROLE_LIST,
        },
        "createdBy": {
            "target": STRING,
        },
        "dataSources": {
            "target": PROCESSING_ACTIVITIY_DATA_SOURCE_COLLECTION,
        },
        "processingActivitiesAsDataSources": {
            "target": UUID_COLLECTION,
        },
        "dataSubjects": {
            "target": DATA_SUBJECT_COLLECTION,
        },
        "dataTypes": {
            "target": UUID_COLLECTION,
        },
        "lawfulBasis": {
            "target": LAWFUL_BASIS_COLLECTION,
        },
        "modelId": {
            "target": UUID,
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "purpose": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "recipientObjects": {
            "target": PROCESSING_ACTIVITY_RECIPIENT_LIST,
        },
        "employeeObjects": {
            "target": PROCESSING_ACTIVITY_EMPLOYEE_LIST,
        },
        "retentionPeriod": {
            "target": RETENTION_PERIOD,
        },
        "retentionPeriodComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "status": {
            "target": PROCESSING_ACTIVITY_STATUS,
        },
        "departmentObjects": {
            "target": PROCESSING_ACTIVITY_DEPARTMENT_LIST,
        },
        "assetObjects": {
            "target": PROCESSING_ACTIVITY_ASSET_LIST,
        },
        "contactPersonEmployee": {
            "target": PROCESSING_ACTIVITY_EMPLOYEE,
        },
        "infotypes": {
            "target": INFOTYPES_LIST,
        },
        "infotypeCategories": {
            "target": INFOTYPE_CATEGORY_LIST,
        },
        "infotypeVolume": {
            "target": INFOTYPE_VOLUME,
        },
        "processingFrequency": {
            "target": DATA_PROCESSING_FREQUENCY,
        },
        "processingFrequencyComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "isDataStored": {
            "target": BOOLEAN,
        },
        "areAccessRequestsManaged": {
            "target": BOOLEAN,
        },
        "managementMethods": {
            "target": MANAGEMENT_METHOD_COLLECTION,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "framework": {
            "target": FRAMEWORK_TYPE,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "owner": {
            "target": STRING,
        },
        "dataFlowRelationships": {
            "target": DATA_FLOW_RELATIONSHIPS,
        },
        "showOnRopaDocument": {
            "target": BOOLEAN,
        },
        "uploadedTaFileId": {
            "target": UUID,
        },
        "uploadedDpiaFileId": {
            "target": UUID,
        },
        "uploadedTaDpiaFileId": {
            "target": UUID,
        },
    },
)

PROCESSING_ACTIVITY_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#ProcessingActivitySelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "departments": {
            "target": UNIQUE_STRING_LIST,
        },
        "assets": {
            "target": UNIQUE_STRING_LIST,
        },
        "owners": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "recipients": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataTypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "infotypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "infotypeCategories": {
            "target": UNIQUE_STRING_LIST,
        },
        "employees": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataSubjects": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataSources": {
            "target": UNIQUE_STRING_LIST,
        },
        "languages": {
            "target": UNIQUE_STRING_LIST,
        },
        "companyRoles": {
            "target": UNIQUE_STRING_LIST,
        },
        "paAsDataSource": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_PROCESSING_ACTIVITIES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ProcessingActivityListInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": PROCESSING_ACTIVITY_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

PROCESSING_ACTIVITY_LIST_RECORD = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityListRecord"),
    members={
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "active": {
            "target": BOOLEAN,
        },
        "departmentObjects": {
            "target": PROCESSING_ACTIVITY_DEPARTMENT_LIST,
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
        },
        "recipientObjects": {
            "target": PROCESSING_ACTIVITY_RECIPIENT_LIST,
        },
        "employeeObjects": {
            "target": PROCESSING_ACTIVITY_EMPLOYEE_LIST,
        },
        "status": {
            "target": PROCESSING_ACTIVITY_STATUS,
        },
        "createdBy": {
            "target": STRING,
        },
        "owner": {
            "target": STRING,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "language": {
            "target": LANGUAGE_TYPE,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "framework": {
            "target": FRAMEWORK_TYPE,
        },
        "companyRole": {
            "target": COMPANY_ROLE_LIST,
        },
        "uploadedTaFileId": {
            "target": UUID,
        },
        "uploadedDpiaFileId": {
            "target": UUID,
        },
        "uploadedTaDpiaFileId": {
            "target": UUID,
        },
        "relatedProcessingActivities": {
            "target": INTEGER,
        },
    },
)

PROCESSING_ACTIVITY_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_LIST_RECORD,
        },
    },
)

LIST_PROCESSING_ACTIVITIES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ProcessingActivityListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "processingActivities": {
            "target": PROCESSING_ACTIVITY_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

EXPORT_TYPE = Schema.collection(
    id=ShapeID("borneo#ExportType"),
    type=ShapeType.ENUM,
    members={
        "CSV": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="csv"),
            ],
        },
        "PDF": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="pdf"),
            ],
        },
        "DOC": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="doc"),
            ],
        },
    },
)

EXPORT_TYPE_LIST = Schema.collection(
    id=ShapeID("borneo#ExportTypeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": EXPORT_TYPE,
        },
    },
)

PROCESSING_ACTIVITY_EXPORT_FILTERS = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityExportFilters"),
    members={
        "processingActivityId": {
            "target": UUID,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "departments": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataSubjects": {
            "target": UNIQUE_STRING_LIST,
        },
        "employees": {
            "target": UNIQUE_STRING_LIST,
        },
        "infotypes": {
            "target": UNIQUE_STRING_LIST,
        },
        "owners": {
            "target": UNIQUE_STRING_LIST,
        },
        "recipients": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
    },
)

LIST_PROCESSING_ACTIVITIES_EXPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesExportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "exportTypes": {
            "target": EXPORT_TYPE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "language": {
            "target": LANGUAGE_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "filter": {
            "target": PROCESSING_ACTIVITY_EXPORT_FILTERS,
        },
    },
)

EXPORTED_DATA_URL = Schema.collection(
    id=ShapeID("borneo#ExportedDataUrl"),
    members={
        "url": {
            "target": STRING,
        },
        "type": {
            "target": EXPORT_TYPE,
        },
    },
)

URL_LIST = Schema.collection(
    id=ShapeID("borneo#UrlList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": EXPORTED_DATA_URL,
        },
    },
)

LIST_PROCESSING_ACTIVITIES_EXPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesExportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "urlList": {
            "target": URL_LIST,
        },
    },
)

LIST_PROCESSING_ACTIVITY_FILTER_TYPE = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivityFilterType"),
    type=ShapeType.ENUM,
    members={
        "OWNER": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="owner"),
            ],
        },
        "RECIPIENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recipient"),
            ],
        },
        "STATUS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="status"),
            ],
        },
        "DEPARTMENT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="department"),
            ],
        },
        "DATA_SUBJECT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="dataSubject"),
            ],
        },
        "EMPLOYEE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="employee"),
            ],
        },
        "COMPANY_ROLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="companyRole"),
            ],
        },
        "ASSET": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="asset"),
            ],
        },
    },
)

LIST_PROCESSING_ACTIVITY_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivityFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filterType": {
            "target": LIST_PROCESSING_ACTIVITY_FILTER_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

LIST_PROCESSING_ACTIVITY_FILTER_MEMBER = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivityFilterMember"),
    members={
        "id": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
    },
)

PROCESSING_ACTIVITY_FILTER_OUTPUT_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityFilterOutputList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": LIST_PROCESSING_ACTIVITY_FILTER_MEMBER,
        },
    },
)

LIST_PROCESSING_ACTIVITY_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivityFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "enteries": {
            "target": PROCESSING_ACTIVITY_FILTER_OUTPUT_LIST,
        },
    },
)

PA_STATS_TIME_SERIES_INPUT = Schema.collection(
    id=ShapeID("borneo#PaStatsTimeSeriesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CHANGE_IN_PROCESSING_ACTIVITY_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ChangeInProcessingActivityStatsOutput"),
    members={
        "paInDraftChange": {
            "target": INTEGER,
        },
        "pendingTAChange": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "taInDraftChange": {
            "target": INTEGER,
        },
        "dpiaOptionalChange": {
            "target": INTEGER,
        },
        "dpiaRecommendedChange": {
            "target": INTEGER,
        },
        "dpiaRequiredChange": {
            "target": INTEGER,
        },
        "dpiaInDraftChange": {
            "target": INTEGER,
        },
        "dpiaCompletedChange": {
            "target": INTEGER,
        },
        "totalPAChange": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "completeTAChange": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "readinessScoreChange": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "requiredDpiasInDraftChange": {
            "target": INTEGER,
        },
        "allRequiredDpiaChange": {
            "target": INTEGER,
        },
        "previousReadingDate": {
            "target": TIMESTAMP,
        },
        "currentReadingDate": {
            "target": TIMESTAMP,
        },
    },
)

SUMMARIZE_PROCESSING_ACTIVITY_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeProcessingActivityStatsOutput"),
    members={
        "paInDraft": {
            "target": INTEGER,
        },
        "pendingTA": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "taInDraft": {
            "target": INTEGER,
        },
        "dpiaOptional": {
            "target": INTEGER,
        },
        "dpiaRecommended": {
            "target": INTEGER,
        },
        "dpiaRequired": {
            "target": INTEGER,
        },
        "dpiaInDraft": {
            "target": INTEGER,
        },
        "dpiaCompleted": {
            "target": INTEGER,
        },
        "totalPA": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "completeTA": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "readinessScore": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "requiredDpiasInDraft": {
            "target": INTEGER,
        },
        "allRequiredDpia": {
            "target": INTEGER,
        },
        "framework": {
            "target": FRAMEWORK_TYPE,
        },
        "organisationId": {
            "target": INTEGER,
        },
        "resolutionPeriodForPAs": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "changes": {
            "target": CHANGE_IN_PROCESSING_ACTIVITY_STATS_OUTPUT,
        },
    },
)

PA_STATS_TIME_SERIES_POINT = Schema.collection(
    id=ShapeID("borneo#PaStatsTimeSeriesPoint"),
    members={
        "timestamp": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "data": {
            "target": SUMMARIZE_PROCESSING_ACTIVITY_STATS_OUTPUT,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

PA_STATS_TIME_SERIES_LIST = Schema.collection(
    id=ShapeID("borneo#PaStatsTimeSeriesList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PA_STATS_TIME_SERIES_POINT,
        },
    },
)

PA_STATS_TIME_SERIES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#PaStatsTimeSeriesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": PA_STATS_TIME_SERIES_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

REMOVE_PROCESSING_ACTIVITY_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveProcessingActivityInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_PROCESSING_ACTIVITY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveProcessingActivityOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

REMOVE_TA_DPIA_FILE_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveTaDpiaFileInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "docType": {
            "target": PROCESSING_ACTIVITY_DOC_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

REMOVE_TA_DPIA_FILE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveTaDpiaFileOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

SUMMARIZE_PA_STATS_FOR_OWNERS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizePaStatsForOwnersInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
        },
    },
)

PA_STATS_PER_OWNER = Schema.collection(
    id=ShapeID("borneo#PaStatsPerOwner"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": SUMMARIZE_PROCESSING_ACTIVITY_STATS_OUTPUT,
        },
    },
)

PA_STATS_PER_OWNER_LIST = Schema.collection(
    id=ShapeID("borneo#PaStatsPerOwnerList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PA_STATS_PER_OWNER,
        },
    },
)

SUMMARIZE_PA_STATS_FOR_OWNERS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizePaStatsForOwnersOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": PA_STATS_PER_OWNER_LIST,
        },
    },
)

UPDATE_PROCESSING_ACTIVITY_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateProcessingActivityInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": PROCESSING_ACTIVITY_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "active": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "additionalInfo": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "additionalInfoFiles": {
            "target": UUID_COLLECTION,
        },
        "assets": {
            "target": UUID_COLLECTION,
        },
        "employees": {
            "target": UUID_COLLECTION,
        },
        "companyRole": {
            "target": COMPANY_ROLE_LIST,
        },
        "contactPerson": {
            "target": UUID,
        },
        "dataSources": {
            "target": PROCESSING_ACTIVITIY_DATA_SOURCE_COLLECTION,
        },
        "processingActivitiesAsDataSources": {
            "target": UUID_COLLECTION,
        },
        "dataSubjects": {
            "target": DATA_SUBJECT_COLLECTION,
        },
        "dataTypes": {
            "target": UUID_COLLECTION,
        },
        "departments": {
            "target": UUID_COLLECTION,
        },
        "lawfulBasis": {
            "target": LAWFUL_BASIS_COLLECTION,
        },
        "modelId": {
            "target": UUID,
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "purpose": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "recipients": {
            "target": RECIPIENT_COLLECTION,
        },
        "retentionPeriod": {
            "target": RETENTION_PERIOD,
        },
        "retentionPeriodComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "infotypes": {
            "target": INFOTYPES_LIST,
        },
        "infotypeCategories": {
            "target": INFOTYPE_CATEGORY_LIST,
        },
        "infotypeVolume": {
            "target": INFOTYPE_VOLUME,
        },
        "processingFrequency": {
            "target": DATA_PROCESSING_FREQUENCY,
        },
        "processingFrequencyComment": {
            "target": PRIVACY_OPS_LONG_TEXT,
        },
        "isDataStored": {
            "target": BOOLEAN,
        },
        "areAccessRequestsManaged": {
            "target": BOOLEAN,
        },
        "managementMethods": {
            "target": MANAGEMENT_METHOD_COLLECTION,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "owner": {
            "target": STRING,
        },
        "dataFlowRelationships": {
            "target": DATA_FLOW_RELATIONSHIPS,
        },
        "showOnRopaDocument": {
            "target": BOOLEAN,
        },
    },
)

UPDATE_PROCESSING_ACTIVITY_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateProcessingActivityOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_TA_DPIA_FILE_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateTaDpiaFileInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "uploadedFileId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "docType": {
            "target": PROCESSING_ACTIVITY_DOC_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

UPDATE_TA_DPIA_FILE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateTaDpiaFileOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

VALIDATE_CLONE_PA_FOR_TARGET_ORG_INPUT = Schema.collection(
    id=ShapeID("borneo#ValidateClonePaForTargetOrgInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "sourceProcessingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "targetOrganisationId": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

VALIDATE_CLONE_PA_FOR_TARGET_ORG_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ValidateClonePaForTargetOrgOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "missingProcessingActivityObjects": {
            "target": MISSING_PROCESSING_ACTIVITY_OBJECTS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingDpiaObjects": {
            "target": MISSING_DPIA_OBJECTS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "missingOwner": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

CREATE_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": RECIPIENT_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "businessName": {
            "target": RECIPIENT_BUSINESS_NAME,
        },
        "status": {
            "target": RECIPIENT_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "state": {
            "target": STATE,
        },
        "dpa": {
            "target": RECIPIENT_DPA,
        },
        "dpaFiles": {
            "target": UUID_COLLECTION,
        },
        "dpaStatus": {
            "target": RECIPIENT_DPA_STATUS,
        },
        "recipientModelId": {
            "target": UUID,
        },
        "dataStorageLocation": {
            "target": COUNTRY_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "recipientWarranties": {
            "target": WARRANTY_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "fromDiscoveredRecipientId": {
            "target": UUID,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "subProcessorIds": {
            "target": UUID_COLLECTION,
        },
        "recipientState": {
            "target": RECIPIENT_STATE,
        },
        "contactEmail": {
            "target": STRING,
        },
        "privacyPolicyLink": {
            "target": RECIPIENT_PRIVACY_POLICY_LINK,
        },
    },
)

CREATE_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

RECIPIENT_FOR_FILTER_MEMBER = Schema.collection(
    id=ShapeID("borneo#RecipientForFilterMember"),
    members={
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": RECIPIENT_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

RECIPIENTS_FOR_FILTER_LIST = Schema.collection(
    id=ShapeID("borneo#RecipientsForFilterList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RECIPIENT_FOR_FILTER_MEMBER,
        },
    },
)

DESCRIBE_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "name": {
            "target": RECIPIENT_NAME,
        },
        "businessName": {
            "target": RECIPIENT_BUSINESS_NAME,
        },
        "status": {
            "target": RECIPIENT_STATUS,
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "state": {
            "target": STATE,
        },
        "dpa": {
            "target": RECIPIENT_DPA,
        },
        "dpaFiles": {
            "target": UUID_COLLECTION,
        },
        "dpaStatus": {
            "target": RECIPIENT_DPA_STATUS,
        },
        "recipientModelId": {
            "target": UUID,
        },
        "recipientWarranties": {
            "target": WARRANTY_LIST,
        },
        "dataStorageLocation": {
            "target": COUNTRY_LIST,
        },
        "discoverySource": {
            "target": DISCOVERY_SOURCE_LIST,
        },
        "discoveredDate": {
            "target": TIMESTAMP,
        },
        "automationStatus": {
            "target": AUTOMATION_STATUS,
        },
        "recipientState": {
            "target": RECIPIENT_STATE,
        },
        "contactEmail": {
            "target": STRING,
        },
        "privacyPolicyLink": {
            "target": RECIPIENT_PRIVACY_POLICY_LINK,
        },
        "subProcessors": {
            "target": RECIPIENTS_FOR_FILTER_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

LIST_PROCESSING_ACTIVITIES_OF_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesOfRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "nextToken": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "pageSize": {
            "target": PAGE_SIZE,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

PROCESSING_ACTIVITY_OF_RECIPIENT_MEMBER = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityOfRecipientMember"),
    members={
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": PRIVACY_OPS_STANDARD_TEXT,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "active": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "updatedAt": {
            "target": TIMESTAMP,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

PROCESSING_ACTIVITY_OF_RECIPIENT_LIST = Schema.collection(
    id=ShapeID("borneo#ProcessingActivityOfRecipientList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": PROCESSING_ACTIVITY_OF_RECIPIENT_MEMBER,
        },
    },
)

LIST_PROCESSING_ACTIVITIES_OF_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListProcessingActivitiesOfRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "processingActivitiesOfRecipient": {
            "target": PROCESSING_ACTIVITY_OF_RECIPIENT_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "nextToken": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

LIST_RECIPIENT_FILTER_TYPE = Schema.collection(
    id=ShapeID("borneo#ListRecipientFilterType"),
    type=ShapeType.ENUM,
    members={
        "CATEGORIES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="categories"),
            ],
        },
        "ROLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="role"),
            ],
        },
    },
)

LIST_RECIPIENT_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filterType": {
            "target": LIST_RECIPIENT_FILTER_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

RECIPIENT_FILTER_OUTPUT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#RecipientFilterOutputListMember"),
    members={
        "id": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
    },
)

RECIPIENT_FILTER_OUTPUT_LIST = Schema.collection(
    id=ShapeID("borneo#RecipientFilterOutputList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RECIPIENT_FILTER_OUTPUT_LIST_MEMBER,
        },
    },
)

LIST_RECIPIENT_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "entries": {
            "target": RECIPIENT_FILTER_OUTPUT_LIST,
        },
    },
)

USED_IN_FILTER = Schema.collection(
    id=ShapeID("borneo#UsedInFilter"),
    type=ShapeType.UNION,
    members={
        "recipientsWithoutCompletedPA": {
            "target": BOOLEAN,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
        "recipientsWithAtleastOnePA": {
            "target": BOOLEAN,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "AbbreviationName",
                    ],
                ),
            ],
        },
    },
)

RECIPIENT_FILTERS = Schema.collection(
    id=ShapeID("borneo#RecipientFilters"),
    members={
        "search": {
            "target": STRING,
        },
        "discoverySource": {
            "target": UNIQUE_STRING_LIST,
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": UNIQUE_STRING_LIST,
        },
        "usedIn": {
            "target": USED_IN_FILTER,
        },
        "recipientIds": {
            "target": UUID_COLLECTION,
        },
        "subProcessorIds": {
            "target": UUID_COLLECTION,
        },
        "automationStatus": {
            "target": UNIQUE_STRING_LIST,
        },
        "withNoProcessingActivity": {
            "target": BOOLEAN,
        },
        "departments": {
            "target": UUID_COLLECTION,
        },
        "status": {
            "target": RECIPIENT_STATUS,
        },
        "recipientWarranties": {
            "target": UUID_COLLECTION,
        },
        "recipientState": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_RECIPIENTS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "filter": {
            "target": RECIPIENT_FILTERS,
        },
    },
)

RECIPIENT_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#RecipientListMember"),
    members={
        "recipientId": {
            "target": UUID,
        },
        "name": {
            "target": RECIPIENT_NAME,
        },
        "status": {
            "target": RECIPIENT_STATUS,
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
        },
        "discoverySource": {
            "target": DISCOVERY_SOURCE_LIST,
        },
        "automationStatus": {
            "target": AUTOMATION_STATUS,
        },
        "recipientModelId": {
            "target": UUID,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "dataStorageLocation": {
            "target": COUNTRY_LIST,
        },
        "recipientWarranties": {
            "target": WARRANTY_LIST,
        },
        "recipientState": {
            "target": RECIPIENT_STATE,
        },
        "contactEmail": {
            "target": STRING,
        },
        "lastModification": {
            "target": TIMESTAMP,
        },
        "processingActivities": {
            "target": INTEGER,
        },
        "departments": {
            "target": UNIQUE_STRING_LIST,
        },
        "archivedAt": {
            "target": TIMESTAMP,
        },
        "key": {
            "target": STRING,
        },
    },
)

RECIPIENT_LIST = Schema.collection(
    id=ShapeID("borneo#RecipientList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RECIPIENT_LIST_MEMBER,
        },
    },
)

LIST_RECIPIENTS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "recipients": {
            "target": RECIPIENT_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_RECIPIENTS_EXPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsExportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "exportTypes": {
            "target": EXPORT_TYPE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "filter": {
            "target": RECIPIENT_FILTERS,
        },
    },
)

LIST_RECIPIENTS_EXPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsExportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "urlList": {
            "target": URL_LIST,
        },
    },
)

LIST_RECIPIENTS_FOR_FILTER_INPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsForFilterInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
    },
)

LIST_RECIPIENTS_FOR_FILTER_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListRecipientsForFilterOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "recipients": {
            "target": RECIPIENTS_FOR_FILTER_LIST,
        },
    },
)

REMOVE_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_RECIPIENT_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateRecipientInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "name": {
            "target": RECIPIENT_NAME,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "businessName": {
            "target": RECIPIENT_BUSINESS_NAME,
        },
        "status": {
            "target": RECIPIENT_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "categories": {
            "target": RECIPIENT_CATEGORY_COLLECTION,
        },
        "role": {
            "target": RECIPIENT_ROLE_LIST,
        },
        "country": {
            "target": COUNTRY_CODE,
        },
        "state": {
            "target": STATE,
        },
        "dpa": {
            "target": RECIPIENT_DPA,
        },
        "dpaFiles": {
            "target": UUID_COLLECTION,
        },
        "dpaStatus": {
            "target": RECIPIENT_DPA_STATUS,
        },
        "dataStorageLocation": {
            "target": COUNTRY_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "recipientWarranties": {
            "target": WARRANTY_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "automationStatus": {
            "target": AUTOMATION_STATUS,
        },
        "subProcessorIds": {
            "target": UUID_COLLECTION,
        },
        "recipientState": {
            "target": RECIPIENT_STATE,
        },
        "contactEmail": {
            "target": STRING,
        },
        "privacyPolicyLink": {
            "target": RECIPIENT_PRIVACY_POLICY_LINK,
        },
    },
)

UPDATE_RECIPIENT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateRecipientOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_RECIPIENT_STATUS_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateRecipientStatusInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "recipientId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "status": {
            "target": RECIPIENT_STATUS,
        },
        "automationStatus": {
            "target": AUTOMATION_STATUS,
        },
    },
)

UPDATE_RECIPIENT_STATUS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateRecipientStatusOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

CLOUD_ACCOUNT = Schema.collection(
    id=ShapeID("borneo#CloudAccount"),
    members={
        "cloudProvider": {
            "target": ACCOUNT_TYPE,
        },
        "cloudConnectionName": {
            "target": STRING,
        },
    },
)

DESCRIBE_INVENTORY_RESOURCE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeInventoryResourceInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

SCAN_TYPE = Schema.collection(
    id=ShapeID("borneo#ScanType"),
    type=ShapeType.ENUM,
    members={
        "SAMPLE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="sample"),
            ],
        },
        "FULL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="full"),
            ],
        },
    },
)

SCAN_INFORMATION = Schema.collection(
    id=ShapeID("borneo#ScanInformation"),
    members={
        "type": {
            "target": SCAN_TYPE,
        },
        "status": {
            "target": SCAN_STATUS,
        },
        "lastScan": {
            "target": TIMESTAMP,
        },
    },
)

DATA_SIZE = Schema.collection(
    id=ShapeID("borneo#DataSize"),
    members={
        "bytes": {
            "target": INTEGER,
        },
        "rows": {
            "target": INTEGER,
        },
        "objects": {
            "target": INTEGER,
        },
    },
)

RESOURCE_STATS_DATA = Schema.collection(
    id=ShapeID("borneo#ResourceStatsData"),
    members={
        "fullScanInspectedBytes": {
            "target": LONG,
        },
        "sampleScanInspectedBytes": {
            "target": LONG,
        },
        "infotypesCount": {
            "target": LONG,
        },
        "infotypeTokensCount": {
            "target": LONG,
        },
        "scannedResources": {
            "target": INTEGER,
        },
        "unscannedResources": {
            "target": INTEGER,
        },
        "scannedChildResourceCount": {
            "target": INTEGER,
        },
        "unscannedChildResourceCount": {
            "target": INTEGER,
        },
        "totalResources": {
            "target": INTEGER,
        },
        "sampleScanCount": {
            "target": INTEGER,
        },
        "fullScanCount": {
            "target": INTEGER,
        },
        "dataSize": {
            "target": DATA_SIZE,
        },
        "resourcesWithDataSize": {
            "target": INTEGER,
        },
        "violationCount": {
            "target": INTEGER,
        },
        "applicablePolicyCount": {
            "target": INTEGER,
        },
        "failedPolicyCount": {
            "target": INTEGER,
        },
        "deployedConnectorsCount": {
            "target": INTEGER,
        },
    },
)

DESCRIBE_INVENTORY_RESOURCE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeInventoryResourceOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "source": {
            "target": SOURCE_OF_RESOURCE,
        },
        "parentId": {
            "target": STRING,
        },
        "failedRules": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataClassification": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataCategories": {
            "target": UNIQUE_STRING_LIST,
        },
        "scan": {
            "target": SCAN_INFORMATION,
        },
        "firstSeen": {
            "target": STRING,
        },
        "lastUpdated": {
            "target": STRING,
        },
        "severityScore": {
            "target": INTEGER,
        },
        "properties": {
            "target": OPEN_PROPERTIES,
        },
        "aka": {
            "target": STRING,
        },
        "issueId": {
            "target": ISSUE_ID,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "failedPolicies": {
            "target": UNIQUE_STRING_LIST,
        },
        "stats": {
            "target": RESOURCE_STATS_DATA,
        },
        "violationCount": {
            "target": SEVERITY_COUNT_LIST,
        },
        "frameworkExceptionsCount": {
            "target": INTEGER,
        },
        "cloudAccount": {
            "target": CLOUD_ACCOUNT,
        },
    },
)

RESOURCE_LINEAGE_FILTER = Schema.collection(
    id=ShapeID("borneo#ResourceLineageFilter"),
    members={
        "resourceId": {
            "target": STRING,
        },
        "upstreamDepth": {
            "target": INTEGER,
        },
        "downstreamDepth": {
            "target": INTEGER,
        },
    },
)

DESCRIBE_RESOURCE_LINEAGE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeResourceLineageInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": RESOURCE_LINEAGE_FILTER,
        },
    },
)

LIST_ACTIVE_RESOURCE_TIMELINE_INPUT = Schema.collection(
    id=ShapeID("borneo#ListActiveResourceTimelineInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ResourceTrendsFilter",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_ACTIVE_RESOURCE_TIMELINE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListActiveResourceTimelineOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": ACTIVE_RESOURCES_STATS_LIST,
        },
    },
)

LIST_COLUMNS_FOR_RESOURCES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListColumnsForResourcesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "parentResourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="parentResourceId"),
            ],
        },
        "searchKey": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="searchKey"),
            ],
        },
        "sourceType": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="sourceType"),
            ],
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="resourceId"),
            ],
        },
        "dataSpaces": {
            "target": UNIQUE_STRING_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#httpQuery"), value="dataspace"),
            ],
        },
    },
)

PROPERTIES = Schema.collection(
    id=ShapeID("borneo#Properties"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": STRING,
        },
    },
)

RESOURCE_COLUMNS = Schema.collection(
    id=ShapeID("borneo#ResourceColumns"),
    members={
        "resourceId": {
            "target": RESOURCE_ID,
        },
        "resourceName": {
            "target": STRING,
        },
        "columns": {
            "target": UNIQUE_STRING_LIST,
        },
        "properties": {
            "target": PROPERTIES,
        },
    },
)

RESOURCE_COLUMNS_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceColumnsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_COLUMNS,
        },
    },
)

LIST_COLUMNS_FOR_RESOURCES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListColumnsForResourcesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": RESOURCE_COLUMNS_LIST,
        },
    },
)

DATA_SOURCE_CATEGORY = Schema.collection(
    id=ShapeID("borneo#DataSourceCategory"),
    type=ShapeType.ENUM,
    members={
        "AWS_DATA_STORES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AWSDataStores"),
            ],
        },
        "GCP_DATA_STORES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="GCPDataStores"),
            ],
        },
        "STANDALONE_DATA_STORES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="StandaloneDataStores"),
            ],
        },
        "CLOUD_APPLICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="CloudApplications"),
            ],
        },
        "DISCOVERED_APPLICATIONS": {
            "target": UNIT,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#enumValue"), value="DiscoveredApplications"
                ),
            ],
        },
        "AZURE_DATA_STORES": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="AzureDataStores"),
            ],
        },
    },
)

DATA_SOURCE_CATEGORY_LIST = Schema.collection(
    id=ShapeID("borneo#DataSourceCategoryList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": DATA_SOURCE_CATEGORY,
        },
    },
)

UNIQUE_INTEGER_LIST = Schema.collection(
    id=ShapeID("borneo#UniqueIntegerList"),
    type=ShapeType.LIST,
    traits=[
        Trait(id=ShapeID("smithy.api#uniqueItems")),
    ],
    members={
        "member": {
            "target": INTEGER,
        },
    },
)

INVENTORY_LIST_FILTER = Schema.collection(
    id=ShapeID("borneo#InventoryListFilter"),
    members={
        "accountId": {
            "target": STRING,
        },
        "projectId": {
            "target": STRING,
        },
        "region": {
            "target": STRING,
        },
        "regions": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
        "resourceType": {
            "target": STRING,
        },
        "resourceIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "parentId": {
            "target": STRING,
        },
        "firstSeen": {
            "target": TIME_FILTER,
        },
        "noOwner": {
            "target": BOOLEAN,
        },
        "hasOwner": {
            "target": BOOLEAN,
        },
        "hasPii": {
            "target": BOOLEAN,
        },
        "dataRisks": {
            "target": UNIQUE_STRING_LIST,
        },
        "severityScore": {
            "target": UNIQUE_INTEGER_LIST,
        },
        "hideBorneoResources": {
            "target": BOOLEAN,
            "traits": [
                Trait(id=ShapeID("smithy.api#default"), value=False),
            ],
        },
        "dataSourceCategories": {
            "target": DATA_SOURCE_CATEGORY_LIST,
        },
        "classification": {
            "target": UNIQUE_STRING_LIST,
        },
        "scannableResourceTypes": {
            "target": BOOLEAN,
        },
        "resourceTags": {
            "target": INVENTORY_TAG_FILTER_LIST,
        },
        "azureConnectionIds": {
            "target": UNIQUE_STRING_LIST,
        },
        "gcpConnectionIds": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_INVENTORY_RESOURCES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListInventoryResourcesInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ListInventoryResourceInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": INVENTORY_LIST_FILTER,
        },
        "include": {
            "target": ADDITIONAL_INVENTORY_DATA_OPTIONS,
        },
    },
)

RESOURCE_INVENTORY_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#ResourceInventoryListMember"),
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "source": {
            "target": SOURCE_OF_RESOURCE,
        },
        "parentId": {
            "target": STRING,
        },
        "failedRules": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataClassification": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataCategories": {
            "target": UNIQUE_STRING_LIST,
        },
        "scan": {
            "target": SCAN_INFORMATION,
        },
        "firstSeen": {
            "target": STRING,
        },
        "lastUpdated": {
            "target": STRING,
        },
        "severityScore": {
            "target": INTEGER,
        },
        "properties": {
            "target": OPEN_PROPERTIES,
        },
        "aka": {
            "target": STRING,
        },
        "issueId": {
            "target": ISSUE_ID,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "failedPolicies": {
            "target": UNIQUE_STRING_LIST,
        },
        "stats": {
            "target": RESOURCE_STATS_DATA,
        },
        "violationCount": {
            "target": SEVERITY_COUNT_LIST,
        },
        "frameworkExceptionsCount": {
            "target": INTEGER,
        },
        "cloudAccount": {
            "target": CLOUD_ACCOUNT,
        },
    },
)

RESOURCE_INVENTORY_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceInventoryList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_INVENTORY_LIST_MEMBER,
        },
    },
)

LIST_INVENTORY_RESOURCES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListInventoryResourcesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resources": {
            "target": RESOURCE_INVENTORY_LIST,
        },
        "count": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_INVENTORY_RESOURCES_EXPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#ListInventoryResourcesExportInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ListInventoryResourceInput",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "nextToken": {
            "target": STRING,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": INVENTORY_LIST_FILTER,
        },
        "include": {
            "target": ADDITIONAL_INVENTORY_DATA_OPTIONS,
        },
    },
)

LIST_INVENTORY_RESOURCES_EXPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListInventoryResourcesExportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "url": {
            "target": STRING,
        },
    },
)

CLASSIFICATION_STATS_FILTER = Schema.collection(
    id=ShapeID("borneo#ClassificationStatsFilter"),
    members={
        "classification": {
            "target": STRING,
        },
    },
)

SUMMARIZE_CLASSIFICATION_STATS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeClassificationStatsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": CLASSIFICATION_STATS_FILTER,
        },
    },
)

CLASSIFICATION_STATS_DATA = Schema.collection(
    id=ShapeID("borneo#ClassificationStatsData"),
    members={
        "count": {
            "target": INTEGER,
        },
        "type": {
            "target": STRING,
        },
        "classification": {
            "target": STRING,
        },
    },
)

CLASSIFICATION_STATS_LIST = Schema.collection(
    id=ShapeID("borneo#ClassificationStatsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": CLASSIFICATION_STATS_DATA,
        },
    },
)

CLASSIFICATION_STATS = Schema.collection(
    id=ShapeID("borneo#ClassificationStats"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": CLASSIFICATION_STATS_LIST,
        },
    },
)

SUMMARIZE_CLASSIFICATION_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeClassificationStatsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": CLASSIFICATION_STATS,
        },
    },
)

SUMMARIZE_DATA_STATS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeDataStatsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "sourceType": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#httpQuery"), value="sourceType"),
            ],
        },
    },
)

RESOURCE_DATA_STATS = Schema.collection(
    id=ShapeID("borneo#ResourceDataStats"),
    members={
        "sizeInBytes": {
            "target": STRING,
        },
        "entityCount": {
            "target": STRING,
        },
        "entityUnit": {
            "target": STRING,
        },
    },
)

SUMMARIZE_DATA_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeDataStatsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": RESOURCE_DATA_STATS,
        },
    },
)

SUMMARIZE_RESOURCE_STATS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceStatsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "includeDeletedResources": {
            "target": BOOLEAN,
        },
    },
)

RESOURCE_STATS = Schema.collection(
    id=ShapeID("borneo#ResourceStats"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": RESOURCE_STATS_DATA,
        },
    },
)

SUMMARIZE_RESOURCE_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceStatsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "total": {
            "target": INTEGER,
        },
        "result": {
            "target": RESOURCE_STATS,
        },
    },
)

SUMMARIZE_RESOURCE_TRENDS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceTrendsInput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ResourceTrendsFilter",
        ),
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resourceTypes": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

RESOURCE_TRENDS = Schema.collection(
    id=ShapeID("borneo#ResourceTrends"),
    members={
        "type": {
            "target": STRING,
        },
        "discovered": {
            "target": INTEGER,
        },
        "removed": {
            "target": INTEGER,
        },
        "lastUpdated": {
            "target": TIMESTAMP,
        },
        "previousDiscovered": {
            "target": INTEGER,
        },
        "previousRemoved": {
            "target": INTEGER,
        },
        "netChange": {
            "target": INTEGER,
        },
    },
)

RESOURCE_TRENDS_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceTrendsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_TRENDS,
        },
    },
)

SUMMARIZE_RESOURCE_TRENDS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeResourceTrendsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": RESOURCE_TRENDS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
    },
)

RESOURCE_ENTITY_TYPE = Schema.collection(
    id=ShapeID("borneo#ResourceEntityType"),
    type=ShapeType.ENUM,
    members={
        "RESOURCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="resource"),
            ],
        },
        "RESOURCE_OBJECT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="resource_object"),
            ],
        },
        "ENTITY_ATTRIBUTE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="entity_attribute"),
            ],
        },
    },
)

TAG_ENTITIES_FILTER = Schema.collection(
    id=ShapeID("borneo#TagEntitiesFilter"),
    members={
        "accountId": {
            "target": STRING,
        },
        "region": {
            "target": STRING,
        },
        "regions": {
            "target": UNIQUE_STRING_LIST,
        },
        "search": {
            "target": STRING,
        },
        "resourceType": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

TAG_ENTITY_UNION = Schema.collection(
    id=ShapeID("borneo#TagEntityUnion"),
    type=ShapeType.UNION,
    members={
        "filter": {
            "target": TAG_ENTITIES_FILTER,
        },
        "entityIds": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

TAG_KEY = Schema(
    id=ShapeID("borneo#TagKey"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 63,
            },
        ),
        Trait(id=ShapeID("smithy.api#pattern"), value="^[a-zA-Z0-9\\s+\\-=._:/@]*$"),
    ],
)

TAG_VALUE = Schema(
    id=ShapeID("borneo#TagValue"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "max": 63,
            },
        ),
        Trait(id=ShapeID("smithy.api#pattern"), value="^[a-zA-Z0-9\\s+\\-=._:/@]*$"),
    ],
)

UNTAG_ENTITIES_INPUT = Schema.collection(
    id=ShapeID("borneo#UntagEntitiesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "tagKey": {
            "target": TAG_KEY,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "tagValue": {
            "target": TAG_VALUE,
        },
        "tagEntities": {
            "target": TAG_ENTITY_UNION,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "entityType": {
            "target": RESOURCE_ENTITY_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

TAGGING_RESULT = Schema.collection(
    id=ShapeID("borneo#TaggingResult"),
    members={
        "entityId": {
            "target": STRING,
        },
        "status": {
            "target": STRING,
        },
    },
)

TAGGING_RESULTS_LIST = Schema.collection(
    id=ShapeID("borneo#TaggingResultsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": TAGGING_RESULT,
        },
    },
)

UNTAG_ENTITIES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UntagEntitiesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "results": {
            "target": TAGGING_RESULTS_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#notProperty")),
            ],
        },
    },
)

CREATE_FALSE_POSITIVE_REPORT_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateFalsePositiveReportInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "reports": {
            "target": UUID_COLLECTION,
        },
    },
)

FALSE_POSITIVE_REPORT = Schema.collection(
    id=ShapeID("borneo#FalsePositiveReport"),
    members={
        "id": {
            "target": STRING,
        },
        "createdBy": {
            "target": STRING,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "falsePositiveCount": {
            "target": INTEGER,
        },
        "hash": {
            "target": STRING,
        },
    },
)

FALSE_POSITIVE_REPORT_LIST = Schema.collection(
    id=ShapeID("borneo#FalsePositiveReportList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": FALSE_POSITIVE_REPORT,
        },
    },
)

CREATE_FALSE_POSITIVE_REPORT_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateFalsePositiveReportOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "falsePositiveReports": {
            "target": FALSE_POSITIVE_REPORT_LIST,
        },
    },
)

SCAN_NAME = Schema(
    id=ShapeID("borneo#ScanName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9.,_ @+=-]{1,100}$"),
    ],
)

PERCENTAGE = Schema(
    id=ShapeID("borneo#Percentage"),
    type=ShapeType.FLOAT,
    traits=[
        Trait(id=ShapeID("smithy.api#box")),
        Trait(
            id=ShapeID("smithy.api#range"),
            value={
                "min": 0,
                "max": 100,
            },
        ),
    ],
)

SCAN_LIMITS = Schema.collection(
    id=ShapeID("borneo#ScanLimits"),
    members={
        "samplePercentage": {
            "target": PERCENTAGE,
        },
        "maxCumulativeDataSizeMb": {
            "target": INTEGER,
        },
        "itemsPerBatch": {
            "target": INTEGER,
        },
        "sampleDurationMinutes": {
            "target": INTEGER,
        },
    },
)

SCHEDULE_TYPE = Schema.collection(
    id=ShapeID("borneo#ScheduleType"),
    type=ShapeType.ENUM,
    members={
        "ONCE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="once"),
            ],
        },
        "CRON": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="cron"),
            ],
        },
    },
)

CREATE_SCAN_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateScanInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "name": {
            "target": SCAN_NAME,
        },
        "scanType": {
            "target": SCAN_TYPE,
        },
        "resourceType": {
            "target": STRING,
        },
        "resources": {
            "target": SCAN_RESOURCES,
        },
        "connectorId": {
            "target": CONNECTOR_ID,
        },
        "scheduleType": {
            "target": SCHEDULE_TYPE,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "cron": {
            "target": CRON_VALUES,
        },
        "scanFilter": {
            "target": SCAN_FILTER_LIST,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
        "scanLimits": {
            "target": SCAN_LIMITS,
        },
        "schedule": {
            "target": SCAN_SCHEDULE,
        },
    },
)

CREATE_SCAN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateScanOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DATA_PLANE_NAME = Schema(
    id=ShapeID("borneo#DataPlaneName"),
    type=ShapeType.STRING,
    traits=[
        Trait(id=ShapeID("smithy.api#pattern"), value="^[A-Za-z0-9.,_ @+=-]{1,100}$"),
    ],
)

DESCRIBE_SCAN_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeScanInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

SCAN_STATUS_COUNT = Schema.collection(
    id=ShapeID("borneo#ScanStatusCount"),
    members={
        "paused": {
            "target": INTEGER,
        },
        "terminated": {
            "target": INTEGER,
        },
        "scanning": {
            "target": INTEGER,
        },
        "success": {
            "target": INTEGER,
        },
        "failed": {
            "target": INTEGER,
        },
        "deleted": {
            "target": INTEGER,
        },
    },
)

SCAN_ITERATION_STATS = Schema.collection(
    id=ShapeID("borneo#ScanIterationStats"),
    members={
        "statusCount": {
            "target": SCAN_STATUS_COUNT,
        },
        "resources": {
            "target": INTEGER,
        },
    },
)

SCAN_META = Schema.collection(
    id=ShapeID("borneo#ScanMeta"),
)

DESCRIBE_SCAN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeScanOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"), value="borneo#ScanRecord"
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": SCAN_NAME,
        },
        "status": {
            "target": SCAN_STATUS,
        },
        "scanType": {
            "target": SCAN_TYPE,
        },
        "resourceType": {
            "target": STRING,
        },
        "resources": {
            "target": SCAN_RESOURCES,
        },
        "connectorId": {
            "target": CONNECTOR_ID,
        },
        "connectorType": {
            "target": STRING,
        },
        "dataPlaneId": {
            "target": DATA_PLANE_ID,
        },
        "dataPlaneName": {
            "target": DATA_PLANE_NAME,
        },
        "dataPlaneSlug": {
            "target": STRING,
        },
        "scheduleType": {
            "target": SCHEDULE_TYPE,
        },
        "cron": {
            "target": CRON_VALUES,
        },
        "scanFilter": {
            "target": SCAN_FILTER_LIST,
        },
        "scanLimits": {
            "target": SCAN_LIMITS,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
        "meta": {
            "target": SCAN_META,
        },
        "stats": {
            "target": SCAN_STATS,
        },
        "elapsedTimeMs": {
            "target": LONG,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "schedule": {
            "target": SCAN_SCHEDULE,
        },
        "nextExecution": {
            "target": TIMESTAMP,
        },
        "createdBy": {
            "target": STRING,
        },
        "latestIterationStats": {
            "target": SCAN_ITERATION_STATS,
        },
        "falsePositiveReports": {
            "target": FALSE_POSITIVE_REPORT_LIST,
        },
    },
)

SCAN_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#ScanSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "scanType": {
            "target": UNIQUE_STRING_LIST,
        },
        "connectorId": {
            "target": UNIQUE_STRING_LIST,
        },
        "resources": {
            "target": UNIQUE_STRING_LIST,
        },
        "resourceType": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataPlaneName": {
            "target": UNIQUE_STRING_LIST,
        },
        "dataPlaneId": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "accountId": {
            "target": UNIQUE_STRING_LIST,
        },
        "gcpProjectId": {
            "target": UNIQUE_STRING_LIST,
        },
        "infoTypes": {
            "target": INFO_TYPES_COMBINATION_FILTER,
        },
    },
)

LIST_SCANS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListScansInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": SCAN_SELECT_FILTER,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "getNextExecution": {
            "target": BOOLEAN,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

SCAN_RECORD = Schema.collection(
    id=ShapeID("borneo#ScanRecord"),
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": SCAN_NAME,
        },
        "status": {
            "target": SCAN_STATUS,
        },
        "scanType": {
            "target": SCAN_TYPE,
        },
        "resourceType": {
            "target": STRING,
        },
        "resources": {
            "target": SCAN_RESOURCES,
        },
        "connectorId": {
            "target": CONNECTOR_ID,
        },
        "connectorType": {
            "target": STRING,
        },
        "dataPlaneId": {
            "target": DATA_PLANE_ID,
        },
        "dataPlaneName": {
            "target": DATA_PLANE_NAME,
        },
        "dataPlaneSlug": {
            "target": STRING,
        },
        "scheduleType": {
            "target": SCHEDULE_TYPE,
        },
        "cron": {
            "target": CRON_VALUES,
        },
        "scanFilter": {
            "target": SCAN_FILTER_LIST,
        },
        "scanLimits": {
            "target": SCAN_LIMITS,
        },
        "inspectionPolicy": {
            "target": INSPECTION_POLICY,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "confidenceSnapshot": {
            "target": INSPECTION_CONFIDENCE_SNAPSHOT,
        },
        "meta": {
            "target": SCAN_META,
        },
        "stats": {
            "target": SCAN_STATS,
        },
        "elapsedTimeMs": {
            "target": LONG,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "schedule": {
            "target": SCAN_SCHEDULE,
        },
        "nextExecution": {
            "target": TIMESTAMP,
        },
        "createdBy": {
            "target": STRING,
        },
        "latestIterationStats": {
            "target": SCAN_ITERATION_STATS,
        },
        "falsePositiveReports": {
            "target": FALSE_POSITIVE_REPORT_LIST,
        },
    },
)

SCANS_LIST = Schema.collection(
    id=ShapeID("borneo#ScansList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SCAN_RECORD,
        },
    },
)

LIST_SCANS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListScansOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scans": {
            "target": SCANS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

PAUSE_SCAN_INPUT = Schema.collection(
    id=ShapeID("borneo#PauseScanInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

PAUSE_SCAN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#PauseScanOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

RESUME_SCAN_INPUT = Schema.collection(
    id=ShapeID("borneo#ResumeScanInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

RESUME_SCAN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ResumeScanOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

STOP_SCAN_INPUT = Schema.collection(
    id=ShapeID("borneo#StopScanInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

STOP_SCAN_OUTPUT = Schema.collection(
    id=ShapeID("borneo#StopScanOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanId": {
            "target": SCAN_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

RESOURCE_FILTERS = Schema.collection(
    id=ShapeID("borneo#ResourceFilters"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": STRING,
        },
    },
)

SUMMARIZE_SCAN_STATS_INPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeScanStatsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "reportingPeriod": {
            "target": REPORTING_PERIODS,
        },
        "resourceTypes": {
            "target": RESOURCE_FILTERS,
        },
    },
)

RESOURCE_TYPE_SCAN_STATS = Schema.collection(
    id=ShapeID("borneo#ResourceTypeScanStats"),
    members={
        "scanDurationinMs": {
            "target": DOUBLE,
        },
        "dataScanned": {
            "target": DOUBLE,
        },
        "identifiersMatched": {
            "target": INTEGER,
        },
        "scannedResources": {
            "target": INTEGER,
        },
        "totalResourceCount": {
            "target": INTEGER,
        },
        "failedScans": {
            "target": INTEGER,
        },
        "totalScans": {
            "target": INTEGER,
        },
        "successfulScans": {
            "target": INTEGER,
        },
    },
)

RESPONSE_TYPE_SCAN_STATS_SUMMARY = Schema.collection(
    id=ShapeID("borneo#ResponseTypeScanStatsSummary"),
    type=ShapeType.MAP,
    members={
        "key": {
            "target": STRING,
        },
        "value": {
            "target": RESOURCE_TYPE_SCAN_STATS,
        },
    },
)

SUMMARY_SCAN_STATS = Schema.collection(
    id=ShapeID("borneo#SummaryScanStats"),
    members={
        "resourceTypes": {
            "target": RESPONSE_TYPE_SCAN_STATS_SUMMARY,
        },
        "aggregate": {
            "target": AGGREGATE_SCAN_STATS,
        },
    },
)

SUMMARIZE_SCAN_STATS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#SummarizeScanStatsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "result": {
            "target": SUMMARY_SCAN_STATS,
        },
    },
)

DESCRIBE_SCAN_ITERATION_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeScanIterationInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanIterationId": {
            "target": SCAN_ITERATION_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

ITERATION_RESOURCE_STATUS = Schema.collection(
    id=ShapeID("borneo#IterationResourceStatus"),
    type=ShapeType.ENUM,
    members={
        "SUCCESS": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="success"),
            ],
        },
        "FAILURE": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="failure"),
            ],
        },
        "DELETED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="deleted"),
            ],
        },
        "UNKNOWN": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="unknown"),
            ],
        },
    },
)

RESOURCE_WITH_NAME = Schema.collection(
    id=ShapeID("borneo#ResourceWithName"),
    members={
        "resourceId": {
            "target": STRING,
        },
        "name": {
            "target": STRING,
        },
        "parentName": {
            "target": STRING,
        },
        "resourceStatus": {
            "target": ITERATION_RESOURCE_STATUS,
        },
    },
)

RESOURCES_LIST = Schema.collection(
    id=ShapeID("borneo#ResourcesList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_WITH_NAME,
        },
    },
)

DESCRIBE_SCAN_ITERATION_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeScanIterationOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ScanIterationRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanIterationId": {
            "target": SCAN_ITERATION_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resources": {
            "target": RESOURCES_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "failedResources": {
            "target": RESOURCES_LIST,
        },
        "successfulResources": {
            "target": RESOURCES_LIST,
        },
        "deletedResources": {
            "target": RESOURCES_LIST,
        },
        "scanId": {
            "target": STRING,
        },
    },
)

SCAN_ITERATIONS_FILTER = Schema.collection(
    id=ShapeID("borneo#ScanIterationsFilter"),
    members={
        "scanId": {
            "target": STRING,
        },
        "resourceId": {
            "target": STRING,
        },
        "scanIterationId": {
            "target": STRING,
        },
    },
)

LIST_SCAN_ITERATIONS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListScanIterationsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": SCAN_ITERATIONS_FILTER,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

SCAN_ITERATION_RECORD = Schema.collection(
    id=ShapeID("borneo#ScanIterationRecord"),
    members={
        "scanIterationId": {
            "target": SCAN_ITERATION_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "resources": {
            "target": RESOURCES_LIST,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "failedResources": {
            "target": RESOURCES_LIST,
        },
        "successfulResources": {
            "target": RESOURCES_LIST,
        },
        "deletedResources": {
            "target": RESOURCES_LIST,
        },
        "scanId": {
            "target": STRING,
        },
    },
)

SCAN_ITERATIONS_LIST = Schema.collection(
    id=ShapeID("borneo#ScanIterationsList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": SCAN_ITERATION_RECORD,
        },
    },
)

LIST_SCAN_ITERATIONS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListScanIterationsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanIterations": {
            "target": SCAN_ITERATIONS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

SCAN_RESOURCE_STATUS_FILTER = Schema.collection(
    id=ShapeID("borneo#ScanResourceStatusFilter"),
    members={
        "name": {
            "target": STRING,
        },
    },
)

LIST_SCAN_RESOURCE_STATUS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListScanResourceStatusInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "scanId": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "filter": {
            "target": SCAN_RESOURCE_STATUS_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
    },
)

SCAN_RESOURCE_STATUS_LIST = Schema.collection(
    id=ShapeID("borneo#ScanResourceStatusList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_WITH_NAME,
        },
    },
)

LIST_SCAN_RESOURCE_STATUS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListScanResourceStatusOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "scanResourceStatus": {
            "target": SCAN_RESOURCE_STATUS_LIST,
        },
        "total": {
            "target": INTEGER,
        },
        "nextToken": {
            "target": STRING,
        },
    },
)

THRESHOLD_COMMENT = Schema(
    id=ShapeID("borneo#ThresholdComment"),
    type=ShapeType.STRING,
    traits=[
        Trait(
            id=ShapeID("smithy.api#length"),
            value={
                "min": 3,
                "max": 2000,
            },
        ),
    ],
)

THRESHOLD_STATUS = Schema.collection(
    id=ShapeID("borneo#ThresholdStatus"),
    type=ShapeType.ENUM,
    members={
        "DRAFT": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="draft"),
            ],
        },
        "ACTIVATED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="activated"),
            ],
        },
    },
)

CREATE_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#CreateThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "processingActivityId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "comment": {
            "target": THRESHOLD_COMMENT,
        },
        "extensiveAutomatedEvaluationCharacteristics": {
            "target": BOOLEAN,
        },
        "largeScaleProcessingSensitiveData": {
            "target": BOOLEAN,
        },
        "monitoringPubliclyAccessibleAreas": {
            "target": BOOLEAN,
        },
        "blacklist": {
            "target": BOOLEAN,
        },
        "classifyingDataSubject": {
            "target": BOOLEAN,
        },
        "automatedDecisionMaking": {
            "target": BOOLEAN,
        },
        "systematicMonitoringDataSubject": {
            "target": BOOLEAN,
        },
        "processingConfidentialSensitiveData": {
            "target": BOOLEAN,
        },
        "largeScaleDataProcessing": {
            "target": BOOLEAN,
        },
        "matchingMergingRecordsInvolved": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "preventDataSubjectsExercisingTheirRights": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_STATUS,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

CREATE_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#CreateThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "thresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

DESCRIBE_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "thresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

THRESHOLD_DPIA_STATUS = Schema.collection(
    id=ShapeID("borneo#ThresholdDpiaStatus"),
    type=ShapeType.ENUM,
    members={
        "NECESSARY": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="necessary"),
            ],
        },
        "RECOMMENDED": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="recommended"),
            ],
        },
        "OPTIONAL": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="optional"),
            ],
        },
    },
)

DESCRIBE_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "comment": {
            "target": THRESHOLD_COMMENT,
        },
        "extensiveAutomatedEvaluationCharacteristics": {
            "target": BOOLEAN,
        },
        "largeScaleProcessingSensitiveData": {
            "target": BOOLEAN,
        },
        "monitoringPubliclyAccessibleAreas": {
            "target": BOOLEAN,
        },
        "blacklist": {
            "target": BOOLEAN,
        },
        "classifyingDataSubject": {
            "target": BOOLEAN,
        },
        "automatedDecisionMaking": {
            "target": BOOLEAN,
        },
        "systematicMonitoringDataSubject": {
            "target": BOOLEAN,
        },
        "processingConfidentialSensitiveData": {
            "target": BOOLEAN,
        },
        "largeScaleDataProcessing": {
            "target": BOOLEAN,
        },
        "matchingMergingRecordsInvolved": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "preventDataSubjectsExercisingTheirRights": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_STATUS,
        },
        "dpiaStatus": {
            "target": THRESHOLD_DPIA_STATUS,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
        "uploadedTaFileId": {
            "target": UUID,
        },
    },
)

REMOVE_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#RemoveThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "thresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

REMOVE_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#RemoveThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

UPDATE_THRESHOLD_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateThresholdInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "thresholdId": {
            "target": UUID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "comment": {
            "target": THRESHOLD_COMMENT,
        },
        "extensiveAutomatedEvaluationCharacteristics": {
            "target": BOOLEAN,
        },
        "largeScaleProcessingSensitiveData": {
            "target": BOOLEAN,
        },
        "monitoringPubliclyAccessibleAreas": {
            "target": BOOLEAN,
        },
        "blacklist": {
            "target": BOOLEAN,
        },
        "classifyingDataSubject": {
            "target": BOOLEAN,
        },
        "automatedDecisionMaking": {
            "target": BOOLEAN,
        },
        "systematicMonitoringDataSubject": {
            "target": BOOLEAN,
        },
        "processingConfidentialSensitiveData": {
            "target": BOOLEAN,
        },
        "largeScaleDataProcessing": {
            "target": BOOLEAN,
        },
        "matchingMergingRecordsInvolved": {
            "target": BOOLEAN,
        },
        "processingVulnerableDataSubject": {
            "target": BOOLEAN,
        },
        "innovativeTechnologiesUsed": {
            "target": BOOLEAN,
        },
        "preventDataSubjectsExercisingTheirRights": {
            "target": BOOLEAN,
        },
        "status": {
            "target": THRESHOLD_STATUS,
        },
        "translations": {
            "target": FIELD_TRANSLATIONS,
        },
    },
)

UPDATE_THRESHOLD_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateThresholdOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

DESCRIBE_TOM_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeTomInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "tomId": {
            "target": TOM_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

TOM_OBJECT_CATEGORY = Schema.collection(
    id=ShapeID("borneo#TomObjectCategory"),
    type=ShapeType.ENUM,
    members={
        "ASSET": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="asset"),
            ],
        },
        "LOCATION": {
            "target": UNIT,
            "traits": [
                Trait(id=ShapeID("smithy.api#enumValue"), value="location"),
            ],
        },
    },
)

DESCRIBE_TOM_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeTomOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "name": {
            "target": TOM_NAME,
        },
        "description": {
            "target": TOM_DESCRIPTION,
        },
        "list": {
            "target": TOM_LIST,
        },
        "category": {
            "target": TOM_CATEGORY,
        },
        "type": {
            "target": TOM_TYPE,
        },
        "referenceCode": {
            "target": TOM_REFERENCE_CODE,
        },
        "status": {
            "target": TOM_STATUS,
        },
        "note": {
            "target": TOM_NOTE,
        },
        "objectCategory": {
            "target": TOM_OBJECT_CATEGORY,
        },
        "documentFiles": {
            "target": UUID_COLLECTION,
        },
    },
)

TOM_SELECT_FILTER = Schema.collection(
    id=ShapeID("borneo#TomSelectFilter"),
    members={
        "search": {
            "target": STRING,
        },
        "category": {
            "target": UNIQUE_STRING_LIST,
        },
        "list": {
            "target": UNIQUE_STRING_LIST,
        },
        "type": {
            "target": UNIQUE_STRING_LIST,
        },
        "status": {
            "target": UNIQUE_STRING_LIST,
        },
        "objectCategory": {
            "target": UNIQUE_STRING_LIST,
        },
        "tomId": {
            "target": UNIQUE_STRING_LIST,
        },
    },
)

LIST_TOMS_INPUT = Schema.collection(
    id=ShapeID("borneo#ListTomsInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "filter": {
            "target": TOM_SELECT_FILTER,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

LIST_TOMS_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListTomsOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "toms": {
            "target": TOM_COLLECTION,
        },
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

UPDATE_TOM_INPUT = Schema.collection(
    id=ShapeID("borneo#UpdateTomInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "organisationId": {
            "target": INTEGER,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#httpHeader"),
                    value="x-selected-organisation-id",
                ),
            ],
        },
        "tomId": {
            "target": TOM_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
        "status": {
            "target": TOM_STATUS,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "note": {
            "target": TOM_NOTE,
        },
        "documentFiles": {
            "target": UUID_COLLECTION,
        },
    },
)

UPDATE_TOM_OUTPUT = Schema.collection(
    id=ShapeID("borneo#UpdateTomOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
)

DESCRIBE_USER_PROFILE_INPUT = Schema.collection(
    id=ShapeID("borneo#DescribeUserProfileInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "userId": {
            "target": USER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
                Trait(id=ShapeID("smithy.api#httpLabel")),
            ],
        },
    },
)

DESCRIBE_USER_PROFILE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeUserProfileOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#UserProfileRecord",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "name": {
            "target": STRING,
        },
        "connectorId": {
            "target": CONNECTOR_ID,
        },
        "email": {
            "target": STRING,
        },
        "connectorUserId": {
            "target": STRING,
        },
        "connectorSourceType": {
            "target": STRING,
        },
        "connectorUsername": {
            "target": STRING,
        },
        "external": {
            "target": BOOLEAN,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "userId": {
            "target": USER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

USER_PROFILE_FILTER = Schema.collection(
    id=ShapeID("borneo#UserProfileFilter"),
    members={
        "search": {
            "target": STRING,
        },
    },
)

LIST_USER_PROFILES_INPUT = Schema.collection(
    id=ShapeID("borneo#ListUserProfilesInput"),
    traits=[
        Trait(id=ShapeID("smithy.api#input")),
    ],
    members={
        "filter": {
            "target": USER_PROFILE_FILTER,
        },
        "select": {
            "target": UNIQUE_STRING_LIST,
        },
        "nextToken": {
            "target": STRING,
        },
        "pageSize": {
            "target": PAGE_SIZE,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

USER_PROFILE_RECORD = Schema.collection(
    id=ShapeID("borneo#UserProfileRecord"),
    members={
        "name": {
            "target": STRING,
        },
        "connectorId": {
            "target": CONNECTOR_ID,
        },
        "email": {
            "target": STRING,
        },
        "connectorUserId": {
            "target": STRING,
        },
        "connectorSourceType": {
            "target": STRING,
        },
        "connectorUsername": {
            "target": STRING,
        },
        "external": {
            "target": BOOLEAN,
        },
        "deletedAt": {
            "target": TIMESTAMP,
        },
        "createdAt": {
            "target": TIMESTAMP,
        },
        "updatedAt": {
            "target": TIMESTAMP,
        },
        "userId": {
            "target": USER_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
    },
)

USER_PROFILE_LIST = Schema.collection(
    id=ShapeID("borneo#UserProfileList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": USER_PROFILE_RECORD,
        },
    },
)

LIST_USER_PROFILES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListUserProfilesOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "total": {
            "target": INTEGER,
        },
        "userProfiles": {
            "target": USER_PROFILE_LIST,
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

MANAGER_OBJECT = Schema.collection(
    id=ShapeID("borneo#ManagerObject"),
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "surname": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "position": {
            "target": STRING,
        },
        "nif": {
            "target": STRING,
        },
        "startDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "endDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "manager": {
            "target": STRING,
        },
        "department": {
            "target": UUID,
        },
        "referenceId": {
            "target": STRING,
        },
        "departmentObject": {
            "target": DEPARTMENT_OBJECT,
        },
    },
)

DESCRIBE_EMPLOYEE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeEmployeeOutput"),
    traits=[
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "surname": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "position": {
            "target": STRING,
        },
        "nif": {
            "target": STRING,
        },
        "startDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "endDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "manager": {
            "target": STRING,
        },
        "department": {
            "target": UUID,
        },
        "referenceId": {
            "target": STRING,
        },
        "departmentObject": {
            "target": DEPARTMENT_OBJECT,
        },
        "managerObject": {
            "target": MANAGER_OBJECT,
        },
    },
)

EMPLOYEE_LIST_MEMBER = Schema.collection(
    id=ShapeID("borneo#EmployeeListMember"),
    members={
        "employeeId": {
            "target": EMPLOYEE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "surname": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "position": {
            "target": STRING,
        },
        "nif": {
            "target": STRING,
        },
        "startDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "endDate": {
            "target": STRING,
            "traits": [
                Trait(
                    id=ShapeID("smithy.api#suppress"),
                    value=[
                        "ShouldHaveUsedTimestamp",
                    ],
                ),
            ],
        },
        "createdBy": {
            "target": STRING,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "email": {
            "target": STRING,
        },
        "manager": {
            "target": STRING,
        },
        "department": {
            "target": UUID,
        },
        "referenceId": {
            "target": STRING,
        },
        "departmentObject": {
            "target": DEPARTMENT_OBJECT,
        },
        "managerObject": {
            "target": MANAGER_OBJECT,
        },
        "processingActivities": {
            "target": INTEGER,
        },
    },
)

EMPLOYEE_LIST = Schema.collection(
    id=ShapeID("borneo#EmployeeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": EMPLOYEE_LIST_MEMBER,
        },
    },
)

LIST_EMPLOYEES_OUTPUT = Schema.collection(
    id=ShapeID("borneo#ListEmployeesOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#EmployeeListOutput",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "nextToken": {
            "target": STRING,
        },
        "employees": {
            "target": EMPLOYEE_LIST,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "total": {
            "target": INTEGER,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "sort": {
            "target": SORT_RECORDS,
        },
    },
)

RESOURCE_LINEAGE_DATA = Schema.collection(
    id=ShapeID("borneo#ResourceLineageData"),
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "parentId": {
            "target": STRING,
        },
        "source": {
            "target": SOURCE_OF_RESOURCE,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "parent": {
            "target": RESOURCE_PARENT,
        },
    },
)

RESOURCE_LINEAGE_EDGE = Schema.collection(
    id=ShapeID("borneo#ResourceLineageEdge"),
    members={
        "sql": {
            "target": STRING,
        },
        "sourceResourceId": {
            "target": STRING,
        },
        "destinationResourceId": {
            "target": STRING,
        },
        "sourceColumn": {
            "target": STRING,
        },
        "destinationColumn": {
            "target": STRING,
        },
        "source": {
            "target": RESOURCE_LINEAGE_DATA,
        },
        "destination": {
            "target": RESOURCE_LINEAGE_DATA,
        },
    },
)

RESOURCE_LINEAGE_EDGE_LIST = Schema.collection(
    id=ShapeID("borneo#ResourceLineageEdgeList"),
    type=ShapeType.LIST,
    members={
        "member": {
            "target": RESOURCE_LINEAGE_EDGE,
        },
    },
)

DESCRIBE_RESOURCE_LINEAGE_OUTPUT = Schema.collection(
    id=ShapeID("borneo#DescribeResourceLineageOutput"),
    traits=[
        Trait(
            id=ShapeID("smithy.synthetic#originalShapeId"),
            value="borneo#ResourceLineageData",
        ),
        Trait(id=ShapeID("smithy.api#output")),
    ],
    members={
        "resourceId": {
            "target": RESOURCE_ID,
            "traits": [
                Trait(id=ShapeID("smithy.api#required")),
            ],
        },
        "name": {
            "target": STRING,
        },
        "type": {
            "target": STRING,
        },
        "meta": {
            "target": OPEN_PROPERTIES,
        },
        "owner": {
            "target": OWNER_OBJECT_LIST,
        },
        "ownerEmail": {
            "target": STRING,
        },
        "status": {
            "target": RESOURCE_STATUS,
        },
        "parentId": {
            "target": STRING,
        },
        "source": {
            "target": SOURCE_OF_RESOURCE,
        },
        "snapshot": {
            "target": INSPECTION_RESULT_SNAPSHOT,
        },
        "sampleTokens": {
            "target": TOKENS,
        },
        "compliance": {
            "target": COMPLIANCE_DETAIL_LIST,
        },
        "lastScanned": {
            "target": TIMESTAMP,
        },
        "parent": {
            "target": RESOURCE_PARENT,
        },
        "sourceEdges": {
            "target": RESOURCE_LINEAGE_EDGE_LIST,
        },
        "destinationEdges": {
            "target": RESOURCE_LINEAGE_EDGE_LIST,
        },
    },
)

RESOURCE_LINEAGE_DATA.members["sourceEdges"] = Schema(
    id=RESOURCE_LINEAGE_DATA.id.with_member("sourceEdges"),
    type=ShapeType.MEMBER,
    member_target=RESOURCE_LINEAGE_EDGE_LIST,
    member_index=len(RESOURCE_LINEAGE_DATA.members) + 1,
)

MANAGER_OBJECT.members["managerObject"] = Schema(
    id=MANAGER_OBJECT.id.with_member("managerObject"),
    type=ShapeType.MEMBER,
    member_target=MANAGER_OBJECT,
    member_index=len(MANAGER_OBJECT.members) + 1,
)

RESOURCE_LINEAGE_DATA.members["destinationEdges"] = Schema(
    id=RESOURCE_LINEAGE_DATA.id.with_member("destinationEdges"),
    type=ShapeType.MEMBER,
    member_target=RESOURCE_LINEAGE_EDGE_LIST,
    member_index=len(RESOURCE_LINEAGE_DATA.members) + 1,
)
