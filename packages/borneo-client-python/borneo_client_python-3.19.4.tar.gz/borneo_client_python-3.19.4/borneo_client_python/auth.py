# Code generated by smithy-python-codegen DO NOT EDIT.

from dataclasses import dataclass

from smithy_http.aio.auth.apikey import ApiKeyLocation
from smithy_http.aio.interfaces.auth import HTTPAuthOption


@dataclass
class HTTPAuthParams:
    operation: str


class HTTPAuthSchemeResolver:
    def resolve_auth_scheme(
        self, auth_parameters: HTTPAuthParams
    ) -> list[HTTPAuthOption]:
        auth_options: list[HTTPAuthOption] = []

        if (option := _generate_api_key_option(auth_parameters)) is not None:
            auth_options.append(option)

        return auth_options


def _generate_api_key_option(auth_params: HTTPAuthParams) -> HTTPAuthOption | None:
    return HTTPAuthOption(
        scheme_id="smithy.api#httpApiKeyAuth",
        identity_properties={},
        signer_properties={
            "name": "Authorization",
            "location": ApiKeyLocation("header"),
            "scheme": "Bearer",
        },
    )
