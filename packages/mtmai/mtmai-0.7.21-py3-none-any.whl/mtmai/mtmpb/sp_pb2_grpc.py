# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mtmai.mtmpb import mtm_pb2 as mtmai_dot_mtmpb_dot_mtm__pb2
from mtmai.mtmpb import sp_pb2 as mtmai_dot_mtmpb_dot_sp__pb2


class SpServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SpProjectList = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectList',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReply.FromString,
                _registered_method=True)
        self.SpProjectGet = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectGet',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectGetReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProject.FromString,
                _registered_method=True)
        self.SpProjectCreate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectCreate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectCreateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpProjectUpdate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectUpdate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectUpdateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpProjectDelete = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectDelete',
                request_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpProjectRun = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectRun',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectRunReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpProjectVisit = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectVisit',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectVisitReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpProjectReload = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpProjectReload',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectReloadReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpRouteList = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpRouteList',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReply.FromString,
                _registered_method=True)
        self.SpRouteGet = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpRouteGet',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteGetReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRoute.FromString,
                _registered_method=True)
        self.SpRouteCreate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpRouteCreate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteCreateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpRouteUpdate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpRouteUpdate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteUpdateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpRouteDelete = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpRouteDelete',
                request_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpContentmodiList = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpContentmodiList',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReply.FromString,
                _registered_method=True)
        self.SpContentmodiGet = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpContentmodiGet',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiGetReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodi.FromString,
                _registered_method=True)
        self.SpContentmodiCreate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpContentmodiCreate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiCreateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpContentmodiUpdate = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpContentmodiUpdate',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiUpdateReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpContentmodiDelete = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpContentmodiDelete',
                request_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.SpOptionGet = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpOptionGet',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOptionGetReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOption.FromString,
                _registered_method=True)
        self.SpOptionSave = channel.unary_unary(
                '/mtmai.mtmpb.SpService/SpOptionSave',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOption.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
                _registered_method=True)
        self.Sp2Fetch = channel.unary_unary(
                '/mtmai.mtmpb.SpService/Sp2Fetch',
                request_serializer=mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchReq.SerializeToString,
                response_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchRes.FromString,
                _registered_method=True)


class SpServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SpProjectList(self, request, context):
        """project
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectVisit(self, request, context):
        """发起单个页面的爬取动作。
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpProjectReload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpRouteList(self, request, context):
        """sp-route
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpRouteGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpRouteCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpRouteUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpRouteDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpContentmodiList(self, request, context):
        """contentmodi
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpContentmodiGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpContentmodiCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpContentmodiUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpContentmodiDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpOptionGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SpOptionSave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sp2Fetch(self, request, context):
        """新的设计方式开始(sp2Case)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SpProjectList': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectList,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReply.SerializeToString,
            ),
            'SpProjectGet': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectGet,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectGetReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProject.SerializeToString,
            ),
            'SpProjectCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectCreate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectCreateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpProjectUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectUpdate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectUpdateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpProjectDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectDelete,
                    request_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpProjectRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectRun,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectRunReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpProjectVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectVisit,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectVisitReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpProjectReload': grpc.unary_unary_rpc_method_handler(
                    servicer.SpProjectReload,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpProjectReloadReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpRouteList': grpc.unary_unary_rpc_method_handler(
                    servicer.SpRouteList,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReply.SerializeToString,
            ),
            'SpRouteGet': grpc.unary_unary_rpc_method_handler(
                    servicer.SpRouteGet,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteGetReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRoute.SerializeToString,
            ),
            'SpRouteCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpRouteCreate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteCreateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpRouteUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpRouteUpdate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpRouteUpdateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpRouteDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.SpRouteDelete,
                    request_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpContentmodiList': grpc.unary_unary_rpc_method_handler(
                    servicer.SpContentmodiList,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReply.SerializeToString,
            ),
            'SpContentmodiGet': grpc.unary_unary_rpc_method_handler(
                    servicer.SpContentmodiGet,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiGetReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodi.SerializeToString,
            ),
            'SpContentmodiCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpContentmodiCreate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiCreateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpContentmodiUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.SpContentmodiUpdate,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiUpdateReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpContentmodiDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.SpContentmodiDelete,
                    request_deserializer=mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'SpOptionGet': grpc.unary_unary_rpc_method_handler(
                    servicer.SpOptionGet,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOptionGetReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOption.SerializeToString,
            ),
            'SpOptionSave': grpc.unary_unary_rpc_method_handler(
                    servicer.SpOptionSave,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.SpOption.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_mtm__pb2.Result.SerializeToString,
            ),
            'Sp2Fetch': grpc.unary_unary_rpc_method_handler(
                    servicer.Sp2Fetch,
                    request_deserializer=mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchReq.FromString,
                    response_serializer=mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mtmai.mtmpb.SpService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('mtmai.mtmpb.SpService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SpService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SpProjectList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectList',
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectListReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectGet',
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectGetReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpProject.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectCreate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectCreateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectUpdate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectUpdateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectDelete',
            mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectRun',
            mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectRunReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectVisit',
            mtmai_dot_mtmpb_dot_sp__pb2.SpiderProjectVisitReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpProjectReload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpProjectReload',
            mtmai_dot_mtmpb_dot_sp__pb2.SpProjectReloadReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpRouteList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpRouteList',
            mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpRouteListReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpRouteGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpRouteGet',
            mtmai_dot_mtmpb_dot_sp__pb2.SpRouteGetReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpRoute.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpRouteCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpRouteCreate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpRouteCreateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpRouteUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpRouteUpdate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpRouteUpdateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpRouteDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpRouteDelete',
            mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpContentmodiList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpContentmodiList',
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiListReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpContentmodiGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpContentmodiGet',
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiGetReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodi.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpContentmodiCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpContentmodiCreate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiCreateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpContentmodiUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpContentmodiUpdate',
            mtmai_dot_mtmpb_dot_sp__pb2.SpContentmodiUpdateReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpContentmodiDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpContentmodiDelete',
            mtmai_dot_mtmpb_dot_mtm__pb2.ResDeleteReq.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpOptionGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpOptionGet',
            mtmai_dot_mtmpb_dot_sp__pb2.SpOptionGetReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.SpOption.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SpOptionSave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/SpOptionSave',
            mtmai_dot_mtmpb_dot_sp__pb2.SpOption.SerializeToString,
            mtmai_dot_mtmpb_dot_mtm__pb2.Result.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Sp2Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/mtmai.mtmpb.SpService/Sp2Fetch',
            mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchReq.SerializeToString,
            mtmai_dot_mtmpb_dot_sp__pb2.Sp2FetchRes.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
