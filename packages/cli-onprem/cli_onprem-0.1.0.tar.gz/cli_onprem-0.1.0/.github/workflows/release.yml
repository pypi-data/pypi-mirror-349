name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Install dependencies
        run: |
          uv sync --locked --all-extras --dev

      - name: Python Semantic Release
        id: release
        run: |
          uv run semantic-release publish
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build and publish to TestPyPI
        if: steps.release.outputs.released == 'true'
        run: |
          uv run python -m build
          uv run twine upload --repository-url https://test.pypi.org/legacy/ dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Build and publish to PyPI
        if: steps.release.outputs.released == 'true'
        run: |
          uv run python -m build
          uv run twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
