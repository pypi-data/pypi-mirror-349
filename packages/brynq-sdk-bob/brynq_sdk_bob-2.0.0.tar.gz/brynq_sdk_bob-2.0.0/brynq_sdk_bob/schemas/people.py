from datetime import datetime

import pandas as pd
import pandera as pa
from pandera import Bool
from pandera.typing import Series, String, Float, DateTime
import pandera.extensions as extensions



@extensions.register_check_method()
def check_list(x):
    return isinstance(x, list)


class PeopleSchema(pa.DataFrameModel):
    id: Series[pd.Int64Dtype] = pa.Field(coerce=True)
    display_name: Series[String] = pa.Field(coerce=True, nullable=True)
    company_id: Series[String] = pa.Field(coerce=True)
    email: Series[String] = pa.Field(coerce=True, nullable=True)
    surname: Series[String] = pa.Field(coerce=True)
    first_name: Series[String] = pa.Field(coerce=True, nullable=True)
    personal_birth_date: Series[DateTime] = pa.Field(coerce=True)
    personal_pronouns: Series[String] = pa.Field(coerce=True, nullable=True)
    personal_honorific: Series[String] = pa.Field(coerce=True, nullable=True)
    personal_nationality: Series[object] = pa.Field(coerce=True, check_name=check_list)
    # employee_payroll_manager: Series[String] = pa.Field(coerce=True, nullable=True)
    # employee_hrbp: Series[String] = pa.Field(coerce=True, nullable=True)
    # employee_it_admin: Series[String] = pa.Field(coerce=True, nullable=True)
    # employee_buddy: Series[String] = pa.Field(coerce=True, nullable=True)
    employee_veteran_status: Series[object] = pa.Field(coerce=True, check_name=check_list)
    employee_disability_status: Series[String] = pa.Field(coerce=True, nullable=True)
    work_start_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    work_manager: Series[String] = pa.Field(coerce=True, nullable=True)
    work_work_phone: Series[String] = pa.Field(coerce=True, nullable=True)
    work_tenure_duration_period_i_s_o: Series[String] = pa.Field(coerce=True, nullable=True)
    work_tenure_duration_sort_factor: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=False)
    work_tenure_duration_humanize: Series[String] = pa.Field(coerce=True, nullable=True)
    work_duration_of_employment_period_i_s_o: Series[String] = pa.Field(coerce=True, nullable=True)
    work_duration_of_employment_sort_factor: Series[String] = pa.Field(coerce=True, nullable=False)
    work_duration_of_employment_humanize: Series[String] = pa.Field(coerce=True, nullable=True)
    work_reports_to_id_in_company: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_employee_id_in_company: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_reports_to_display_name: Series[String] = pa.Field(coerce=True, nullable=True)
    work_reports_to_email: Series[String] = pa.Field(coerce=True, nullable=True)
    work_reports_to_surname: Series[String] = pa.Field(coerce=True, nullable=True)
    work_reports_to_first_name: Series[String] = pa.Field(coerce=True, nullable=True)
    work_reports_to_id: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_work_mobile: Series[String] = pa.Field(coerce=True, nullable=True)
    work_indirect_reports: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_site_id: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_department: Series[String] = pa.Field(coerce=True, nullable=True)
    work_tenure_duration_years: Series[Float] = pa.Field(coerce=True, nullable=True)
    work_tenure_years: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_is_manager: Series[Bool] = pa.Field(coerce=True)
    work_title: Series[String] = pa.Field(coerce=True, nullable=True)
    work_site: Series[String] = pa.Field(coerce=True, nullable=True)
    work_original_start_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    work_active_effective_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    work_direct_reports: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    # work_work_change_type: Series[String] = pa.Field(coerce=True, nullable=True)
    work_second_level_manager: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_days_of_previous_service: Series[pd.Int64Dtype] = pa.Field(coerce=True, nullable=True)
    work_years_of_service: Series[Float] = pa.Field(coerce=True, nullable=True)
    about_food_preferences: Series[object] = pa.Field(coerce=True, check_name=check_list)
    # about_social_data_linkedin: Series[String] = pa.Field(coerce=True, nullable=True)
    about_social_data_twitter: Series[String] = pa.Field(coerce=True, nullable=True)
    about_social_data_facebook: Series[String] = pa.Field(coerce=True, nullable=True)
    about_superpowers: Series[object] = pa.Field(coerce=True, check_name=check_list)
    about_hobbies: Series[object] = pa.Field(coerce=True, check_name=check_list)
    about_about: Series[String] = pa.Field(coerce=True, nullable=True)
    about_avatar: Series[String] = pa.Field(coerce=True, nullable=True)
    address_city: Series[String] = pa.Field(coerce=True, nullable=True)
    address_post_code: Series[String] = pa.Field(coerce=True, nullable=True)
    address_line1: Series[String] = pa.Field(coerce=True, nullable=True)
    address_line2: Series[String] = pa.Field(coerce=True, nullable=True)
    # address_country: Series[String] = pa.Field(coerce=True, nullable=True)
    address_active_effective_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    # home_legal_gender: Series[String] = pa.Field(coerce=True, nullable=True)
    home_spouse_first_name: Series[String] = pa.Field(coerce=True, nullable=True)
    home_spouse_surname: Series[String] = pa.Field(coerce=True, nullable=True)
    # home_spouse_birth_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    home_spouse_gender: Series[String] = pa.Field(coerce=True, nullable=True)
    internal_termination_reason: Series[String] = pa.Field(coerce=True, nullable=True)
    internal_termination_date: Series[DateTime] = pa.Field(coerce=True, nullable=True)
    internal_termination_type: Series[String] = pa.Field(coerce=True, nullable=True)
    employee_last_day_of_work: Series[DateTime] = pa.Field(coerce=True, nullable=True)
