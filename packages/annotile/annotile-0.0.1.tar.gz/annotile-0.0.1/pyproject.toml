[tool.poetry]
name = "annotile"
version = "0.0.1"
description = "Tile and restitch images and labels for computer vision models."
authors = ["Adharsh Kandula <akandula.dev@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/AdharshKan42/Annotile"

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^2.1.0"
pandas = "^2.2.2"
pillow = "^10.4.0"
pydantic = "^2.10.6"
opencv-python = "^4.11.0.86"
shapely = "^2.1.0"



[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.33"
mkdocstrings-python = "^1.10.8"
pymdown-extensions = "^10.9"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.3"
mypy = "^1.11.2"
pre-commit = "^3.8.0"
pytest = "^8.3.2"
rust-just = "^1.39.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py312"  # change this to match your Python version
respect-gitignore = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "S",    # flake8-bandit (basic security issues)
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "TID",  # flake8-tidy-imports
    "RUF",  # Ruff-specific rules
]

ignore = [
    "D100",  # Missing docstring in public module
    "D101",
    "D104",  # Missing docstring in public package
    "D107",
    "D203",  # Conflicts with D211
    "D213",  # Conflicts with D212
]

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["annotile"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

