from scripts.import_analyzer import VisiongraphAnalyzer


def generate_init():
    analyzer = VisiongraphAnalyzer()
    result = analyzer.analyze()

    # generate python code
    lines = ["if TYPE_CHECKING:"]

    for imp in result.dependencies:
        import_line = f"    from {imp.module} import {imp.name}"

        if imp.optional:
            line = (
                f"    try:\n    {import_line}\n"
                f"    except ModuleNotFoundError as ex:\n"
                f"        logging.info(f\"Module {imp.name} not found\")"
            )
            lines.append(line)
        else:
            lines.append(f"{import_line}  # noqa")

    # append header, imports and empty line at the end
    lines.insert(0,
                 "# This file has been auto-generated by setup.py.\n"
                 "import os\n"
                 "import sys\n"
                 "import logging\n"
                 "from typing import Dict, TYPE_CHECKING\n"
                 "from visiongraph.model._LazyImport import _LazyImport\n"
                 "\n"
                 "LOGLEVEL = os.environ.get(\"VISIONGRAPH_LOGLEVEL\", \"WARNING\").upper()\n"
                 "logging.basicConfig(level=LOGLEVEL)\n")
    lines.append("\n")

    # create dictionary for type imports
    lines.append("_visiongraph_imports: Dict[str, _LazyImport] = {")
    for imp in result.dependencies:
        lines.append(f"    \"{imp.name}\": _LazyImport(\"{imp.name}\", \"{imp.module}\", {imp.optional}),")
    lines.append("}")

    # append import stub support
    lines += [
        "",
        "_CURRENT_MODULE = sys.modules[__name__]",
        "",
        "",
        "def __getattr__(name):",
        "    if name not in _visiongraph_imports:",
        "        raise AttributeError(f\"'vg' object has no attribute '{name}'\")",
        "    attribute = _visiongraph_imports[name].attribute",
        "    _CURRENT_MODULE.__setattr__(name, attribute)",
        "    return attribute",
    ]

    lines.append("")

    with open(f"{analyzer.root_package}/vg/__init__.py", "w+") as file:
        file.write("\n".join(lines))
