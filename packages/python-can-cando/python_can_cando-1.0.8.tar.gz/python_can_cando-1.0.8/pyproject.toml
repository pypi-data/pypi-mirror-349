[build-system]
build-backend = 'setuptools.build_meta'
requires = ["setuptools >= 62.0"]

[project]
name = "python-can-cando"
description = "python-can interface for Netronics CANdo and CANdoISO devices"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "LGPL v3" }
keywords = ["python-can", "CAN", "CANbus", "netronics", "cando", "candoiso"]
authors = [{ name = "Riccardo Belli" }]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Embedded Systems",
    "Topic :: Software Development :: Embedded Systems :: Controller Area Network (CAN)",
    "Typing :: Typed",
    "Operating System :: Microsoft :: Windows",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Intended Audience :: Developers",
]
dependencies = ["python-can==4.*"]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["ruff==0.7.2"]

[project.entry-points."can.interface"]
cando = "can_cando.CANdo:CANdoBus"

[project.urls]
Documentation = "https://github.com/belliriccardo/python-can-cando#readme"
Issues = "https://github.com/belliriccardo/python-can-cando/issues"
Source = "https://github.com/belliriccardo/python-can-cando"
Homepage = "https://github.com/belliriccardo/python-can-cando"
PersonalHomepage = "https://www.riccardobelli.it"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
can_cando = ["py.typed", "*.pyi"]

[tool.setuptools.dynamic]
version = { attr = "can_cando.__version__" }

# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = "-v"
# testpaths = ["tests"]

# [tool.cibuildwheel]
# test-requires = "pytest"
# test-command = "pytest {project}/tests"
# build-frontend = "build"

[tool.ruff]
line-length = 140
# exclude = ["build/*", "dist/*"]
select = ["ALL"]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D107",
    "S603",
    "T201",
    "FA102",
    "TRY003",
    "TD002",
    "TD003",
    "FIX002",
    "FA100",
    "ERA001",
    "N999",
    "N802",
    "N803",
    "N806",
    "N815",
    "PGH003",
    "PLR0915",
    "FBT001",
    "C901",
    "ANN401",
    "EM101",
    "EM102",
    "D105",
    "FBT002",
    "BLE001",
    "PLR0912",
    "PLR0913",
    "PLR2004",
    "RUF012",
    "SLF001",
    "G001",
    "G004",
]
# Enable strict type checking
[tool.pyright]
strict = ["**/*.py"]
