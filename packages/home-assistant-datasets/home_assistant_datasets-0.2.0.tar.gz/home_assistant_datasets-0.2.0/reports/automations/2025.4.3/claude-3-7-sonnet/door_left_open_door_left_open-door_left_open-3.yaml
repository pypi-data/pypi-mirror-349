---
uuid: 73d97028-27b5-4f38-8741-d5e2ce47175b
task_id: door_left_open_door_left_open-door_left_open-3
model_id: claude-3-7-sonnet
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: "```yaml\n# Blueprint metadata\nblueprint:\n  name: \"Door Left Open Alert\"\
  \n  description: \"Plays an alert on a specified media player when a door is left\
  \ open for a specified duration.\"\n  domain: automation\n  input:\n    door_sensor:\n\
  \      name: Door Sensor\n      description: The binary sensor that monitors if\
  \ the door is open or closed.\n      selector:\n        entity:\n          domain:\
  \ binary_sensor\n          multiple: false\n    alert_media:\n      name: Alert\
  \ Media\n      description: The media player and sound to play when the door is\
  \ left open.\n      selector:\n        media:\n    open_duration:\n      name: Open\
  \ Duration\n      description: How long the door needs to be open before triggering\
  \ the alert.\n      default: 300 # 5 minutes\n      selector:\n        duration:\n\
  \n# Define the automation\ntrigger:\n  # Trigger when the door opens\n  - platform:\
  \ state\n    entity_id: !input door_sensor\n    from: \"off\"\n    to: \"on\"\n\
  \    \ncondition: []\n\naction:\n  # Create a wait action for the specified duration\n\
  \  - alias: \"Wait for the specified duration\"\n    wait_for_trigger:\n      -\
  \ platform: state\n        entity_id: !input door_sensor\n        to: \"off\"\n\
  \    timeout: !input open_duration\n\n  # Check if the door is still open after\
  \ waiting\n  - alias: \"Check if door is still open\"\n    condition: state\n  \
  \  entity_id: !input door_sensor\n    state: \"on\"\n    \n  # Play the alert if\
  \ door is still open\n  - alias: \"Play alert on media player\"\n    service: media_player.play_media\n\
  \    metadata: {}\n    target: !input alert_media\n    data:\n      announce: true\n\
  \      \n  # For UX purposes, we'll terminate any running instance of this automation\n\
  \  # when the door is eventually closed\nmode: restart\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JSGDF9518HQF2125E4YVFPMZ
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 04:11:07.297971+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 21:11:07. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\n# Blueprint metadata\nblueprint:\n  name: \"Door Left Open\
          \ Alert\"\n  description: \"Plays an alert on a specified media player when\
          \ a door is left open for a specified duration.\"\n  domain: automation\n\
          \  input:\n    door_sensor:\n      name: Door Sensor\n      description:\
          \ The binary sensor that monitors if the door is open or closed.\n     \
          \ selector:\n        entity:\n          domain: binary_sensor\n        \
          \  multiple: false\n    alert_media:\n      name: Alert Media\n      description:\
          \ The media player and sound to play when the door is left open.\n     \
          \ selector:\n        media:\n    open_duration:\n      name: Open Duration\n\
          \      description: How long the door needs to be open before triggering\
          \ the alert.\n      default: 300 # 5 minutes\n      selector:\n        duration:\n\
          \n# Define the automation\ntrigger:\n  # Trigger when the door opens\n \
          \ - platform: state\n    entity_id: !input door_sensor\n    from: \"off\"\
          \n    to: \"on\"\n    \ncondition: []\n\naction:\n  # Create a wait action\
          \ for the specified duration\n  - alias: \"Wait for the specified duration\"\
          \n    wait_for_trigger:\n      - platform: state\n        entity_id: !input\
          \ door_sensor\n        to: \"off\"\n    timeout: !input open_duration\n\n\
          \  # Check if the door is still open after waiting\n  - alias: \"Check if\
          \ door is still open\"\n    condition: state\n    entity_id: !input door_sensor\n\
          \    state: \"on\"\n    \n  # Play the alert if door is still open\n  -\
          \ alias: \"Play alert on media player\"\n    service: media_player.play_media\n\
          \    metadata: {}\n    target: !input alert_media\n    data:\n      announce:\
          \ true\n      \n  # For UX purposes, we'll terminate any running instance\
          \ of this automation\n  # when the door is eventually closed\nmode: restart\n\
          ```"
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 04:11:07.299615+00:00
  duration_ms: 6958.388
  tries: 1
