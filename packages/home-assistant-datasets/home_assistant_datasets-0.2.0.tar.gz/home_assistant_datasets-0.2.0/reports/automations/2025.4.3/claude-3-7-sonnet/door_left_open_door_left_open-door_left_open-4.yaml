---
uuid: 42d7782d-688f-45dc-b3df-50dab0ae9dd9
task_id: door_left_open_door_left_open-door_left_open-4
model_id: claude-3-7-sonnet
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: "```yaml\n# Door Open Alert Blueprint for Home Assistant\n# This blueprint\
  \ allows you to set up an alert when a door remains open for a specified duration\n\
  \n# Define the blueprint metadata\nblueprint:\n  name: \"Door Left Open Alert\"\n\
  \  description: \"Play an alert on a media player when a door has been left open\
  \ for a specified amount of time.\"\n  domain: automation\n  source_url: https://github.com/example/blueprints/door_left_open.yaml\n\
  \  input:\n    door_sensor:\n      name: Door Sensor\n      description: Select\
  \ the door sensor to monitor\n      selector:\n        entity:\n          domain:\
  \ binary_sensor\n          multiple: false\n    alert_media:\n      name: Alert\
  \ Media Player\n      description: Select the media player and media content to\
  \ play when the door is left open\n      selector:\n        media:\n    open_duration:\n\
  \      name: Open Duration\n      description: How long the door can remain open\
  \ before the alert triggers\n      default: 300 # Default to 5 minutes\n      selector:\n\
  \        duration:\n\n# Define the automation\nmode: single\nmax_exceeded: silent\n\
  \n# The trigger will activate when the door sensor state changes\ntrigger:\n  -\
  \ platform: state\n    entity_id: !input door_sensor\n    from: \"off\"\n    to:\
  \ \"on\"\n    for: !input open_duration\n\n# Condition ensures that the door is\
  \ still actually open when the alert fires\n# This is useful if the door briefly\
  \ opens and closes within the duration\ncondition:\n  - condition: state\n    entity_id:\
  \ !input door_sensor\n    state: \"on\"\n\n# Actions to perform when the door has\
  \ been left open\naction:\n  # First, check if the media player is available\n \
  \ - condition: template\n    value_template: \"{{ is_state(input.alert_media.entity_id,\
  \ 'on') or is_state(input.alert_media.entity_id, 'idle') or is_state(input.alert_media.entity_id,\
  \ 'playing') }}\"\n    \n  # Play the alert on the specified media player\n  - service:\
  \ media_player.play_media\n    data:\n      entity_id: \"{{ input.alert_media.entity_id\
  \ }}\"\n      media_content_id: \"{{ input.alert_media.media_content_id }}\"\n \
  \     media_content_type: \"{{ input.alert_media.media_content_type }}\"\n    \n\
  \  # Wait for 1 minute\n  - delay:\n      minutes: 1\n      \n  # Check again if\
  \ the door is still open, and if so, repeat the alert\n  # This creates a repeating\
  \ alert until the door is closed\n  - repeat:\n      while:\n        - condition:\
  \ state\n          entity_id: !input door_sensor\n          state: \"on\"\n    \
  \  sequence:\n        - service: media_player.play_media\n          data:\n    \
  \        entity_id: \"{{ input.alert_media.entity_id }}\"\n            media_content_id:\
  \ \"{{ input.alert_media.media_content_id }}\"\n            media_content_type:\
  \ \"{{ input.alert_media.media_content_type }}\"\n        - delay:\n           \
  \ minutes: 1\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JSGCQCET0J5J6Q1R7BC3DD47
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 03:58:04.250218+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:58:04. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\n# Door Open Alert Blueprint for Home Assistant\n# This\
          \ blueprint allows you to set up an alert when a door remains open for a\
          \ specified duration\n\n# Define the blueprint metadata\nblueprint:\n  name:\
          \ \"Door Left Open Alert\"\n  description: \"Play an alert on a media player\
          \ when a door has been left open for a specified amount of time.\"\n  domain:\
          \ automation\n  source_url: https://github.com/example/blueprints/door_left_open.yaml\n\
          \  input:\n    door_sensor:\n      name: Door Sensor\n      description:\
          \ Select the door sensor to monitor\n      selector:\n        entity:\n\
          \          domain: binary_sensor\n          multiple: false\n    alert_media:\n\
          \      name: Alert Media Player\n      description: Select the media player\
          \ and media content to play when the door is left open\n      selector:\n\
          \        media:\n    open_duration:\n      name: Open Duration\n      description:\
          \ How long the door can remain open before the alert triggers\n      default:\
          \ 300 # Default to 5 minutes\n      selector:\n        duration:\n\n# Define\
          \ the automation\nmode: single\nmax_exceeded: silent\n\n# The trigger will\
          \ activate when the door sensor state changes\ntrigger:\n  - platform: state\n\
          \    entity_id: !input door_sensor\n    from: \"off\"\n    to: \"on\"\n\
          \    for: !input open_duration\n\n# Condition ensures that the door is still\
          \ actually open when the alert fires\n# This is useful if the door briefly\
          \ opens and closes within the duration\ncondition:\n  - condition: state\n\
          \    entity_id: !input door_sensor\n    state: \"on\"\n\n# Actions to perform\
          \ when the door has been left open\naction:\n  # First, check if the media\
          \ player is available\n  - condition: template\n    value_template: \"{{\
          \ is_state(input.alert_media.entity_id, 'on') or is_state(input.alert_media.entity_id,\
          \ 'idle') or is_state(input.alert_media.entity_id, 'playing') }}\"\n   \
          \ \n  # Play the alert on the specified media player\n  - service: media_player.play_media\n\
          \    data:\n      entity_id: \"{{ input.alert_media.entity_id }}\"\n   \
          \   media_content_id: \"{{ input.alert_media.media_content_id }}\"\n   \
          \   media_content_type: \"{{ input.alert_media.media_content_type }}\"\n\
          \    \n  # Wait for 1 minute\n  - delay:\n      minutes: 1\n      \n  #\
          \ Check again if the door is still open, and if so, repeat the alert\n \
          \ # This creates a repeating alert until the door is closed\n  - repeat:\n\
          \      while:\n        - condition: state\n          entity_id: !input door_sensor\n\
          \          state: \"on\"\n      sequence:\n        - service: media_player.play_media\n\
          \          data:\n            entity_id: \"{{ input.alert_media.entity_id\
          \ }}\"\n            media_content_id: \"{{ input.alert_media.media_content_id\
          \ }}\"\n            media_content_type: \"{{ input.alert_media.media_content_type\
          \ }}\"\n        - delay:\n            minutes: 1\n```"
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 03:58:04.252069+00:00
  duration_ms: 11282.282
  tries: 1
