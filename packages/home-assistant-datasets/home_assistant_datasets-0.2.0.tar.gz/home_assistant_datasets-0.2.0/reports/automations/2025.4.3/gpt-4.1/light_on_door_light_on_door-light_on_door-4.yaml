---
uuid: 8f6bd9ec-6a84-4737-84ac-18288d2a4e7e
task_id: light_on_door_light_on_door-light_on_door-4
model_id: gpt-4.1
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Light On Door
    description: |
      Turn on a light when a door opens and turn it off when the door closes or after 2 minutes.
      Useful for automatically lighting spaces like pantries, closets, or other rooms upon entry.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The door binary sensor (should be open/closed class).
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      light_switch:
        name: Light(s)
        description: Light(s) to turn on when the door opens and off when it closes or times out.
        selector:
          target:
            entity:
              domain: light

  mode: restart  # ensure cleanup when retriggered

  trigger:
    - platform: state
      entity_id: !input door_sensor
      to: 'on'          # Door opened
    - platform: state
      entity_id: !input door_sensor
      to: 'off'         # Door closed

  action:
    - choose:
        # Door opened
        - conditions:
            - condition: state
              entity_id: !input door_sensor
              state: 'on'
          sequence:
            - service: light.turn_on
              target: !input light_switch

            # Wait for either the door to close or a 2 min timeout
            - wait_for_trigger:
                - platform: state
                  entity_id: !input door_sensor
                  to: 'off'
              timeout: '00:02:00'
              continue_on_timeout: true

            # Turn light(s) off
            - service: light.turn_off
              target: !input light_switch

        # Door closed (in case it was detected without an 'open' first)
        - conditions:
            - condition: state
              entity_id: !input door_sensor
              state: 'off'
          sequence:
            - service: light.turn_off
              target: !input light_switch
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JSGCT39BS7YT1QBRWXN34DW4
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 03:59:33.163192+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:59:33. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Light On Door
            description: |
              Turn on a light when a door opens and turn it off when the door closes or after 2 minutes.
              Useful for automatically lighting spaces like pantries, closets, or other rooms upon entry.
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The door binary sensor (should be open/closed class).
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              light_switch:
                name: Light(s)
                description: Light(s) to turn on when the door opens and off when it closes or times out.
                selector:
                  target:
                    entity:
                      domain: light

          mode: restart  # ensure cleanup when retriggered

          trigger:
            - platform: state
              entity_id: !input door_sensor
              to: 'on'          # Door opened
            - platform: state
              entity_id: !input door_sensor
              to: 'off'         # Door closed

          action:
            - choose:
                # Door opened
                - conditions:
                    - condition: state
                      entity_id: !input door_sensor
                      state: 'on'
                  sequence:
                    - service: light.turn_on
                      target: !input light_switch

                    # Wait for either the door to close or a 2 min timeout
                    - wait_for_trigger:
                        - platform: state
                          entity_id: !input door_sensor
                          to: 'off'
                      timeout: '00:02:00'
                      continue_on_timeout: true

                    # Turn light(s) off
                    - service: light.turn_off
                      target: !input light_switch

                # Door closed (in case it was detected without an 'open' first)
                - conditions:
                    - condition: state
                      entity_id: !input door_sensor
                      state: 'off'
                  sequence:
                    - service: light.turn_off
                      target: !input light_switch
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 03:59:33.164751+00:00
  - event_type: agent_detail
    data:
      stats:
        input_tokens: 257
        output_tokens: 423
    timestamp: 2025-04-23 03:59:41.219046+00:00
  duration_ms: 8059.102
  tries: 1
