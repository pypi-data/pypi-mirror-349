---
uuid: cee1b5aa-0e3e-4a55-be62-d2020d9ac77b
task_id: humidity_fan_humidity_fan-humidity_fan-4
model_id: gpt-4.1
category: fan
task:
  input_text: |
    # Humidity Fan

    ## Problem statement

    Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
    - Make sure the garage does not get too humid

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
    | `humidity_level` | A `number` selector to set the value used as the trigger. |
    | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

    The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
    triggered, the fan should be turned off. The fan should also be stopped when the
    sensor goes back down below the desired level. The automation should not try to
    turn the fan on if it is already on, and should not turn the fan off when it is
    already off.
response: |-
  ```yaml
  blueprint:
    name: Humidity Controlled Fan
    description: >
      Turns a fan on when the humidity sensor value rises above a set threshold,
      and turns it off when it falls back below. Designed for exhaust fans in bathrooms,
      garages, or similar rooms.
    domain: automation
    input:
      humidity_sensor:
        name: Humidity Sensor
        description: Select the humidity sensor entity to monitor.
        selector:
          entity:
            domain: sensor
            device_class: humidity
      humidity_level:
        name: Humidity Threshold
        description: Set the humidity percentage that will trigger the fan to turn on.
        selector:
          number:
            min: 0
            max: 100
            step: 1
            unit_of_measurement: "%"
            mode: slider
      fan_entity:
        name: Fan Entity
        description: Select the fan to control.
        selector:
          entity:
            domain: fan

  mode: restart

  trigger:
    - platform: state
      entity_id: !input humidity_sensor
      for:
        seconds: 0 # triggers instantly to each humidity change

  condition: []

  action:
    - variables:
        humidity: >
          {{ states(trigger.entity_id)|float(0) }}
        threshold: !input humidity_level
        fan: !input fan_entity

    # Fan ON logic
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ humidity > threshold }}"
            - condition: template
              value_template: "{{ is_state(fan, 'off') }}"
          sequence:
            - service: fan.turn_on
              target:
                entity_id: !input fan_entity

        # Fan OFF logic
        - conditions:
            - condition: template
              value_template: "{{ humidity <= threshold }}"
            - condition: template
              value_template: "{{ is_state(fan, 'on') }}"
          sequence:
            - service: fan.turn_off
              target:
                entity_id: !input fan_entity
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Humidity Fan

        ## Problem statement

        Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
        - Make sure the garage does not get too humid

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
        | `humidity_level` | A `number` selector to set the value used as the trigger. |
        | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

        The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
        triggered, the fan should be turned off. The fan should also be stopped when the
        sensor goes back down below the desired level. The automation should not try to
        turn the fan on if it is already on, and should not turn the fan off when it is
        already off.
      context:
        id: 01JSGDR8PF23QY2FANWKN1X2FN
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 04:16:01.744074+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 21:16:01. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Humidity Fan

          ## Problem statement

          Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
          - Make sure the garage does not get too humid

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
          | `humidity_level` | A `number` selector to set the value used as the trigger. |
          | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

          The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
          triggered, the fan should be turned off. The fan should also be stopped when the
          sensor goes back down below the desired level. The automation should not try to
          turn the fan on if it is already on, and should not turn the fan off when it is
          already off.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Humidity Controlled Fan
            description: >
              Turns a fan on when the humidity sensor value rises above a set threshold,
              and turns it off when it falls back below. Designed for exhaust fans in bathrooms,
              garages, or similar rooms.
            domain: automation
            input:
              humidity_sensor:
                name: Humidity Sensor
                description: Select the humidity sensor entity to monitor.
                selector:
                  entity:
                    domain: sensor
                    device_class: humidity
              humidity_level:
                name: Humidity Threshold
                description: Set the humidity percentage that will trigger the fan to turn on.
                selector:
                  number:
                    min: 0
                    max: 100
                    step: 1
                    unit_of_measurement: "%"
                    mode: slider
              fan_entity:
                name: Fan Entity
                description: Select the fan to control.
                selector:
                  entity:
                    domain: fan

          mode: restart

          trigger:
            - platform: state
              entity_id: !input humidity_sensor
              for:
                seconds: 0 # triggers instantly to each humidity change

          condition: []

          action:
            - variables:
                humidity: >
                  {{ states(trigger.entity_id)|float(0) }}
                threshold: !input humidity_level
                fan: !input fan_entity

            # Fan ON logic
            - choose:
                - conditions:
                    - condition: template
                      value_template: "{{ humidity > threshold }}"
                    - condition: template
                      value_template: "{{ is_state(fan, 'off') }}"
                  sequence:
                    - service: fan.turn_on
                      target:
                        entity_id: !input fan_entity

                # Fan OFF logic
                - conditions:
                    - condition: template
                      value_template: "{{ humidity <= threshold }}"
                    - condition: template
                      value_template: "{{ is_state(fan, 'on') }}"
                  sequence:
                    - service: fan.turn_off
                      target:
                        entity_id: !input fan_entity
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 04:16:01.745634+00:00
  - event_type: agent_detail
    data:
      stats:
        input_tokens: 340
        output_tokens: 419
    timestamp: 2025-04-23 04:16:14.798008+00:00
  duration_ms: 13055.432
  tries: 1
