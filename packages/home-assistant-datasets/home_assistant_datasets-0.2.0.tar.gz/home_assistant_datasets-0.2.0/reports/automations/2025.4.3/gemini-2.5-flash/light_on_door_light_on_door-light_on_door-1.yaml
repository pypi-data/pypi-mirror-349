---
uuid: 9b03ad56-d3a1-4797-be2b-c5970e19c56d
task_id: light_on_door_light_on_door-light_on_door-1
model_id: gemini-2.5-flash
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Light on door
    description: Turn on a light when a door opens and turn it off when the door closes or after a timeout.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The binary sensor that indicates the door's open/closed state (e.g., contact sensor).
        selector:
          entity:
            domain: binary_sensor
      light_target:
        name: Light(s) to control
        description: The light entity, device, area, or group to turn on/off.
        selector:
          target:
            entity:
              domain: light

  trigger:
    - platform: state
      entity_id: !input door_sensor
      from: 'off'
      to: 'on'
      # Adding a brief duration can help avoid false triggers from brief "flickers"
      # of the sensor state, though often not necessary for simple contact sensors.
      # for:
      #   milliseconds: 50

  action:
    # Turn on the light immediately when the door opens
    - service: light.turn_on
      target: !input light_target

    # Wait for either the door to close or a 2-minute timeout
    - wait_for_trigger:
        - platform: state
          entity_id: !input door_sensor
          from: 'on'
          to: 'off'
        - platform: template
          value_template: "{{ true }}" # This trigger will never fire, acting purely as a placeholder
                                       # for the timeout. The timeout itself handles the delay.
          timeout:
            minutes: 2
      timeout:
        minutes: 2 # This is the actual timeout for the wait_for_trigger block
      continue_on_timeout: true # Ensure the automation continues to the next step even if it times out

    # Turn off the light after the wait_for_trigger completes
    - service: light.turn_off
      target: !input light_target

  mode: restart # If the door is opened again while the automation is running, restart the sequence.

  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JSGCVMQ4B4G6HSFVVRPY9N60
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 04:00:23.780999+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 21:00:23. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Light on door
            description: Turn on a light when a door opens and turn it off when the door closes or after a timeout.
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The binary sensor that indicates the door's open/closed state (e.g., contact sensor).
                selector:
                  entity:
                    domain: binary_sensor
              light_target:
                name: Light(s) to control
                description: The light entity, device, area, or group to turn on/off.
                selector:
                  target:
                    entity:
                      domain: light

          trigger:
            - platform: state
              entity_id: !input door_sensor
              from: 'off'
              to: 'on'
              # Adding a brief duration can help avoid false triggers from brief "flickers"
              # of the sensor state, though often not necessary for simple contact sensors.
              # for:
              #   milliseconds: 50

          action:
            # Turn on the light immediately when the door opens
            - service: light.turn_on
              target: !input light_target

            # Wait for either the door to close or a 2-minute timeout
            - wait_for_trigger:
                - platform: state
                  entity_id: !input door_sensor
                  from: 'on'
                  to: 'off'
                - platform: template
                  value_template: "{{ true }}" # This trigger will never fire, acting purely as a placeholder
                                               # for the timeout. The timeout itself handles the delay.
                  timeout:
                    minutes: 2
              timeout:
                minutes: 2 # This is the actual timeout for the wait_for_trigger block
              continue_on_timeout: true # Ensure the automation continues to the next step even if it times out

            # Turn off the light after the wait_for_trigger completes
            - service: light.turn_off
              target: !input light_target

          mode: restart # If the door is opened again while the automation is running, restart the sequence.

          ```
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 04:00:23.785548+00:00
  - event_type: agent_detail
    data:
      stats:
        input_tokens: 275
        cached_input_tokens: 0
        output_tokens: 1318
    timestamp: 2025-04-23 04:00:30.409843+00:00
  duration_ms: 6629.387
  tries: 1
