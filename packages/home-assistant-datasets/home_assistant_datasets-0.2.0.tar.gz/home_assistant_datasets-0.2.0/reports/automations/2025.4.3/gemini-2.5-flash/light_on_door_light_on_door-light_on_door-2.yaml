---
uuid: 71076553-f293-47d2-be6c-870e354cce9a
task_id: light_on_door_light_on_door-light_on_door-2
model_id: gemini-2.5-flash
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Light on door open with timeout
    description: Turn on a light when a door opens and turn it off when the door closes or after a timeout.
    domain: automation
    source_url: https://github.com/your_github_repo/light_on_door_open_with_timeout.yaml # Replace with your blueprint's URL

  input:
    door_sensor:
      name: Door Sensor
      description: The binary sensor for the door (e.g., contact sensor).
      selector:
        entity:
          domain: binary_sensor
      required: true

    light_switch:
      name: Light(s)
      description: The light or lights to turn on when the door opens.
      selector:
        target:
          entity:
            domain: light
      required: true

  trigger:
    - platform: state
      entity_id: !input door_sensor
      from: "off"
      to: "on"

  action:
    - alias: "Turn on the light"
      service: light.turn_on
      target: !input light_switch

    - alias: "Wait for door close or timeout"
      wait_for_trigger:
        - platform: state
          entity_id: !input door_sensor
          from: "on"
          to: "off"
      timeout: "00:02:00" # 2 minutes timeout
      continue_on_timeout: true # Continue automation even if timeout is reached

    - alias: "Turn off the light"
      service: light.turn_off
      target: !input light_switch

  mode: restart # Use restart mode to handle rapid door opening/closing correctly
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JSGE3ZCAGNNRE0X360R7Q89W
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 04:22:25.418504+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 21:22:25. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Light on door open with timeout
            description: Turn on a light when a door opens and turn it off when the door closes or after a timeout.
            domain: automation
            source_url: https://github.com/your_github_repo/light_on_door_open_with_timeout.yaml # Replace with your blueprint's URL

          input:
            door_sensor:
              name: Door Sensor
              description: The binary sensor for the door (e.g., contact sensor).
              selector:
                entity:
                  domain: binary_sensor
              required: true

            light_switch:
              name: Light(s)
              description: The light or lights to turn on when the door opens.
              selector:
                target:
                  entity:
                    domain: light
              required: true

          trigger:
            - platform: state
              entity_id: !input door_sensor
              from: "off"
              to: "on"

          action:
            - alias: "Turn on the light"
              service: light.turn_on
              target: !input light_switch

            - alias: "Wait for door close or timeout"
              wait_for_trigger:
                - platform: state
                  entity_id: !input door_sensor
                  from: "on"
                  to: "off"
              timeout: "00:02:00" # 2 minutes timeout
              continue_on_timeout: true # Continue automation even if timeout is reached

            - alias: "Turn off the light"
              service: light.turn_off
              target: !input light_switch

          mode: restart # Use restart mode to handle rapid door opening/closing correctly
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 04:22:25.420097+00:00
  - event_type: agent_detail
    data:
      stats:
        input_tokens: 275
        cached_input_tokens: 0
        output_tokens: 874
    timestamp: 2025-04-23 04:22:30.056905+00:00
  duration_ms: 4638.727
  tries: 1
