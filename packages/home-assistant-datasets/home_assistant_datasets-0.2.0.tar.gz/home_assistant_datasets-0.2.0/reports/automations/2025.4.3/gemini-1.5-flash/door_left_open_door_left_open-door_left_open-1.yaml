---
uuid: 6accb8ac-8dc0-426a-a5ee-6ec818fa3708
task_id: door_left_open_door_left_open-door_left_open-1
model_id: gemini-1.5-flash
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  ```yaml
  blueprint:
    name: Door Left Open Alert
    description: Plays an alert on a media player when a door is left open for a specified duration.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The binary sensor entity representing the door.
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      alert_media:
        name: Alert Media
        description: The media player and media to play when the door is left open.
        selector:
          media:
            type: media
      open_duration:
        name: Open Duration
        description: The duration the door must be open before triggering the alert.
        selector:
          duration:
            min: 00:01:00 # Minimum duration of 1 minute
    variables:
      #Added variables to make the automation easier to read
      open_state: "on"
      closed_state: "off"

    mode: single


    trigger:
    - platform: state
      entity_id: !input door_sensor
      from: "{{ closed_state }}"
      to: "{{ open_state }}"

    condition:
    - condition: time
      after: !lambda |-
          return now().isoformat()

    action:
    - wait_for_trigger:
        platform: state
        entity_id: !input door_sensor
        from: "{{ open_state }}"
        to: "{{ closed_state }}"
      timeout: !input open_duration
    - service: media_player.play_media
      data:
        media_content_id: !input alert_media.media_content_id
        media_content_type: !input alert_media.media_content_type
      target:
        entity_id: !input alert_media.entity_id

  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JSGE4BRD9SJKXP0DJZE2VR8Q
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-04-23 04:22:38.093250+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 21:22:38. Today's date is 2025-04-22.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Door Left Open Alert
            description: Plays an alert on a media player when a door is left open for a specified duration.
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The binary sensor entity representing the door.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              alert_media:
                name: Alert Media
                description: The media player and media to play when the door is left open.
                selector:
                  media:
                    type: media
              open_duration:
                name: Open Duration
                description: The duration the door must be open before triggering the alert.
                selector:
                  duration:
                    min: 00:01:00 # Minimum duration of 1 minute
            variables:
              #Added variables to make the automation easier to read
              open_state: "on"
              closed_state: "off"

            mode: single


            trigger:
            - platform: state
              entity_id: !input door_sensor
              from: "{{ closed_state }}"
              to: "{{ open_state }}"

            condition:
            - condition: time
              after: !lambda |-
                  return now().isoformat()

            action:
            - wait_for_trigger:
                platform: state
                entity_id: !input door_sensor
                from: "{{ open_state }}"
                to: "{{ closed_state }}"
              timeout: !input open_duration
            - service: media_player.play_media
              data:
                media_content_id: !input alert_media.media_content_id
                media_content_type: !input alert_media.media_content_type
              target:
                entity_id: !input alert_media.entity_id

          ```
        tool_calls: null
      tools: null
    timestamp: 2025-04-23 04:22:38.094922+00:00
  - event_type: agent_detail
    data:
      stats:
        input_tokens: 351
        cached_input_tokens: 0
        output_tokens: 425
    timestamp: 2025-04-23 04:22:41.113550+00:00
  duration_ms: 3021.159
  tries: 1
