---
uuid: 7fab357e-a8c7-4491-9660-f69d6d434e48
task_id: light_on_door_light_on_door-light_on_door-3
model_id: qwen2.5-3b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  Here is a blueprint for your Home Assistant integration that turns on a specified light when a door sensor detects an open state and turns it off after a 2-minute delay:

  ```yaml
  automation:
    - alias: "Turn On Light When Door Opens"
      trigger:
        platform: event
        event_type: binary_sensor_door_opened
      condition: []
      action:
        service: switch.turn_on
        data_input:
          entity_id: light.your_light_entity
      mode: single
  ```

  In this configuration:

  - Replace `light.your_light_entity` with the actual ID of your target light.
  - The automation listens for an event where a door is opened (`binary_sensor_door_opened`), and when detected, it turns on the specified light.

  For closing the light after 2 minutes, you would need to create another automation that listens for `binary_sensor.door_closed` or detects no activity within 120 seconds:

  ```yaml
  automation:
    - alias: "Turn Off Light After Door Closes"
      trigger:
        platform: event
        event_type: binary_sensor_door_closed
      condition: []
      action:
        service: switch.turn_off
        data_input:
          entity_id: light.your_light_entity
  ```

  - Again, replace `light.your_light_entity` with the actual ID of your target light.

  Make sure to adjust the `entity_id` and event names according to your setup.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JTHHV4NA47Z19EDP4MH4TFES
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 01:02:26.474702+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 18:02:26. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          Here is a blueprint for your Home Assistant integration that turns on a specified light when a door sensor detects an open state and turns it off after a 2-minute delay:

          ```yaml
          automation:
            - alias: "Turn On Light When Door Opens"
              trigger:
                platform: event
                event_type: binary_sensor_door_opened
              condition: []
              action:
                service: switch.turn_on
                data_input:
                  entity_id: light.your_light_entity
              mode: single
          ```

          In this configuration:

          - Replace `light.your_light_entity` with the actual ID of your target light.
          - The automation listens for an event where a door is opened (`binary_sensor_door_opened`), and when detected, it turns on the specified light.

          For closing the light after 2 minutes, you would need to create another automation that listens for `binary_sensor.door_closed` or detects no activity within 120 seconds:

          ```yaml
          automation:
            - alias: "Turn Off Light After Door Closes"
              trigger:
                platform: event
                event_type: binary_sensor_door_closed
              condition: []
              action:
                service: switch.turn_off
                data_input:
                  entity_id: light.your_light_entity
          ```

          - Again, replace `light.your_light_entity` with the actual ID of your target light.

          Make sure to adjust the `entity_id` and event names according to your setup.
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 01:02:26.476217+00:00
  duration_ms: 9140.728
  tries: 1
