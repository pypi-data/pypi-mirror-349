---
uuid: b1d7cb84-e6d5-4afe-8132-b6a458c92b74
task_id: light_on_door_light_on_door-light_on_door-4
model_id: qwen2.5-3b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  Here is a simplified version of the blueprint for your scenario:

  ```yaml
  automation:
    - alias: Turn On Light When Door Opens
      trigger:
        platform: sensor_state
        entity_id: binary_sensor.pantry_door
        to: on
      condition:
        conditions:
          - condition: state
            entity_id: binary_sensor.pantry_door
            state: on
      action:
        service: light.turn_on
        target:
          entity_id: light.pantry_light

    - alias: Turn Off Light When Door Closes Or After Timeout
      trigger:
        platform: sensor_state
        entity_id: binary_sensor.pantry_door
        from: on
      condition:
        conditions:
          - condition: state
            entity_id: binary_sensor.pantry_door
            state: off
      action:
        service: light.turn_off
        target:
          entity_id: light.pantry_light

    - alias: Timeout Timer
      trigger:
        platform: time_timer
        seconds: 120 # 2 minutes in seconds
      condition:
        conditions:
          - condition: state
            entity_id: binary_sensor.pantry_door
            state: off
      action:
        service: light.turn_off
        target:
          entity_id: light.pantry_light
  ```

  This blueprint assumes you have a `binary_sensor` for the door and a corresponding `light` entity. Adjust the `entity_id`s to match your system's setup.

  The first automation (`Turn On Light When Door Opens`) triggers when the pantry door opens (state turns from off to on) and turns on the light. The second automation (`Turn Off Light When Door Closes Or After Timeout`) ensures the light is turned off when the door closes or after a 2-minute timeout, ensuring it doesn't stay on indefinitely.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JTHHVE4CZ93D9A52QXXKXH37
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 01:02:36.172457+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 18:02:36. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          Here is a simplified version of the blueprint for your scenario:

          ```yaml
          automation:
            - alias: Turn On Light When Door Opens
              trigger:
                platform: sensor_state
                entity_id: binary_sensor.pantry_door
                to: on
              condition:
                conditions:
                  - condition: state
                    entity_id: binary_sensor.pantry_door
                    state: on
              action:
                service: light.turn_on
                target:
                  entity_id: light.pantry_light

            - alias: Turn Off Light When Door Closes Or After Timeout
              trigger:
                platform: sensor_state
                entity_id: binary_sensor.pantry_door
                from: on
              condition:
                conditions:
                  - condition: state
                    entity_id: binary_sensor.pantry_door
                    state: off
              action:
                service: light.turn_off
                target:
                  entity_id: light.pantry_light

            - alias: Timeout Timer
              trigger:
                platform: time_timer
                seconds: 120 # 2 minutes in seconds
              condition:
                conditions:
                  - condition: state
                    entity_id: binary_sensor.pantry_door
                    state: off
              action:
                service: light.turn_off
                target:
                  entity_id: light.pantry_light
          ```

          This blueprint assumes you have a `binary_sensor` for the door and a corresponding `light` entity. Adjust the `entity_id`s to match your system's setup.

          The first automation (`Turn On Light When Door Opens`) triggers when the pantry door opens (state turns from off to on) and turns on the light. The second automation (`Turn Off Light When Door Closes Or After Timeout`) ensures the light is turned off when the door closes or after a 2-minute timeout, ensuring it doesn't stay on indefinitely.
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 01:02:36.173965+00:00
  duration_ms: 11293.292
  tries: 1
