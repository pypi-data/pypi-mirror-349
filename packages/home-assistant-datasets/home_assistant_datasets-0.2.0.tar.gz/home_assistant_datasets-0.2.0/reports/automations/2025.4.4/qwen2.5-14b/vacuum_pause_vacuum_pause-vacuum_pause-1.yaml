---
uuid: aba146c7-f203-4a6d-a03c-60e5244c5be8
task_id: vacuum_pause_vacuum_pause-vacuum_pause-1
model_id: qwen2.5-14b
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  To create a blueprint for Home Assistant that pauses a vacuum when you receive a phone call, follow these steps:

  1. **Create a Binary Sensor**: Ensure you have a `binary_sensor` entity that detects incoming calls. This could be from a specific device or an integration like `mobile_app`.

  2. **Define the Blueprint**:
      - Use the Home Assistant UI to create a new automation blueprint.
      - Set up conditions and actions based on the provided inputs.

  Here's how you can structure your blueprint:

  ```yaml
  alias: Pause Vacuum When Phone Call
  description: 'Pauses the vacuum when receiving a phone call.'
  trigger:
    platform: state
    entity_id: binary_sensor.phone_call_sensor
    to: 'on'
  condition:
    condition: template
    value_template: "{{ states.vacuum_entity.state == 'cleaning' }}"
  action:
    service: vacuum.pause
    target:
      entity_id: vacuum.vacuum_entity
  ```

  **Explanation of the Blueprint**:

  - **Trigger**: The automation is triggered when the `binary_sensor.phone_call_sensor` changes state to 'on'.
  - **Condition**: Only proceed if the `vacuum.vacuum_entity` is in a 'cleaning' state.
  - **Action**: When both conditions are met, it calls the service `vacuum.pause` on the specified vacuum entity.

  ### Input Entities
  - Replace `binary_sensor.phone_call_sensor` with your actual phone call sensor's entity ID.
  - Replace `vacuum.vacuum_entity` with your vacuum cleaner's entity ID.

  This blueprint ensures that the vacuum is paused when you receive a phone call, preventing interruptions during important conversations.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JTHTK6MS40PVAKG5M62RMEF4
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 03:35:23.545726+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:35:23. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          To create a blueprint for Home Assistant that pauses a vacuum when you receive a phone call, follow these steps:

          1. **Create a Binary Sensor**: Ensure you have a `binary_sensor` entity that detects incoming calls. This could be from a specific device or an integration like `mobile_app`.

          2. **Define the Blueprint**:
              - Use the Home Assistant UI to create a new automation blueprint.
              - Set up conditions and actions based on the provided inputs.

          Here's how you can structure your blueprint:

          ```yaml
          alias: Pause Vacuum When Phone Call
          description: 'Pauses the vacuum when receiving a phone call.'
          trigger:
            platform: state
            entity_id: binary_sensor.phone_call_sensor
            to: 'on'
          condition:
            condition: template
            value_template: "{{ states.vacuum_entity.state == 'cleaning' }}"
          action:
            service: vacuum.pause
            target:
              entity_id: vacuum.vacuum_entity
          ```

          **Explanation of the Blueprint**:

          - **Trigger**: The automation is triggered when the `binary_sensor.phone_call_sensor` changes state to 'on'.
          - **Condition**: Only proceed if the `vacuum.vacuum_entity` is in a 'cleaning' state.
          - **Action**: When both conditions are met, it calls the service `vacuum.pause` on the specified vacuum entity.

          ### Input Entities
          - Replace `binary_sensor.phone_call_sensor` with your actual phone call sensor's entity ID.
          - Replace `vacuum.vacuum_entity` with your vacuum cleaner's entity ID.

          This blueprint ensures that the vacuum is paused when you receive a phone call, preventing interruptions during important conversations.
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 03:35:23.547187+00:00
  duration_ms: 27731.117
  tries: 1
