---
uuid: c155b55d-903e-4708-befa-1126d142cd66
task_id: door_left_open_door_left_open-door_left_open-1
model_id: qwen2.5-14b
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  Here is a blueprint for Home Assistant that will trigger an alert on the speaker when a door is left open for a certain period:

  ```yaml
  blueprint:
    name: Door Left Open Alert
    domain: automation
    input:
      door_sensor:
        name: Select door sensor
        selector:
          entity:
            integration: binary_sensor
      alert_media:
        name: Select media player and media to play
        description: "Select the media player and choose a sound or message."
        selector:
          type: media
      open_duration:
        name: Duration before triggering alert (e.g., 00:15, 30m)
        description: "The time duration after which an alert will be played if the door is still open."
        selector:
          type: duration
  trigger:
    platform: state
    entity_id: "{{ door_sensor }}"
    to: 'on'
  action:
    service: delay
    data:
      hours: '{{ (open_duration | int / 60) }}'
      minutes: '{{ (open_duration | int % 60) }}'
  condition:
    condition: template
    value_template: "true"
  action:
    - service: media_player.play_media
      target:
        entity_id: "{{ alert_media }}"
      data:
        media_content_type: music
        media_content_id: "{{ alert_media.media_id }}"
  ```

  ### Instructions for Usage:

  1. **Replace `media_content_type`**: Depending on your selected media, you might need to adjust the content type. Use `music`, `audio`, or another appropriate value.
  2. **Customize for Specific Needs**: Adjust templates or conditions if needed for specific use cases like different alerts based on time of day.

  ### Example Configurations:

  - For a 30-minute alert after the garage door is open:
      - `door_sensor`: binary_sensor.garage_door
      - `alert_media`: media_player.livingroom_speaker, your_alert_sound
      - `open_duration`: 01:00

  - For a 5-minute alert if the front door is ajar:
      - `door_sensor`: binary_sensor.front_door
      - `alert_media`: media_player.kitchen_speaker, another_alert_sound
      - `open_duration`: 00:05
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JTHSSYJ2W27XDK0VFHTMHRYR
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 03:21:36.067084+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:21:36. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          Here is a blueprint for Home Assistant that will trigger an alert on the speaker when a door is left open for a certain period:

          ```yaml
          blueprint:
            name: Door Left Open Alert
            domain: automation
            input:
              door_sensor:
                name: Select door sensor
                selector:
                  entity:
                    integration: binary_sensor
              alert_media:
                name: Select media player and media to play
                description: "Select the media player and choose a sound or message."
                selector:
                  type: media
              open_duration:
                name: Duration before triggering alert (e.g., 00:15, 30m)
                description: "The time duration after which an alert will be played if the door is still open."
                selector:
                  type: duration
          trigger:
            platform: state
            entity_id: "{{ door_sensor }}"
            to: 'on'
          action:
            service: delay
            data:
              hours: '{{ (open_duration | int / 60) }}'
              minutes: '{{ (open_duration | int % 60) }}'
          condition:
            condition: template
            value_template: "true"
          action:
            - service: media_player.play_media
              target:
                entity_id: "{{ alert_media }}"
              data:
                media_content_type: music
                media_content_id: "{{ alert_media.media_id }}"
          ```

          ### Instructions for Usage:

          1. **Replace `media_content_type`**: Depending on your selected media, you might need to adjust the content type. Use `music`, `audio`, or another appropriate value.
          2. **Customize for Specific Needs**: Adjust templates or conditions if needed for specific use cases like different alerts based on time of day.

          ### Example Configurations:

          - For a 30-minute alert after the garage door is open:
              - `door_sensor`: binary_sensor.garage_door
              - `alert_media`: media_player.livingroom_speaker, your_alert_sound
              - `open_duration`: 01:00

          - For a 5-minute alert if the front door is ajar:
              - `door_sensor`: binary_sensor.front_door
              - `alert_media`: media_player.kitchen_speaker, another_alert_sound
              - `open_duration`: 00:05
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 03:21:36.068695+00:00
  duration_ms: 38539.547
  tries: 1
