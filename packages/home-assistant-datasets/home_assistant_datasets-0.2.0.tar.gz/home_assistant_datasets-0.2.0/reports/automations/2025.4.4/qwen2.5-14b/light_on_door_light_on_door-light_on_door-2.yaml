---
uuid: 2df4527a-6549-42b0-95c0-72586a34ab8f
task_id: light_on_door_light_on_door-light_on_door-2
model_id: qwen2.5-14b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "Here's a blueprint for Home Assistant that turns on a light when a door\
  \ opens and turns it off either when the door closes or after a 2-minute timeout.\n\
  \n```yaml\nblueprint:\n  name: Turn On Light When Door Opens\n  domain: automation\n\
  \  inputs:\n    - variable: door_sensor\n      name: Door Sensor Entity ID\n   \
  \   description: The binary sensor entity that detects the door opening.\n     \
  \ icon: mdi:door-closed\n      required: true\n    - variable: light_switch\n  \
  \    name: Light Switch Entity ID(s)\n      description: One or more light entities\
  \ to turn on when the door opens.\n      icon: mdi:lightbulb-on\n      required:\
  \ true\n\nmode: single\nmax: 1\ntrigger:\n  platform: state\n  entity_id: !input\
  \ door_sensor\n  to: 'on'\n\naction:\n  service: light.turn_on\n  target:\n    entity_id:\
  \ !input light_switch\n  \n  # Wait for either the door to close or a timeout of\
  \ 2 minutes before turning off the lights\n  service: event_bus.listen_event\n \
  \ data:\n    event: homeassistant.start\n    event_data_template:\n      state:\
  \ >\n        {\n          \"entity_id\": \"{{ trigger.entity_id }}\",\n        \
  \  \"new_state\": {\"state\": \"off\"},\n          \"old_state\": {\"state\": \"\
  on\"}\n        }\n    listener:\n      service: light.turn_off\n      target:\n\
  \        entity_id: !input light_switch\n      \n  delay:\n    - delay: 00:02:00\n\
  \      service: light.turn_off\n      target:\n        entity_id: !input light_switch\n\
  ```\n\nThis blueprint uses a state trigger to detect when the door opens. It then\
  \ turns on the specified lights and sets up an event listener that waits for the\
  \ door to close (detected by the `binary_sensor` changing its state) or times out\
  \ after 2 minutes, before turning off the light(s).\n\nRemember to replace `!input`\
  \ placeholders with actual entity IDs when using this blueprint."
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JTHTCKDTD4KB5S0SRNTSFWME
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 03:31:47.258179+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:31:47. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: "Here's a blueprint for Home Assistant that turns on a light when\
          \ a door opens and turns it off either when the door closes or after a 2-minute\
          \ timeout.\n\n```yaml\nblueprint:\n  name: Turn On Light When Door Opens\n\
          \  domain: automation\n  inputs:\n    - variable: door_sensor\n      name:\
          \ Door Sensor Entity ID\n      description: The binary sensor entity that\
          \ detects the door opening.\n      icon: mdi:door-closed\n      required:\
          \ true\n    - variable: light_switch\n      name: Light Switch Entity ID(s)\n\
          \      description: One or more light entities to turn on when the door\
          \ opens.\n      icon: mdi:lightbulb-on\n      required: true\n\nmode: single\n\
          max: 1\ntrigger:\n  platform: state\n  entity_id: !input door_sensor\n \
          \ to: 'on'\n\naction:\n  service: light.turn_on\n  target:\n    entity_id:\
          \ !input light_switch\n  \n  # Wait for either the door to close or a timeout\
          \ of 2 minutes before turning off the lights\n  service: event_bus.listen_event\n\
          \  data:\n    event: homeassistant.start\n    event_data_template:\n   \
          \   state: >\n        {\n          \"entity_id\": \"{{ trigger.entity_id\
          \ }}\",\n          \"new_state\": {\"state\": \"off\"},\n          \"old_state\"\
          : {\"state\": \"on\"}\n        }\n    listener:\n      service: light.turn_off\n\
          \      target:\n        entity_id: !input light_switch\n      \n  delay:\n\
          \    - delay: 00:02:00\n      service: light.turn_off\n      target:\n \
          \       entity_id: !input light_switch\n```\n\nThis blueprint uses a state\
          \ trigger to detect when the door opens. It then turns on the specified\
          \ lights and sets up an event listener that waits for the door to close\
          \ (detected by the `binary_sensor` changing its state) or times out after\
          \ 2 minutes, before turning off the light(s).\n\nRemember to replace `!input`\
          \ placeholders with actual entity IDs when using this blueprint."
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 03:31:47.259406+00:00
  duration_ms: 34264.547
  tries: 2
