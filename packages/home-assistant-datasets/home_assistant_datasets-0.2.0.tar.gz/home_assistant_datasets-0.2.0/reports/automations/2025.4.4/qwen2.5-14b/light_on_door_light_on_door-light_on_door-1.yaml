---
uuid: bfac1312-89f3-4cef-90f7-a9deeffaeeea
task_id: light_on_door_light_on_door-light_on_door-1
model_id: qwen2.5-14b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "Here is a blueprint for Home Assistant that will turn on a light when a\
  \ door sensor detects opening, and turn it off again if the door closes or after\
  \ two minutes:\n\n```yaml\nblueprint:\n  name: Turn On Light When Door Opens\n \
  \ domain: automation\n  input_variables:\n    door_sensor:\n      description: A\
  \ binary_sensor to monitor for door open/close events.\n      example: binary_sensor.front_door\n\
  \    light_switch:\n      description: The light(s) to turn on when the door opens.\n\
  \      example: light.pantry_light\n      multiple: true\ntrigger:\n  platform:\
  \ state\n  entity_id: \"{{ door_sensor }}\"\n  to: \"on\"\ncondition: []\naction:\n\
  \  service: light.turn_on\n  target:\n    entity_id: \"{{ light_switch }}\"\ntimeout:\n\
  \  delay: 00:02:00\n  after_timeout:\n    - service: light.turn_off\n      target:\n\
  \        entity_id: \"{{ light_switch }}\"\n      # Optionally add a condition to\
  \ check if the door is still open before turning off the light\n      condition:\n\
  \        condition: state\n        entity_id: \"{{ door_sensor }}\"\n        state:\
  \ \"off\"\n```\n\n### Explanation\n\n- **Trigger:** The automation triggers when\
  \ the `door_sensor` changes its state to `\"on\"`, which means that the door has\
  \ opened.\n  \n- **Action:** When triggered, it turns on the light(s) specified\
  \ by `light_switch`.\n  \n- **Timeout:** If no further events are detected within\
  \ 2 minutes (120 seconds), the automation will turn off the light(s). Additionally,\
  \ before turning off the lights, it checks if the door is still in an \"on\" state.\
  \ If the door has closed (`state: 'off'`), the light is turned off.\n\nYou can customize\
  \ this blueprint to fit your specific needs by modifying the variables or adding\
  \ more conditions as necessary."
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JTHTAD82B0Q2JZ55XXVR9QP6
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 03:30:35.394418+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:30:35. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: "Here is a blueprint for Home Assistant that will turn on a light\
          \ when a door sensor detects opening, and turn it off again if the door\
          \ closes or after two minutes:\n\n```yaml\nblueprint:\n  name: Turn On Light\
          \ When Door Opens\n  domain: automation\n  input_variables:\n    door_sensor:\n\
          \      description: A binary_sensor to monitor for door open/close events.\n\
          \      example: binary_sensor.front_door\n    light_switch:\n      description:\
          \ The light(s) to turn on when the door opens.\n      example: light.pantry_light\n\
          \      multiple: true\ntrigger:\n  platform: state\n  entity_id: \"{{ door_sensor\
          \ }}\"\n  to: \"on\"\ncondition: []\naction:\n  service: light.turn_on\n\
          \  target:\n    entity_id: \"{{ light_switch }}\"\ntimeout:\n  delay: 00:02:00\n\
          \  after_timeout:\n    - service: light.turn_off\n      target:\n      \
          \  entity_id: \"{{ light_switch }}\"\n      # Optionally add a condition\
          \ to check if the door is still open before turning off the light\n    \
          \  condition:\n        condition: state\n        entity_id: \"{{ door_sensor\
          \ }}\"\n        state: \"off\"\n```\n\n### Explanation\n\n- **Trigger:**\
          \ The automation triggers when the `door_sensor` changes its state to `\"\
          on\"`, which means that the door has opened.\n  \n- **Action:** When triggered,\
          \ it turns on the light(s) specified by `light_switch`.\n  \n- **Timeout:**\
          \ If no further events are detected within 2 minutes (120 seconds), the\
          \ automation will turn off the light(s). Additionally, before turning off\
          \ the lights, it checks if the door is still in an \"on\" state. If the\
          \ door has closed (`state: 'off'`), the light is turned off.\n\nYou can\
          \ customize this blueprint to fit your specific needs by modifying the variables\
          \ or adding more conditions as necessary."
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 03:30:35.395838+00:00
  duration_ms: 31464.247
  tries: 1
