---
uuid: 5ee95b09-5d54-46c1-929c-e0554277e549
task_id: humidity_fan_humidity_fan-humidity_fan-1
model_id: qwen2.5-14b
category: fan
task:
  input_text: |
    # Humidity Fan

    ## Problem statement

    Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
    - Make sure the garage does not get too humid

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
    | `humidity_level` | A `number` selector to set the value used as the trigger. |
    | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

    The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
    triggered, the fan should be turned off. The fan should also be stopped when the
    sensor goes back down below the desired level. The automation should not try to
    turn the fan on if it is already on, and should not turn the fan off when it is
    already off.
response: "To create a Home Assistant blueprint for an automation that turns on a\
  \ fan based on humidity sensor values, you can use the following YAML configuration:\n\
  \n```yaml\nalias: Humidity Controlled Fan\ndescription: 'Turns on a fan when humidity\
  \ exceeds a certain level and turns it off when the humidity drops below this level.'\n\
  trigger:\n  - platform: state\n    entity_id: \"{{ humidity_sensor }}\"\n    to:\
  \ \"above\"\n    above: \"{{ humidity_level }}\"\n  - platform: state\n    entity_id:\
  \ \"{{ humidity_sensor }}\"\n    to: \"below\"\n    below: \"{{ humidity_level }}\"\
  \ncondition: []\naction:\n  - service: fan.turn_on\n    target:\n      entity_id:\
  \ \"{{ fan_entity }}\"\n    condition:\n      condition: or\n      conditions:\n\
  \        - condition: template\n          value_template: \"{{ state_attr(fan_entity,\
  \ 'friendly_name') != 'on' and state(humidity_sensor) > humidity_level }}\"\n  -\
  \ service: fan.turn_off\n    target:\n      entity_id: \"{{ fan_entity }}\"\n  \
  \  condition:\n      condition: or\n      conditions:\n        - condition: template\n\
  \          value_template: \"{{ state_attr(fan_entity, 'friendly_name') != 'off'\
  \ and state(humidity_sensor) < humidity_level }}\"\nmode: single\n```\n\nExplanation:\n\
  \n1. **Trigger**:\n   - The automation triggers when the `humidity_sensor` goes\
  \ above or below the specified `humidity_level`.\n   \n2. **Action**:\n   - If the\
  \ fan is not already on and the current humidity exceeds the set level, turn the\
  \ fan on.\n   - If the fan is not already off and the current humidity drops below\
  \ the set level, turn it off.\n\nYou can create this blueprint in Home Assistant\
  \ by navigating to `Automation -> Integrations -> Blueprints` and then clicking\
  \ `Add new automation from blueprint`. Fill out the fields for `humidity_sensor`,\
  \ `humidity_level`, and `fan_entity`.\n\nThis setup ensures that your fan operates\
  \ only when necessary based on humidity levels, helping to maintain a comfortable\
  \ environment."
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Humidity Fan

        ## Problem statement

        Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
        - Make sure the garage does not get too humid

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
        | `humidity_level` | A `number` selector to set the value used as the trigger. |
        | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

        The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
        triggered, the fan should be turned off. The fan should also be stopped when the
        sensor goes back down below the desired level. The automation should not try to
        turn the fan on if it is already on, and should not turn the fan off when it is
        already off.
      context:
        id: 01JTHT1MEPYC9PDTAAWRR2PCPH
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 03:25:47.862582+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 20:25:47. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Humidity Fan

          ## Problem statement

          Create a blueprint automation to turn on the fan based on the value of the humidity sensor.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the bathroom exhaust fan when the bathroom humidty is above 60%
          - Make sure the garage does not get too humid

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `humidity_sensor` | A `sensor` entity that is a humidty sensor that triggers the automation. |
          | `humidity_level` | A `number` selector to set the value used as the trigger. |
          | `fan_entity`     | A `fan` entity to turn on when the automation fires. |

          The automation should trigger when the `humidity_sensor` level goes above `humidity_level`. When
          triggered, the fan should be turned off. The fan should also be stopped when the
          sensor goes back down below the desired level. The automation should not try to
          turn the fan on if it is already on, and should not turn the fan off when it is
          already off.
      - role: assistant
        agent_id: conversation.mock_title
        content: "To create a Home Assistant blueprint for an automation that turns\
          \ on a fan based on humidity sensor values, you can use the following YAML\
          \ configuration:\n\n```yaml\nalias: Humidity Controlled Fan\ndescription:\
          \ 'Turns on a fan when humidity exceeds a certain level and turns it off\
          \ when the humidity drops below this level.'\ntrigger:\n  - platform: state\n\
          \    entity_id: \"{{ humidity_sensor }}\"\n    to: \"above\"\n    above:\
          \ \"{{ humidity_level }}\"\n  - platform: state\n    entity_id: \"{{ humidity_sensor\
          \ }}\"\n    to: \"below\"\n    below: \"{{ humidity_level }}\"\ncondition:\
          \ []\naction:\n  - service: fan.turn_on\n    target:\n      entity_id: \"\
          {{ fan_entity }}\"\n    condition:\n      condition: or\n      conditions:\n\
          \        - condition: template\n          value_template: \"{{ state_attr(fan_entity,\
          \ 'friendly_name') != 'on' and state(humidity_sensor) > humidity_level }}\"\
          \n  - service: fan.turn_off\n    target:\n      entity_id: \"{{ fan_entity\
          \ }}\"\n    condition:\n      condition: or\n      conditions:\n       \
          \ - condition: template\n          value_template: \"{{ state_attr(fan_entity,\
          \ 'friendly_name') != 'off' and state(humidity_sensor) < humidity_level\
          \ }}\"\nmode: single\n```\n\nExplanation:\n\n1. **Trigger**:\n   - The automation\
          \ triggers when the `humidity_sensor` goes above or below the specified\
          \ `humidity_level`.\n   \n2. **Action**:\n   - If the fan is not already\
          \ on and the current humidity exceeds the set level, turn the fan on.\n\
          \   - If the fan is not already off and the current humidity drops below\
          \ the set level, turn it off.\n\nYou can create this blueprint in Home Assistant\
          \ by navigating to `Automation -> Integrations -> Blueprints` and then clicking\
          \ `Add new automation from blueprint`. Fill out the fields for `humidity_sensor`,\
          \ `humidity_level`, and `fan_entity`.\n\nThis setup ensures that your fan\
          \ operates only when necessary based on humidity levels, helping to maintain\
          \ a comfortable environment."
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 03:25:47.863973+00:00
  duration_ms: 33587.605
  tries: 1
