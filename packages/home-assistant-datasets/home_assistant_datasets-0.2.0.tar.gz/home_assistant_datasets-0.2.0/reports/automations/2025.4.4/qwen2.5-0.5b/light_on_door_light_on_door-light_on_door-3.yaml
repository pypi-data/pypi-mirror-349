---
uuid: 8481e008-30a5-4c84-b13e-8c4ecf402659
task_id: light_on_door_light_on_door-light_on_door-3
model_id: qwen2.5-0.5b
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "To achieve the desired functionality of turning on a light when the door\
  \ is open,\nyou can create a blueprint that triggers an automation whenever the\
  \ `door_sensor`\n(controls whether the door opens) changes to \"ON.\" The automation\
  \ will then switch off the specified light \ntarget once the door has been opened.\n\
  \n### 1. Define Entities\n\n- **`DoorSensor`**: This sensor will detect when the\
  \ door is open.\n- **`LightSwitch`**: This entity will control if the light should\
  \ turn on or off based on the state of the `door_sensor`.\n  \n### 2. Create Blueprint\n\
  \nHere's a blueprint using Python and the Home Assistant programming language, which\
  \ uses the `light_switch` to control the `DoorSensor`.\n\n```python\nimport json\n\
  \nfrom homeassistant.core import State\nfrom homeassistant.helpers.entity import\
  \ Entity\nfrom homeassistant.helpers.entity_registry import EntityRegistry\n\nfrom\
  \ homeassistant.const import STATE_ON, STATE_OFF, STATE_CLOSED\n\n# Define your\
  \ entities here:\ndoor_sensor = EntityRegistry.get_or_create_entity(\n    \"sensor.door\"\
  , \"DoorSensor\", config_entry=EntityRegistry.get_config(\"sensor.door\")\n)\nlight_switch\
  \ = [EntityRegistry.get_entity(STATE_ON, \"LightSwitch\"), ] # One or more LightSwitches\
  \ to turn on/off\n\n# Define the blueprint\nblueprint = f\"\"\"\n{\n  \"$schema\"\
  : \"https://json-schema.org/draft-07/schema\",\n  \"title\": \"TurnOnLightWhenDoorOpensBlueprint\"\
  ,\n  \"type\": \"object\",\n  \"properties\": {\n    \"door_sensor\": {\n      \"\
  type\": \"binary_sensor\",\n      \"name\": \"DoorSensor\",\n      \"state_topic\"\
  : f\"entities/{door_sensor.entity_id}\",\n      \"entity_id\": \"light_switch.0\"\
  \n    }\n  },\n  \"actions\": [\n    {\n      \"action\": \"turn_on\",\n      \"\
  payload\": { \"device_state\": \"closed\" }\n    },\n    {\n      \"action\": \"\
  turn_off\",\n      \"payload\": {}\n    }\n  ],\n  \"state_topic\": f\"homeassistant/door_sensor\"\
  ,\n  \"entity_id\": \"light_switch.0\"\n}\n\"\"\"\n\n# Print the blueprint to the\
  \ console\nprint(blueprint)\n\ntry:\n    import voluptuous as vol\nexcept ImportError:\n\
  \    from homeassistant.helpers import validate_config_schema\n\nconfig = json.loads(blueprint)\n\
  validate_config_schema(config, {\"door_sensor\", \"light_switch\"})\n\n# Add an\
  \ entity for DoorSensor\nDoorSensor = EntityRegistry.get_entity(STATE_ON, \"DoorSensor\"\
  )\ndoor_sensor.add_automation(\n    {\n        \"entity_id\": DoorSensor.entity_id,\n\
  \        \"name\": \"DoorSensor\",\n        \"action\": \"turn_on\"\n    }\n)\n\n\
  # Define actions to switch off the light when the door is closed\nactions = [\n\
  \    # When the door is closed, turn off the first LightSwitch\n    {\"action\"\
  : \"turn_off\", \"payload\": {}},\n]\n\nif \"light_switch\" in DoorSensor:\n   \
  \ entity_id = DoorSensor.entity_id\nelse:\n    action = None\n    light_switch_actions\
  \ = [{\"action\": \"turn_on\"}]\n    for light_switch in light_switch:\n       \
  \ if door_sensor.has_action(light_switch.action, action):\n            # Turn on\
  \ the light switch\n            light_switch.turn_on(light_switch.action)\n    \
  \        break\n        else:\n            actions.append(\n                {\n\
  \                    \"action\": f\"toggle_off_{light_switch.name}\",\n        \
  \            \"payload\": {}\n                }\n            )\n\n    if actions:\n\
  \        DoorSensor.add_automation(actions)\n\n# Save the configuration changes\
  \ to the database\ndoor_sensor.save_entity()\n```\n\n### 3. Testing\n\nTo test the\
  \ automation, you can simulate door opening and closing using a voice assistant\
  \ or device that supports interacting with Home Assistant.\n\nFor instance, you\
  \ could have a simple voice assistant named \"Alexa\" open and close a speaker connected\
  \ to your home assistant. When Alexa turns on the light switch, it will turn on\
  \ the speaker.\n\n### 4. Integration\n\nThis blueprint integrates well with the\
  \ `light_switch` entity for controlling the lights that can be triggered by external\
  \ events.\n\nRemember, this is just an example blueprint. You may need to adjust\
  \ the parameters based on your specific use case and device capabilities.\n \n**Note**:\
  \ Make sure you have a reliable way to test the automation in production before\
  \ deploying it to a live system.\n  \nPlease let me know if you need any further\
  \ assistance!"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JTHHPCRWBNW367M38ESCN3EK
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-06 00:59:50.940877+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          Current time is 17:59:50. Today's date is 2025-05-05.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: "To achieve the desired functionality of turning on a light when\
          \ the door is open,\nyou can create a blueprint that triggers an automation\
          \ whenever the `door_sensor`\n(controls whether the door opens) changes\
          \ to \"ON.\" The automation will then switch off the specified light \n\
          target once the door has been opened.\n\n### 1. Define Entities\n\n- **`DoorSensor`**:\
          \ This sensor will detect when the door is open.\n- **`LightSwitch`**: This\
          \ entity will control if the light should turn on or off based on the state\
          \ of the `door_sensor`.\n  \n### 2. Create Blueprint\n\nHere's a blueprint\
          \ using Python and the Home Assistant programming language, which uses the\
          \ `light_switch` to control the `DoorSensor`.\n\n```python\nimport json\n\
          \nfrom homeassistant.core import State\nfrom homeassistant.helpers.entity\
          \ import Entity\nfrom homeassistant.helpers.entity_registry import EntityRegistry\n\
          \nfrom homeassistant.const import STATE_ON, STATE_OFF, STATE_CLOSED\n\n\
          # Define your entities here:\ndoor_sensor = EntityRegistry.get_or_create_entity(\n\
          \    \"sensor.door\", \"DoorSensor\", config_entry=EntityRegistry.get_config(\"\
          sensor.door\")\n)\nlight_switch = [EntityRegistry.get_entity(STATE_ON, \"\
          LightSwitch\"), ] # One or more LightSwitches to turn on/off\n\n# Define\
          \ the blueprint\nblueprint = f\"\"\"\n{\n  \"$schema\": \"https://json-schema.org/draft-07/schema\"\
          ,\n  \"title\": \"TurnOnLightWhenDoorOpensBlueprint\",\n  \"type\": \"object\"\
          ,\n  \"properties\": {\n    \"door_sensor\": {\n      \"type\": \"binary_sensor\"\
          ,\n      \"name\": \"DoorSensor\",\n      \"state_topic\": f\"entities/{door_sensor.entity_id}\"\
          ,\n      \"entity_id\": \"light_switch.0\"\n    }\n  },\n  \"actions\":\
          \ [\n    {\n      \"action\": \"turn_on\",\n      \"payload\": { \"device_state\"\
          : \"closed\" }\n    },\n    {\n      \"action\": \"turn_off\",\n      \"\
          payload\": {}\n    }\n  ],\n  \"state_topic\": f\"homeassistant/door_sensor\"\
          ,\n  \"entity_id\": \"light_switch.0\"\n}\n\"\"\"\n\n# Print the blueprint\
          \ to the console\nprint(blueprint)\n\ntry:\n    import voluptuous as vol\n\
          except ImportError:\n    from homeassistant.helpers import validate_config_schema\n\
          \nconfig = json.loads(blueprint)\nvalidate_config_schema(config, {\"door_sensor\"\
          , \"light_switch\"})\n\n# Add an entity for DoorSensor\nDoorSensor = EntityRegistry.get_entity(STATE_ON,\
          \ \"DoorSensor\")\ndoor_sensor.add_automation(\n    {\n        \"entity_id\"\
          : DoorSensor.entity_id,\n        \"name\": \"DoorSensor\",\n        \"action\"\
          : \"turn_on\"\n    }\n)\n\n# Define actions to switch off the light when\
          \ the door is closed\nactions = [\n    # When the door is closed, turn off\
          \ the first LightSwitch\n    {\"action\": \"turn_off\", \"payload\": {}},\n\
          ]\n\nif \"light_switch\" in DoorSensor:\n    entity_id = DoorSensor.entity_id\n\
          else:\n    action = None\n    light_switch_actions = [{\"action\": \"turn_on\"\
          }]\n    for light_switch in light_switch:\n        if door_sensor.has_action(light_switch.action,\
          \ action):\n            # Turn on the light switch\n            light_switch.turn_on(light_switch.action)\n\
          \            break\n        else:\n            actions.append(\n       \
          \         {\n                    \"action\": f\"toggle_off_{light_switch.name}\"\
          ,\n                    \"payload\": {}\n                }\n            )\n\
          \n    if actions:\n        DoorSensor.add_automation(actions)\n\n# Save\
          \ the configuration changes to the database\ndoor_sensor.save_entity()\n\
          ```\n\n### 3. Testing\n\nTo test the automation, you can simulate door opening\
          \ and closing using a voice assistant or device that supports interacting\
          \ with Home Assistant.\n\nFor instance, you could have a simple voice assistant\
          \ named \"Alexa\" open and close a speaker connected to your home assistant.\
          \ When Alexa turns on the light switch, it will turn on the speaker.\n\n\
          ### 4. Integration\n\nThis blueprint integrates well with the `light_switch`\
          \ entity for controlling the lights that can be triggered by external events.\n\
          \nRemember, this is just an example blueprint. You may need to adjust the\
          \ parameters based on your specific use case and device capabilities.\n\
          \ \n**Note**: Make sure you have a reliable way to test the automation in\
          \ production before deploying it to a live system.\n  \nPlease let me know\
          \ if you need any further assistance!"
        tool_calls: null
      tools: null
    timestamp: 2025-05-06 00:59:50.942404+00:00
  duration_ms: 18441.38
  tries: 1
