---
uuid: b01ca726-4e36-43ad-a17f-60c38052aa83
task_id: home7_dk_media_player_media_player-skip_to_the_next_track_on_the_outdoor_speakers
category: media-player
task:
  input_text: Skip to the next track on the outdoor speakers
  expect_changes:
    media_player.outdoor_speakers:
      state: null
      attributes:
        media_track: 2
response: The Outdoor Speakers track has been skipped to the next one.
context:
  unexpected_states: {}
  conversation_trace:
  - event_type: async_process
    data:
      text: Skip to the next track on the outdoor speakers
      context:
        id: 01JM6B0TTD234B4GGZS3W1H81Z
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |
          Current time is 18:57:23. Today's date is 2025-02-15.
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
          When controlling Home Assistant always call the intent tools. Use HassTurnOn to lock and HassTurnOff to unlock a lock. When controlling a device, prefer passing just name and domain. When controlling an area, prefer passing just area name and domain.
          When a user asks to turn on all devices of a specific type, ask user to specify an area, unless there is only one device of that type.
          This device is not able to start timers.
          An overview of the areas and the devices in this smart home:
          - names: Outdoor Speakers
            domain: media_player
            state: playing
            areas: Rooftop Terrace
            attributes:
              volume_level: 0.5
              device_class: speaker
      - role: user
        agent_id: conversation.mock_title
        content: Skip to the next track on the outdoor speakers
      - role: assistant
        agent_id: conversation.mock_title
        content: ''
      - role: native
        agent_id: conversation.mock_title
        content:
          role: tool
          tool_call_id: call_Yq8q4puR6IJvBr974FAAyvMf
          content: '{"speech": {}, "response_type": "action_done", "data": {"targets":
            [], "success": [{"name": "Outdoor Speakers", "type": "entity", "id": "media_player.outdoor_speakers"}],
            "failed": []}}'
      - role: assistant
        agent_id: conversation.mock_title
        content: The Outdoor Speakers track has been skipped to the next one.
      tools:
      - name: HassTurnOn
        description: Turns on/opens a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [<function string at 0x7f2abdedc360>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7f2abdececa0>, [In([''awning'', ''blind'', ''curtain'',
          ''damper'', ''door'', ''garage'', ''gate'', ''shade'', ''shutter'', ''window'',
          ''outlet'', ''switch'', ''water'', ''gas'', ''tv'', ''speaker'', ''receiver''])],
          msg=None)}'
      - name: HassTurnOff
        description: Turns off/closes a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [<function string at 0x7f2abdedc360>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7f2abdececa0>, [In([''awning'', ''blind'', ''curtain'',
          ''damper'', ''door'', ''garage'', ''gate'', ''shade'', ''shutter'', ''window'',
          ''outlet'', ''switch'', ''water'', ''gas'', ''tv'', ''speaker'', ''receiver''])],
          msg=None)}'
      - name: HassCancelAllTimers
        description: Cancels all timers
        parameters: '{''area'': <function string at 0x7f2abdedc360>}'
      - name: HassMediaUnpause
        description: Resumes a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7f2abdececa0>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaPause
        description: Pauses a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7f2abdececa0>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaNext
        description: Skips a media player to the next item
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7f2abdececa0>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaPrevious
        description: Replays the previous item for a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7f2abdececa0>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassSetVolume
        description: Sets the volume of a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7f2abbad1bc0>, ''domain'': All(<function ensure_list at 0x7f2abdececa0>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7f2abdececa0>, [In([''tv'', ''speaker'', ''receiver''])], msg=None),
          ''volume_level'': All(Coerce(int, msg=None), Range(min=0, max=100, min_included=True,
          max_included=True, msg=None), <function async_setup_intents.<locals>.<lambda>
          at 0x7f2a90b854e0>, msg=None)}'
  - event_type: tool_call
    data:
      tool_name: HassMediaNext
      tool_args:
        name: Outdoor Speakers
        domain:
        - media_player
  tries: 0
