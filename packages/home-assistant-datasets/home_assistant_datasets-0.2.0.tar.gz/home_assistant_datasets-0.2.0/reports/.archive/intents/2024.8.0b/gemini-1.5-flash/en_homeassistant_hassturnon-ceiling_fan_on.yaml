---
uuid: 47702ae4-2eb3-4e34-8529-aa13aa12ac52
task_id: en_homeassistant_hassturnon-ceiling_fan_on
category: turn_on_off
task:
  input_text: ceiling fan on
  expect_changes:
    fan.ceiling:
      state: 'on'
      attributes: null
response: Ok, I've turned on the ceiling fan.
context:
  unexpected_states: {}
  conversation_trace:
  - event_type: async_process
    data:
      text: ceiling fan on
      context:
        id: 01J4FFW4ET50504TS1CPFPYBKB
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: 01J4FFW4D737TSZ50H655NEYH9
  - event_type: agent_detail
    data:
      messages: []
      prompt: "Current time is 13:04:12. Today's date is 2024-08-04.\nYou are a voice\
        \ assistant for Home Assistant.\nAnswer questions about the world truthfully.\n\
        Answer in plain text. Keep it simple and to the point.\nWhen controlling Home\
        \ Assistant always call the intent tools. Use HassTurnOn to lock and HassTurnOff\
        \ to unlock a lock. When controlling a device, prefer passing just name and\
        \ domain. When controlling an area, prefer passing just area name and domain.\n\
        When a user asks to turn on all devices of a specific type, ask user to specify\
        \ an area, unless there is only one device of that type.\nThis device is not\
        \ able to start timers.\nAn overview of the areas and the devices in this\
        \ smart home:\n- names: Thermostat\n  domain: climate\n  state: heat\n  areas:\
        \ Living Room\n  attributes:\n    current_temperature: 20.0\n- names: Office\
        \ Thermostat\n  domain: climate\n  state: heat\n  areas: Office\n  attributes:\n\
        \    current_temperature: -17.2\n- names: Ceiling Fan\n  domain: fan\n  state:\
        \ 'off'\n  areas: Living Room\n- names: Curtain Left\n  domain: cover\n  state:\
        \ open\n  areas: Living Room\n  attributes:\n    current_position: '100'\n\
        \    device_class: curtain\n- names: Curtain Right\n  domain: cover\n  state:\
        \ closed\n  areas: Living Room\n  attributes:\n    current_position: '0'\n\
        \    device_class: curtain\n- names: Bedroom Curtain\n  domain: cover\n  state:\
        \ closed\n  areas: Bedroom\n  attributes:\n    current_position: '0'\n   \
        \ device_class: curtain\n- names: Phone\n  domain: binary_sensor\n  state:\
        \ 'on'\n  attributes:\n    device_class: battery\n- names: Phone\n  domain:\
        \ binary_sensor\n  state: 'on'\n  attributes:\n    device_class: battery_charging\n\
        - names: CO2\n  domain: binary_sensor\n  state: 'on'\n  areas: Kitchen\n \
        \ attributes:\n    device_class: carbon_monoxide\n- names: Water Pipes\n \
        \ domain: binary_sensor\n  state: 'on'\n  attributes:\n    device_class: cold\n\
        - names: Phone\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n  \
        \  device_class: connectivity\n- names: Pet Door\n  domain: binary_sensor\n\
        \  state: 'on'\n  attributes:\n    device_class: door\n- names: Secondary\
        \ Garage Door\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n   \
        \ device_class: garage_door\n- names: Gas\n  domain: binary_sensor\n  state:\
        \ 'on'\n  areas: Kitchen\n  attributes:\n    device_class: gas\n- names: Computer\n\
        \  domain: binary_sensor\n  state: 'on'\n  attributes:\n    device_class:\
        \ heat\n- names: Light\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n\
        \    device_class: light\n- names: Pet Door\n  domain: binary_sensor\n  state:\
        \ 'on'\n  attributes:\n    device_class: lock\n- names: Kitchen leak sensor\n\
        \  domain: binary_sensor\n  state: 'on'\n  areas: Kitchen\n  attributes:\n\
        \    device_class: moisture\n- names: Motion sensor\n  domain: binary_sensor\n\
        \  state: 'on'\n  areas: Garage\n  attributes:\n    device_class: motion\n\
        - names: Occupancy\n  domain: binary_sensor\n  state: 'on'\n  areas: Kitchen\n\
        \  attributes:\n    device_class: occupancy\n- names: Shed Door\n  domain:\
        \ binary_sensor\n  state: 'on'\n  attributes:\n    device_class: opening\n\
        - names: Phone\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n  \
        \  device_class: plug\n- names: Mains\n  domain: binary_sensor\n  state: 'on'\n\
        \  attributes:\n    device_class: power\n- names: Phone\n  domain: binary_sensor\n\
        \  state: 'on'\n  attributes:\n    device_class: presence\n- names: Pet Feeder\n\
        \  domain: binary_sensor\n  state: 'on'\n  areas: Kitchen\n  attributes:\n\
        \    device_class: problem\n- names: Washer\n  domain: binary_sensor\n  state:\
        \ 'on'\n  attributes:\n    device_class: running\n- names: Road\n  domain:\
        \ binary_sensor\n  state: 'on'\n  attributes:\n    device_class: safety\n\
        - names: Kitchen Smoke\n  domain: binary_sensor\n  state: 'on'\n  areas: Kitchen\n\
        \  attributes:\n    device_class: smoke\n- names: Siren\n  domain: binary_sensor\n\
        \  state: 'on'\n  areas: Garage\n  attributes:\n    device_class: sound\n\
        - names: Cookie Stash\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n\
        \    device_class: tamper\n- names: Phone\n  domain: binary_sensor\n  state:\
        \ 'on'\n  attributes:\n    device_class: update\n- names: Phone\n  domain:\
        \ binary_sensor\n  state: 'on'\n  attributes:\n    device_class: vibration\n\
        - names: Shed Window\n  domain: binary_sensor\n  state: 'on'\n  attributes:\n\
        \    device_class: window\n- names: Bedroom Lamp\n  domain: light\n  state:\
        \ 'off'\n  areas: Bedroom\n  attributes:\n    brightness:\n- names: Kitchen\
        \ countertop\n  domain: light\n  state: 'on'\n  areas: Kitchen\n- names: Kitchen\
        \ ceiling\n  domain: light\n  state: 'on'\n  areas: Kitchen\n- names: Kitchen\
        \ cabinets\n  domain: light\n  state: 'on'\n  areas: Kitchen\n- names: Living\
        \ Room Lamp\n  domain: light\n  state: 'on'\n  areas: Living Room\n- names:\
        \ Garage Light\n  domain: light\n  state: 'on'\n  areas: Garage\n- names:\
        \ Play Corner\n  domain: light\n  state: 'on'\n  areas: Living Room\n- names:\
        \ Front Door\n  domain: lock\n  state: locked\n  areas: Entrance\n- names:\
        \ Back Door\n  domain: lock\n  state: unlocked\n- names: Side Door\n  domain:\
        \ lock\n  state: locked\n- names: TV\n  domain: media_player\n  state: idle\n\
        \  areas: Living Room\n  attributes:\n    volume_level: '50'\n- names: Outside\
        \ Temperature\n  domain: sensor\n  state: '42'\n  areas: Garage\n  attributes:\n\
        \    unit_of_measurement: \xB0F\n- names: Appliance apparent power\n  domain:\
        \ sensor\n  state: '2'\n  attributes:\n    unit_of_measurement: VA\n    device_class:\
        \ apparent_power\n- names: Kitchen air quality sensor\n  domain: sensor\n\
        \  state: '50'\n  attributes:\n    device_class: aqi\n- names: Outside air\
        \ sensor\n  domain: sensor\n  state: '1000'\n  attributes:\n    unit_of_measurement:\
        \ hPa\n    device_class: atmospheric_pressure\n- names: My Phone\n  domain:\
        \ sensor\n  state: '98'\n  attributes:\n    unit_of_measurement: '%'\n   \
        \ device_class: battery\n- names: Heat pump CO2 sensor\n  domain: sensor\n\
        \  state: '50'\n  attributes:\n    unit_of_measurement: ppm\n    device_class:\
        \ carbon_dioxide\n- names: Heat pump CO sensor\n  domain: sensor\n  state:\
        \ '48'\n  attributes:\n    unit_of_measurement: ppm\n    device_class: carbon_monoxide\n\
        - names: House current draw\n  domain: sensor\n  state: '19'\n  attributes:\n\
        \    unit_of_measurement: A\n    device_class: current\n- names: Macrotorrent\n\
        \  domain: sensor\n  state: '22.9'\n  attributes:\n    unit_of_measurement:\
        \ MB/s\n    device_class: data_rate\n- names: Log file\n  domain: sensor\n\
        \  state: '106'\n  attributes:\n    unit_of_measurement: kB\n    device_class:\
        \ data_size\n- names: Next birthday\n  domain: sensor\n  state: '2024-04-01'\n\
        \  attributes:\n    device_class: date\n- names: Car mileage\n  domain: sensor\n\
        \  state: '65536'\n  attributes:\n    unit_of_measurement: km\n    device_class:\
        \ distance\n- names: Dishwasher current program\n  domain: sensor\n  state:\
        \ '64'\n  attributes:\n    unit_of_measurement: min\n    device_class: duration\n\
        - names: Solar production\n  domain: sensor\n  state: '3.2'\n  attributes:\n\
        \    unit_of_measurement: kWh\n    device_class: energy\n- names: Powerwall\
        \ stored energy\n  domain: sensor\n  state: '6'\n  attributes:\n    unit_of_measurement:\
        \ kWh\n    device_class: energy_storage\n- names: Grid AC frequency\n  domain:\
        \ sensor\n  state: '51'\n  attributes:\n    unit_of_measurement: Hz\n    device_class:\
        \ frequency\n- names: Monthly gas consumption\n  domain: sensor\n  state:\
        \ '12'\n  attributes:\n    unit_of_measurement: m\xB3\n    device_class: gas\n\
        - names: Living room humidity\n  domain: sensor\n  state: '48'\n  attributes:\n\
        \    unit_of_measurement: '%'\n    device_class: humidity\n- names: Living\
        \ room illuminance\n  domain: sensor\n  state: '438'\n  attributes:\n    unit_of_measurement:\
        \ lux\n    device_class: illuminance\n- names: Living room heater irradiance\n\
        \  domain: sensor\n  state: '155'\n  attributes:\n    unit_of_measurement:\
        \ W/m\xB2\n    device_class: irradiance\n- names: Brewery mixer\n  domain:\
        \ sensor\n  state: '83'\n  attributes:\n    unit_of_measurement: '%'\n   \
        \ device_class: moisture\n- names: Price per kW\n  domain: sensor\n  state:\
        \ '1'\n  attributes:\n    unit_of_measurement: EUR\n    device_class: monetary\n\
        - names: Heat pump NO2 sensor\n  domain: sensor\n  state: '50'\n  attributes:\n\
        \    unit_of_measurement: \xB5g/m\xB3\n    device_class: nitrogen_dioxide\n\
        - names: Heat pump NO sensor\n  domain: sensor\n  state: '50'\n  attributes:\n\
        \    unit_of_measurement: \xB5g/m\xB3\n    device_class: nitrogen_monoxide\n\
        - names: Heat pump N2O sensor\n  domain: sensor\n  state: '50'\n  attributes:\n\
        \    unit_of_measurement: \xB5g/m\xB3\n    device_class: nitrous_oxide\n-\
        \ names: Living room ozone sensor\n  domain: sensor\n  state: '50'\n  attributes:\n\
        \    unit_of_measurement: \xB5g/m\xB3\n    device_class: ozone\n- names: Living\
        \ room PM1 sensor\n  domain: sensor\n  state: '50'\n  attributes:\n    unit_of_measurement:\
        \ \xB5g/m\xB3\n    device_class: pm1\n- names: Living room PM2.5 sensor\n\
        \  domain: sensor\n  state: '50'\n  attributes:\n    unit_of_measurement:\
        \ \xB5g/m\xB3\n    device_class: pm25\n- names: Living room PM10 sensor\n\
        \  domain: sensor\n  state: '50'\n  attributes:\n    unit_of_measurement:\
        \ \xB5g/m\xB3\n    device_class: pm10\n- names: Wall plug power factor\n \
        \ domain: sensor\n  state: '2'\n  attributes:\n    device_class: power_factor\n\
        - names: Air conditioning power\n  domain: sensor\n  state: '380'\n  attributes:\n\
        \    unit_of_measurement: W\n    device_class: power\n- names: Outside rain\
        \ sensor\n  domain: sensor\n  state: '29'\n  attributes:\n    unit_of_measurement:\
        \ mm\n    device_class: precipitation\n- names: Outside rain sensor\n  domain:\
        \ sensor\n  state: '144'\n  attributes:\n    unit_of_measurement: mm/h\n \
        \   device_class: precipitation_intensity\n- names: Car tyre pressure\n  domain:\
        \ sensor\n  state: '2.1'\n  attributes:\n    unit_of_measurement: bar\n  \
        \  device_class: pressure\n- names: Water pump reactive power\n  domain: sensor\n\
        \  state: '22'\n  attributes:\n    unit_of_measurement: VAR\n    device_class:\
        \ reactive_power\n- names: My phone GSM signal\n  domain: sensor\n  state:\
        \ '-43'\n  attributes:\n    unit_of_measurement: dBm\n    device_class: signal_strength\n\
        - names: Sound bar acoustic pressure\n  domain: sensor\n  state: '62'\n  attributes:\n\
        \    unit_of_measurement: dB\n    device_class: sound_pressure\n- names: Travelling\
        \ speed\n  domain: sensor\n  state: '67'\n  attributes:\n    unit_of_measurement:\
        \ km/h\n    device_class: speed\n- names: Heat pump SO2 sensor\n  domain:\
        \ sensor\n  state: '50'\n  attributes:\n    unit_of_measurement: \xB5g/m\xB3\
        \n    device_class: sulphur_dioxide\n- names: Furnace\n  domain: sensor\n\
        \  state: '380'\n  attributes:\n    unit_of_measurement: \xB0C\n    device_class:\
        \ temperature\n- names: Poo poo sensor\n  domain: sensor\n  state: '35'\n\
        \  attributes:\n    unit_of_measurement: \xB5g/m\xB3\n    device_class: volatile_organic_compounds\n\
        - names: Poo poo sensor 2\n  domain: sensor\n  state: '35'\n  attributes:\n\
        \    unit_of_measurement: ppm\n    device_class: volatile_organic_compounds_parts\n\
        - names: Input voltage\n  domain: sensor\n  state: '12'\n  attributes:\n \
        \   unit_of_measurement: V\n    device_class: voltage\n- names: Water pump\
        \ usage today\n  domain: sensor\n  state: '1356'\n  attributes:\n    unit_of_measurement:\
        \ L\n    device_class: volume\n- names: Water pump buffer\n  domain: sensor\n\
        \  state: '28'\n  attributes:\n    unit_of_measurement: L\n    device_class:\
        \ volume_storage\n- names: Water pump usage\n  domain: sensor\n  state: '5987'\n\
        \  attributes:\n    unit_of_measurement: L\n    device_class: water\n- names:\
        \ Bed sensor weight\n  domain: sensor\n  state: '87'\n  attributes:\n    unit_of_measurement:\
        \ kg\n    device_class: weight\n- names: Mistral\n  domain: sensor\n  state:\
        \ '33'\n  attributes:\n    unit_of_measurement: km/h\n    device_class: wind_speed\n\
        - names: London\n  domain: weather\n  state: ('rainy',)\n  attributes:\n \
        \   temperature: 8.3\n    temperature_unit: \xB0C\n- names: Los Angeles\n\
        \  domain: weather\n  state: ('clear',)\n  attributes:\n    temperature: 24.4\n\
        \    temperature_unit: \xB0C\n- names: Trader Joe's\n  domain: todo\n  state:\
        \ '0'\n- names: Bedroom Switch\n  domain: switch\n  state: 'off'\n  areas:\
        \ Bedroom\n- names: Kitchen Switch\n  domain: switch\n  state: 'on'\n  areas:\
        \ Kitchen\n- names: Rover\n  domain: vacuum\n  state: idle\n- names: Main\
        \ Valve\n  domain: valve\n  state: open\n  attributes:\n    current_position:\
        \ '100'\n"
      tools:
      - name: HassTurnOn
        description: Turns on/opens a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7fb168c17b00>, [In([''awning'', ''blind'', ''curtain'',
          ''damper'', ''door'', ''garage'', ''gate'', ''shade'', ''shutter'', ''window'',
          ''outlet'', ''switch'', ''tv'', ''speaker'', ''receiver'', ''water'', ''gas''])],
          msg=None)}'
      - name: HassTurnOff
        description: Turns off/closes a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7fb168c17b00>, [In([''awning'', ''blind'', ''curtain'',
          ''damper'', ''door'', ''garage'', ''gate'', ''shade'', ''shutter'', ''window'',
          ''outlet'', ''switch'', ''tv'', ''speaker'', ''receiver'', ''water'', ''gas''])],
          msg=None)}'
      - name: HassSetPosition
        description: Sets the position of a device or entity
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None), ''device_class'': All(<function
          ensure_list at 0x7fb168c17b00>, [In([''awning'', ''blind'', ''curtain'',
          ''damper'', ''door'', ''garage'', ''gate'', ''shade'', ''shutter'', ''window'',
          ''water'', ''gas''])], msg=None), ''position'': All(Coerce(int, msg=None),
          Range(min=0, max=100, min_included=True, max_included=True, msg=None), msg=None)}'
      - name: HassLightSet
        description: Sets the brightness or color of a light
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None), ''color'': <function color_name_to_rgb
          at 0x7fb1671aad40>, ''temperature'': All(Coerce(int, msg=None), Range(min=0,
          max=None, min_included=True, max_included=True, msg=None), msg=None), ''brightness'':
          All(Coerce(int, msg=None), Range(min=0, max=100, min_included=True, max_included=True,
          msg=None), msg=None)}'
      - name: HassMediaUnpause
        description: Resumes a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7fb168c17b00>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaPause
        description: Pauses a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7fb168c17b00>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaNext
        description: Skips a media player to the next item
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7fb168c17b00>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassMediaPrevious
        description: Replays the previous item for a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7fb168c17b00>, [In([''tv'', ''speaker'', ''receiver''])], msg=None)}'
      - name: HassSetVolume
        description: Sets the volume of a media player
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [In([''media_player''])], msg=None), ''device_class'': All(<function ensure_list
          at 0x7fb168c17b00>, [In([''tv'', ''speaker'', ''receiver''])], msg=None),
          ''volume_level'': All(Coerce(int, msg=None), Range(min=0, max=100, min_included=True,
          max_included=True, msg=None), <function async_setup_intents.<locals>.<lambda>
          at 0x7fb163d7d940>, msg=None)}'
      - name: HassListAddItem
        description: Add item to a todo list
        parameters: '{''item'': <function non_empty_string at 0x7fb16709fe20>, ''name'':
          <function non_empty_string at 0x7fb16709fe20>}'
      - name: HassVacuumStart
        description: Starts a vacuum
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None)}'
      - name: HassVacuumReturnToBase
        description: Returns a vacuum to base
        parameters: '{Any(''name'', ''area'', ''floor'', msg=None): <function non_empty_string
          at 0x7fb16709fe20>, ''domain'': All(<function ensure_list at 0x7fb168c17b00>,
          [<function string at 0x7fb168c29300>], msg=None)}'
  - event_type: tool_call
    data:
      tool_name: HassTurnOn
      tool_args:
        domain:
        - fan
        name: Ceiling Fan
