---
uuid: f45b42c5-38ec-4474-87a6-149731c7ce0b
task_id: light_on_door_light_on_door-light_on_door-2
model_id: null
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  blueprint:
    name: Turn on light when door opens
    description: Automatically turn on a light when a door opens, and turn it off after the door closes or a timeout.
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: Binary sensor that detects when the door opens/closes.
        selector:
          entity:
            domain: binary_sensor
      light_switch:
        name: Light Switch
        description: One or more lights to control.
        selector:
          entity:
            domain: light
            multiple: true

    # This automation will trigger when the door opens
    trigger:
      platform: state
      entity_id: !input door_sensor
      to: 'open'

    # Turn the light on when the door opens
    action:
      - service: light.turn_on
        target: !input light_switch

    # Turn the light off when the door closes
    - wait_for_trigger:
        platform: state
        entity_id: !input door_sensor
        to: 'closed'
      action:
        service: light.turn_off
        target: !input light_switch

    # Turn the light off after 2 minutes if the door is still open
    - wait_for_trigger:
        platform: time
        after: '00:02:00'
      action:
        service: light.turn_off
        target: !input light_switch
  ```

  This blueprint sets up an automation that triggers when the door sensor detects the door opening. When this happens, it turns on the specified light(s).

  The automation then waits for two triggers:
  1. The door sensor detecting the door closing - when this happens, it turns the light(s) off.
  2. A 2 minute timer - if the door is still open after 2 minutes, it turns the light(s) off.

  This ensures the light is turned on when the door opens, and turned off either when the door closes or after a 2 minute timeout if the door is left open.

  The blueprint takes two inputs:
  1. `door_sensor`: The binary sensor that detects when the door opens and closes.
  2. `light_switch`: One or more light entities to control.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMTN746QY8W1WE9GZ6RR4GT1
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:20:23. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            blueprint:
              name: Turn on light when door opens
              description: Automatically turn on a light when a door opens, and turn it off after the door closes or a timeout.
              domain: automation
              input:
                door_sensor:
                  name: Door Sensor
                  description: Binary sensor that detects when the door opens/closes.
                  selector:
                    entity:
                      domain: binary_sensor
                light_switch:
                  name: Light Switch
                  description: One or more lights to control.
                  selector:
                    entity:
                      domain: light
                      multiple: true

              # This automation will trigger when the door opens
              trigger:
                platform: state
                entity_id: !input door_sensor
                to: 'open'

              # Turn the light on when the door opens
              action:
                - service: light.turn_on
                  target: !input light_switch

              # Turn the light off when the door closes
              - wait_for_trigger:
                  platform: state
                  entity_id: !input door_sensor
                  to: 'closed'
                action:
                  service: light.turn_off
                  target: !input light_switch

              # Turn the light off after 2 minutes if the door is still open
              - wait_for_trigger:
                  platform: time
                  after: '00:02:00'
                action:
                  service: light.turn_off
                  target: !input light_switch
            ```

            This blueprint sets up an automation that triggers when the door sensor detects the door opening. When this happens, it turns on the specified light(s).

            The automation then waits for two triggers:
            1. The door sensor detecting the door closing - when this happens, it turns the light(s) off.
            2. A 2 minute timer - if the door is still open after 2 minutes, it turns the light(s) off.

            This ensures the light is turned on when the door opens, and turned off either when the door closes or after a 2 minute timeout if the door is left open.

            The blueprint takes two inputs:
            1. `door_sensor`: The binary sensor that detects when the door opens and closes.
            2. `light_switch`: One or more light entities to control.
  tries: 0
