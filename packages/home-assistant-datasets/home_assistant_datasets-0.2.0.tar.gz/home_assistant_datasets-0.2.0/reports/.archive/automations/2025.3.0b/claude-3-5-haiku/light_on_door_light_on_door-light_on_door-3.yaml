---
uuid: 5cd47acc-d1ec-4d07-9fc2-f0e46ab21d1f
task_id: light_on_door_light_on_door-light_on_door-3
model_id: null
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  ```yaml
  # Home Assistant Blueprint: Door Light Automation
  # This blueprint turns on a light when a door opens and automatically turns it off

  blueprint:
    name: Door Light Automation
    description: Turns on a light when a door opens and turns it off after closing or a timeout
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: Binary sensor that detects door state
        selector:
          entity:
            domain: binary_sensor
      light_switch:
        name: Light
        description: Light to turn on when door opens
        selector:
          entity:
            domain: light

  trigger:
    - platform: state
      entity_id: !input door_sensor
      from: 'off'
      to: 'on'

  action:
    - service: light.turn_on
      target:
        entity_id: !input light_switch

    - wait_for_trigger:
        - platform: state
          entity_id: !input door_sensor
          from: 'on'
          to: 'off'
        - platform: time
          hours: 0
          minutes: 2

    - service: light.turn_off
      target:
        entity_id: !input light_switch

  mode: single
  max_exceeded: silent
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMTMVZ3ZBCXRYEG0S9Q9F8AA
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:14:18. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            # Home Assistant Blueprint: Door Light Automation
            # This blueprint turns on a light when a door opens and automatically turns it off

            blueprint:
              name: Door Light Automation
              description: Turns on a light when a door opens and turns it off after closing or a timeout
              domain: automation
              input:
                door_sensor:
                  name: Door Sensor
                  description: Binary sensor that detects door state
                  selector:
                    entity:
                      domain: binary_sensor
                light_switch:
                  name: Light
                  description: Light to turn on when door opens
                  selector:
                    entity:
                      domain: light

            trigger:
              - platform: state
                entity_id: !input door_sensor
                from: 'off'
                to: 'on'

            action:
              - service: light.turn_on
                target:
                  entity_id: !input light_switch

              - wait_for_trigger:
                  - platform: state
                    entity_id: !input door_sensor
                    from: 'on'
                    to: 'off'
                  - platform: time
                    hours: 0
                    minutes: 2

              - service: light.turn_off
                target:
                  entity_id: !input light_switch

            mode: single
            max_exceeded: silent
            ```
  tries: 0
