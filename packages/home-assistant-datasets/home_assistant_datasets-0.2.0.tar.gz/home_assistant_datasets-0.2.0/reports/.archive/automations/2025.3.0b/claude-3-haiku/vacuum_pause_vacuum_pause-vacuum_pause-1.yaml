---
uuid: b1676827-0086-4c96-bd9f-bc4c72c7ec22
task_id: vacuum_pause_vacuum_pause-vacuum_pause-1
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: "```yaml\nblueprint:\n  name: Vacuum Pause\n  description: Pause the vacuum\
  \ when a phone call is received.\n  domain: automation\n  input:\n    phone_call_sensor:\n\
  \      name: Phone Call Sensor\n      description: Binary sensor that triggers when\
  \ a phone call is received.\n      selector:\n        entity:\n          domain:\
  \ binary_sensor\n    vacuum_entity:\n      name: Vacuum Entity\n      description:\
  \ The vacuum entity to pause.\n      selector:\n        entity:\n          domain:\
  \ vacuum\n\ntrigger:\n  platform: state\n  entity_id: !input phone_call_sensor\n\
  \  to: 'on'\n\ncondition:\n  condition: and\n  conditions:\n    - condition: state\n\
  \      entity_id: !input vacuum_entity\n      state: 'cleaning'\n\naction:\n  -\
  \ service: vacuum.pause\n    target:\n      entity_id: !input vacuum_entity\n  -\
  \ delay: 00:00:30 # Pause for 30 seconds\n\n# The automation will trigger when the\
  \ phone call sensor turns on, and the vacuum is currently cleaning.\n# It will pause\
  \ the vacuum for 30 seconds, allowing the user to take the call. The vacuum can\
  \ then be \n# manually resumed afterwards.\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTN8A9ADMPSY228MM3HD51E
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:21:02. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        content:
        - type: text
          text: "```yaml\nblueprint:\n  name: Vacuum Pause\n  description: Pause the\
            \ vacuum when a phone call is received.\n  domain: automation\n  input:\n\
            \    phone_call_sensor:\n      name: Phone Call Sensor\n      description:\
            \ Binary sensor that triggers when a phone call is received.\n      selector:\n\
            \        entity:\n          domain: binary_sensor\n    vacuum_entity:\n\
            \      name: Vacuum Entity\n      description: The vacuum entity to pause.\n\
            \      selector:\n        entity:\n          domain: vacuum\n\ntrigger:\n\
            \  platform: state\n  entity_id: !input phone_call_sensor\n  to: 'on'\n\
            \ncondition:\n  condition: and\n  conditions:\n    - condition: state\n\
            \      entity_id: !input vacuum_entity\n      state: 'cleaning'\n\naction:\n\
            \  - service: vacuum.pause\n    target:\n      entity_id: !input vacuum_entity\n\
            \  - delay: 00:00:30 # Pause for 30 seconds\n\n# The automation will trigger\
            \ when the phone call sensor turns on, and the vacuum is currently cleaning.\n\
            # It will pause the vacuum for 30 seconds, allowing the user to take the\
            \ call. The vacuum can then be \n# manually resumed afterwards.\n```"
  tries: 0
