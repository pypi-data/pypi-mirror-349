---
uuid: 0d78407a-ee6c-4e1e-8a1a-329f0253c509
task_id: light_on_door_light_on_door-light_on_door-0
model_id: null
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: "```yaml\nblueprint:\n  name: Light on Door Open\n  description: Turn on\
  \ a light when a door opens and turn it off when the door closes or after 2 minutes.\n\
  \  domain: automation\n  input:\n    door_sensor:\n      name: Door Sensor\n   \
  \   description: The binary sensor that triggers the automation.\n      selector:\n\
  \        entity:\n          domain: binary_sensor\n    light_switch:\n      name:\
  \ Light Switch\n      description: Light(s) to turn on when the door opens.\n  \
  \    selector:\n        target:\n          entity:\n            domain: light\n\n\
  trigger:\n  - platform: state\n    entity_id: !input door_sensor\n    from: 'off'\n\
  \    to: 'on'\n\naction:\n  - service: light.turn_on\n    target: !input light_switch\n\
  \n  - wait_for_trigger:\n      - platform: state\n        entity_id: !input door_sensor\n\
  \        from: 'on'\n        to: 'off'\n    timeout: '00:02:00'\n\n  - service:\
  \ light.turn_off\n    target: !input light_switch\n\nmode: restart\n```\n\n### Explanation\n\
  \n- **Blueprint Metadata**: The blueprint contains metadata like name, description,\
  \ and domain which are essential for identifying the purpose and scope of the blueprint\
  \ within Home Assistant.\n\n- **Inputs**: The blueprint defines two inputs:\n  -\
  \ `door_sensor`: This represents the binary sensor for the door. The automation\
  \ begins when this sensor detects an \"on\" state (door open).\n  - `light_switch`:\
  \ This targets the light entity/entities to be turned on when the door opens.\n\n\
  - **Trigger**: The automation triggers when the state of the specified door sensor\
  \ changes from 'off' to 'on', indicating the door is opened.\n\n- **Actions**: The\
  \ action sequence consists of:\n  - Turning on the specified light(s) when the door\
  \ opens.\n  - Waiting for a trigger indicating the door has closed (state changes\
  \ from 'on' to 'off') or for a timeout period of 2 minutes, whichever comes first.\n\
  \  - Turning off the specified light(s) either when the door closes or after a 2-minute\
  \ timeout. \n\n- **Mode**: The `restart` mode is used here to ensure that if the\
  \ automation is triggered again while it's already running, it will start over.\
  \ This ensures that, if the door is opened again within the 2-minute period, the\
  \ timer resets and the light remains on.\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JMTPDGNM4PA12FK1ZQVBS0BE
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 16:41:21. Today's date is 2025-02-23.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\nblueprint:\n  name: Light on Door Open\n  description:\
          \ Turn on a light when a door opens and turn it off when the door closes\
          \ or after 2 minutes.\n  domain: automation\n  input:\n    door_sensor:\n\
          \      name: Door Sensor\n      description: The binary sensor that triggers\
          \ the automation.\n      selector:\n        entity:\n          domain: binary_sensor\n\
          \    light_switch:\n      name: Light Switch\n      description: Light(s)\
          \ to turn on when the door opens.\n      selector:\n        target:\n  \
          \        entity:\n            domain: light\n\ntrigger:\n  - platform: state\n\
          \    entity_id: !input door_sensor\n    from: 'off'\n    to: 'on'\n\naction:\n\
          \  - service: light.turn_on\n    target: !input light_switch\n\n  - wait_for_trigger:\n\
          \      - platform: state\n        entity_id: !input door_sensor\n      \
          \  from: 'on'\n        to: 'off'\n    timeout: '00:02:00'\n\n  - service:\
          \ light.turn_off\n    target: !input light_switch\n\nmode: restart\n```\n\
          \n### Explanation\n\n- **Blueprint Metadata**: The blueprint contains metadata\
          \ like name, description, and domain which are essential for identifying\
          \ the purpose and scope of the blueprint within Home Assistant.\n\n- **Inputs**:\
          \ The blueprint defines two inputs:\n  - `door_sensor`: This represents\
          \ the binary sensor for the door. The automation begins when this sensor\
          \ detects an \"on\" state (door open).\n  - `light_switch`: This targets\
          \ the light entity/entities to be turned on when the door opens.\n\n- **Trigger**:\
          \ The automation triggers when the state of the specified door sensor changes\
          \ from 'off' to 'on', indicating the door is opened.\n\n- **Actions**: The\
          \ action sequence consists of:\n  - Turning on the specified light(s) when\
          \ the door opens.\n  - Waiting for a trigger indicating the door has closed\
          \ (state changes from 'on' to 'off') or for a timeout period of 2 minutes,\
          \ whichever comes first.\n  - Turning off the specified light(s) either\
          \ when the door closes or after a 2-minute timeout. \n\n- **Mode**: The\
          \ `restart` mode is used here to ensure that if the automation is triggered\
          \ again while it's already running, it will start over. This ensures that,\
          \ if the door is opened again within the 2-minute period, the timer resets\
          \ and the light remains on.\n```"
      tools: null
  tries: 0
