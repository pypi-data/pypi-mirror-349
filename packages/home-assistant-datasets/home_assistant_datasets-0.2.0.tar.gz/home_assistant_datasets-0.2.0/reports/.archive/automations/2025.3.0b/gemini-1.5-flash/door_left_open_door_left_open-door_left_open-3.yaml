---
uuid: 3806858e-9273-427c-8f4a-b9af5b4d30ab
task_id: door_left_open_door_left_open-door_left_open-3
model_id: null
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: |-
  ```yaml
  alias: Door Left Open Alert
  description: Plays an alert when a door is left open for a specified duration.
  use_blueprint:
    path: blueprint.yaml
    input:
      door_sensor: sensor.garage_door
      alert_media:
        media_player: media_player.living_room_speaker
        media_content_id: !include /config/media/door_alert.mp3
      open_duration: "00:30:00"

  ```
  ```yaml
  blueprint:
    name: Door Left Open Alert
    domain: automation
    input:
      door_sensor:
        name: Door Sensor
        description: The binary sensor that triggers the automation.
        selector:
          entity:
            domain: binary_sensor
            device_class: door
      alert_media:
        name: Alert Media
        description: The media player and media to play.
        selector:
          media:
            type: select
      open_duration:
        name: Open Duration
        description: The duration the door must be open before the alert plays.
        selector:
          duration:
            min: 00:00:05
  variables:
    door_is_open: >
      {{ is_state(input.door_sensor, 'on') }}

  trigger:
    - platform: state
      entity_id: '{{ input.door_sensor }}'
      from: 'off'
      to: 'on'

  condition:
    - condition: state
      entity_id: '{{ input.door_sensor }}'
      state: 'on'
      for: '{{ input.open_duration }}'

  action:
    - service: media_player.play_media
      data:
        media_content_id: '{{ input.alert_media.media_content_id }}'
        media_content_type: 'music'
      target:
        media_player_id: '{{ input.alert_media.media_player }}'

  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JMTNACCCK89ZG9GP0B511K12
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 16:22:10. Today's date is 2025-02-23.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          alias: Door Left Open Alert
          description: Plays an alert when a door is left open for a specified duration.
          use_blueprint:
            path: blueprint.yaml
            input:
              door_sensor: sensor.garage_door
              alert_media:
                media_player: media_player.living_room_speaker
                media_content_id: !include /config/media/door_alert.mp3
              open_duration: "00:30:00"

          ```
          ```yaml
          blueprint:
            name: Door Left Open Alert
            domain: automation
            input:
              door_sensor:
                name: Door Sensor
                description: The binary sensor that triggers the automation.
                selector:
                  entity:
                    domain: binary_sensor
                    device_class: door
              alert_media:
                name: Alert Media
                description: The media player and media to play.
                selector:
                  media:
                    type: select
              open_duration:
                name: Open Duration
                description: The duration the door must be open before the alert plays.
                selector:
                  duration:
                    min: 00:00:05
          variables:
            door_is_open: >
              {{ is_state(input.door_sensor, 'on') }}

          trigger:
            - platform: state
              entity_id: '{{ input.door_sensor }}'
              from: 'off'
              to: 'on'

          condition:
            - condition: state
              entity_id: '{{ input.door_sensor }}'
              state: 'on'
              for: '{{ input.open_duration }}'

          action:
            - service: media_player.play_media
              data:
                media_content_id: '{{ input.alert_media.media_content_id }}'
                media_content_type: 'music'
              target:
                media_player_id: '{{ input.alert_media.media_player }}'

          ```
      tools: null
  tries: 0
