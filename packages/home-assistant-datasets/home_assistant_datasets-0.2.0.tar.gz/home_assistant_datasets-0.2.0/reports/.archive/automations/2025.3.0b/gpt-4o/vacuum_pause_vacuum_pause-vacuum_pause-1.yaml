---
uuid: 58eb9f16-34fc-434c-9072-ec78a4d21b7b
task_id: vacuum_pause_vacuum_pause-vacuum_pause-1
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: "```yaml\nblueprint:\n  name: Pause Vacuum on Phone Call\n  description:\
  \ >\n    This blueprint pauses the vacuum cleaner when a phone call is received,\
  \ based \n    on a specified binary sensor. Use this to avoid vacuum noise during\
  \ important calls.\n  domain: automation\n  input:\n    phone_call_sensor:\n   \
  \   name: Phone Call Sensor\n      description: A binary sensor that triggers when\
  \ a phone call is received.\n      selector:\n        entity:\n          domain:\
  \ binary_sensor\n    vacuum_entity:\n      name: Vacuum Cleaner\n      description:\
  \ The vacuum entity to pause when a phone call is received.\n      selector:\n \
  \       entity:\n          domain: vacuum\n\nmode: single\n\ntrigger:\n  - platform:\
  \ state\n    entity_id: !input phone_call_sensor\n    to: 'on'\n\ncondition:\n \
  \ - condition: device\n    type: is_on\n    entity_id: !input vacuum_entity\n\n\
  action:\n  - service: vacuum.pause\n    target:\n      entity_id: !input vacuum_entity\n\
  ```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTPGQTVDRMP29MJBTDHAMCD
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 16:43:07. Today's date is 2025-02-23.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\nblueprint:\n  name: Pause Vacuum on Phone Call\n  description:\
          \ >\n    This blueprint pauses the vacuum cleaner when a phone call is received,\
          \ based \n    on a specified binary sensor. Use this to avoid vacuum noise\
          \ during important calls.\n  domain: automation\n  input:\n    phone_call_sensor:\n\
          \      name: Phone Call Sensor\n      description: A binary sensor that\
          \ triggers when a phone call is received.\n      selector:\n        entity:\n\
          \          domain: binary_sensor\n    vacuum_entity:\n      name: Vacuum\
          \ Cleaner\n      description: The vacuum entity to pause when a phone call\
          \ is received.\n      selector:\n        entity:\n          domain: vacuum\n\
          \nmode: single\n\ntrigger:\n  - platform: state\n    entity_id: !input phone_call_sensor\n\
          \    to: 'on'\n\ncondition:\n  - condition: device\n    type: is_on\n  \
          \  entity_id: !input vacuum_entity\n\naction:\n  - service: vacuum.pause\n\
          \    target:\n      entity_id: !input vacuum_entity\n```"
      tools: null
  tries: 0
