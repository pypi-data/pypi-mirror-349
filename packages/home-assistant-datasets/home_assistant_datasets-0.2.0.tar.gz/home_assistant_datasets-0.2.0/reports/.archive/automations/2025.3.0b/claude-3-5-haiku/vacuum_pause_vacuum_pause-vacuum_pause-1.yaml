---
uuid: 8a096630-bbb7-4780-8a11-7bd35c65ac60
task_id: vacuum_pause_vacuum_pause-vacuum_pause-1
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  ```yaml
  blueprint:
    name: Pause Vacuum During Phone Call
    description: Automatically pause a vacuum cleaner when a phone call is received
    domain: automation
    input:
      phone_call_sensor:
        name: Phone Call Sensor
        description: Binary sensor that indicates an incoming or active phone call
        selector:
          entity:
            domain: binary_sensor
      vacuum_entity:
        name: Vacuum Cleaner
        description: Vacuum entity to pause during phone calls
        selector:
          entity:
            domain: vacuum

  trigger:
    # Trigger when phone call sensor turns on/becomes active
    - platform: state
      entity_id: !input phone_call_sensor
      to: 'on'

  condition:
    # Only pause the vacuum if it is currently running
    - condition: state
      entity_id: !input vacuum_entity
      state: 'cleaning'

  action:
    # Pause the vacuum when the phone call starts
    - service: vacuum.pause
      target:
        entity_id: !input vacuum_entity

  mode: single
  max_exceeded: silent
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTMXTJ97VQ431G436M0VCGS
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:15:19. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            blueprint:
              name: Pause Vacuum During Phone Call
              description: Automatically pause a vacuum cleaner when a phone call is received
              domain: automation
              input:
                phone_call_sensor:
                  name: Phone Call Sensor
                  description: Binary sensor that indicates an incoming or active phone call
                  selector:
                    entity:
                      domain: binary_sensor
                vacuum_entity:
                  name: Vacuum Cleaner
                  description: Vacuum entity to pause during phone calls
                  selector:
                    entity:
                      domain: vacuum

            trigger:
              # Trigger when phone call sensor turns on/becomes active
              - platform: state
                entity_id: !input phone_call_sensor
                to: 'on'

            condition:
              # Only pause the vacuum if it is currently running
              - condition: state
                entity_id: !input vacuum_entity
                state: 'cleaning'

            action:
              # Pause the vacuum when the phone call starts
              - service: vacuum.pause
                target:
                  entity_id: !input vacuum_entity

            mode: single
            max_exceeded: silent
            ```
  tries: 0
