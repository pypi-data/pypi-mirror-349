---
uuid: e43ad74b-d7d4-439e-9b54-621152137ff0
task_id: vacuum_pause_vacuum_pause-vacuum_pause-0
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: "```yaml\n# Vacuum Pause Blueprint\n# Automatically pauses a vacuum cleaner\
  \ when a phone call is received\n\nblueprint:\n  name: Vacuum Pause on Phone Call\n\
  \  description: Pause the vacuum cleaner when a phone call is detected\n  domain:\
  \ automation\n  \n  # Define input parameters for the blueprint\n  input:\n    phone_call_sensor:\n\
  \      name: Phone Call Sensor\n      description: Binary sensor that indicates\
  \ an active phone call\n      selector:\n        entity:\n          domain: binary_sensor\n\
  \n    vacuum_entity:\n      name: Vacuum Cleaner\n      description: Vacuum cleaner\
  \ entity to pause during phone calls\n      selector:\n        entity:\n       \
  \   domain: vacuum\n\n# Automation trigger and conditions\ntrigger:\n  - platform:\
  \ state\n    entity_id: !input phone_call_sensor\n    to: 'on'\n\n# Conditions to\
  \ ensure the vacuum is currently running\ncondition:\n  - condition: state\n   \
  \ entity_id: !input vacuum_entity\n    state: \n      - 'cleaning'\n      - 'returning'\n\
  \n# Actions to take when trigger and conditions are met\naction:\n  - service: vacuum.pause\n\
  \    target:\n      entity_id: !input vacuum_entity\n\n# Optional mode to prevent\
  \ multiple simultaneous triggers\nmode: single\nmax_exceeded: silent\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTMXMFCACC00PBBZAC7MPK4
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:15:12. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        content:
        - type: text
          text: "```yaml\n# Vacuum Pause Blueprint\n# Automatically pauses a vacuum\
            \ cleaner when a phone call is received\n\nblueprint:\n  name: Vacuum\
            \ Pause on Phone Call\n  description: Pause the vacuum cleaner when a\
            \ phone call is detected\n  domain: automation\n  \n  # Define input parameters\
            \ for the blueprint\n  input:\n    phone_call_sensor:\n      name: Phone\
            \ Call Sensor\n      description: Binary sensor that indicates an active\
            \ phone call\n      selector:\n        entity:\n          domain: binary_sensor\n\
            \n    vacuum_entity:\n      name: Vacuum Cleaner\n      description: Vacuum\
            \ cleaner entity to pause during phone calls\n      selector:\n      \
            \  entity:\n          domain: vacuum\n\n# Automation trigger and conditions\n\
            trigger:\n  - platform: state\n    entity_id: !input phone_call_sensor\n\
            \    to: 'on'\n\n# Conditions to ensure the vacuum is currently running\n\
            condition:\n  - condition: state\n    entity_id: !input vacuum_entity\n\
            \    state: \n      - 'cleaning'\n      - 'returning'\n\n# Actions to\
            \ take when trigger and conditions are met\naction:\n  - service: vacuum.pause\n\
            \    target:\n      entity_id: !input vacuum_entity\n\n# Optional mode\
            \ to prevent multiple simultaneous triggers\nmode: single\nmax_exceeded:\
            \ silent\n```"
  tries: 0
