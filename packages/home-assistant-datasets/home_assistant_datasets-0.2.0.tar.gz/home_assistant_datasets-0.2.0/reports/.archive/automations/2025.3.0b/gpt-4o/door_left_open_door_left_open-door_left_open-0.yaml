---
uuid: d484d760-1c87-4954-a440-1fbfe66ba4e8
task_id: door_left_open_door_left_open-door_left_open-0
model_id: null
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response: "```yaml\nblueprint:\n  name: Door Left Open Alert\n  description: Play\
  \ an alert on the selected speaker if the door is left open for a specified duration.\n\
  \  domain: automation\n  input:\n    door_sensor:\n      name: Door Sensor\n   \
  \   description: The binary sensor for the door this automation will monitor.\n\
  \      selector:\n        entity:\n          domain: binary_sensor\n          device_class:\
  \ door\n    open_duration:\n      name: Open Duration\n      description: The time\
  \ duration the door needs to be open before the alert is triggered.\n      selector:\n\
  \        duration:\n    alert_media:\n      name: Alert Media\n      description:\
  \ The media player and the media to play when the door is left open.\n      selector:\n\
  \        media:\n          entity: media_player\n\ntrigger:\n  - platform: state\n\
  \    entity_id: !input door_sensor\n    to: 'on'\n    for: !input open_duration\n\
  \naction:\n  - service: media_player.play_media\n    target:\n      entity_id: !input\
  \ alert_media\n    data:\n      media_content_id: !input alert_media\n      media_content_type:\
  \ music\n      \nmode: single\n```\n\nHere is how the blueprint is structured:\n\
  \n- First, we define the blueprint metadata and descriptions. This helps users understand\
  \ what this blueprint does.\n- Next, we define the `input` section, which allows\
  \ the user to select a door sensor, the alert media, and the duration the door should\
  \ be left open before triggering an alert.\n  - For `door_sensor`, we use an `entity`\
  \ selector for `binary_sensor` with a `device_class` of `door`.\n  - For `open_duration`,\
  \ we use a `duration` selector which allows users to specify a time duration.\n\
  \  - For `alert_media`, we use a `media` selector, which allows users to select\
  \ a media player and media content.\n- The `trigger` is set to activate when the\
  \ specified door sensor changes to 'on' (implying open) and remains in that state\
  \ for the duration specified by `open_duration`.\n- The `action` then uses `media_player.play_media`\
  \ to play the selected alert media.\n- Finally, `mode: single` is set to ensure\
  \ that this automation does not run multiple overlapping instances which can lead\
  \ to duplicated alerts.\n```"
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Door left open

        ## Problem statement

        Create an blueprint automation to play an alert on the speaker when the door is
        left open.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
        - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input           | Selector Type | Description                                                                           |
        | --------------- | ------------- | ------------------------------------------------------------------------------------- |
        | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
        | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
        | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

        The automation should play the selected media when the door has been open for the specified duration.
      context:
        id: 01JMTPF22TJQ9V1SKHTP2HD0Z0
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 16:42:12. Today's date is 2025-02-23.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
      - role: assistant
        agent_id: conversation.mock_title
        content: "```yaml\nblueprint:\n  name: Door Left Open Alert\n  description:\
          \ Play an alert on the selected speaker if the door is left open for a specified\
          \ duration.\n  domain: automation\n  input:\n    door_sensor:\n      name:\
          \ Door Sensor\n      description: The binary sensor for the door this automation\
          \ will monitor.\n      selector:\n        entity:\n          domain: binary_sensor\n\
          \          device_class: door\n    open_duration:\n      name: Open Duration\n\
          \      description: The time duration the door needs to be open before the\
          \ alert is triggered.\n      selector:\n        duration:\n    alert_media:\n\
          \      name: Alert Media\n      description: The media player and the media\
          \ to play when the door is left open.\n      selector:\n        media:\n\
          \          entity: media_player\n\ntrigger:\n  - platform: state\n    entity_id:\
          \ !input door_sensor\n    to: 'on'\n    for: !input open_duration\n\naction:\n\
          \  - service: media_player.play_media\n    target:\n      entity_id: !input\
          \ alert_media\n    data:\n      media_content_id: !input alert_media\n \
          \     media_content_type: music\n      \nmode: single\n```\n\nHere is how\
          \ the blueprint is structured:\n\n- First, we define the blueprint metadata\
          \ and descriptions. This helps users understand what this blueprint does.\n\
          - Next, we define the `input` section, which allows the user to select a\
          \ door sensor, the alert media, and the duration the door should be left\
          \ open before triggering an alert.\n  - For `door_sensor`, we use an `entity`\
          \ selector for `binary_sensor` with a `device_class` of `door`.\n  - For\
          \ `open_duration`, we use a `duration` selector which allows users to specify\
          \ a time duration.\n  - For `alert_media`, we use a `media` selector, which\
          \ allows users to select a media player and media content.\n- The `trigger`\
          \ is set to activate when the specified door sensor changes to 'on' (implying\
          \ open) and remains in that state for the duration specified by `open_duration`.\n\
          - The `action` then uses `media_player.play_media` to play the selected\
          \ alert media.\n- Finally, `mode: single` is set to ensure that this automation\
          \ does not run multiple overlapping instances which can lead to duplicated\
          \ alerts.\n```"
      tools: null
  tries: 0
