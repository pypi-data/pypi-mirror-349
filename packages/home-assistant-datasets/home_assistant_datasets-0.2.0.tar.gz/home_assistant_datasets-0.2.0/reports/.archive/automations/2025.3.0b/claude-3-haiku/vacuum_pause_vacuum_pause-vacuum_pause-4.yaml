---
uuid: 13dd528a-b746-47b3-94d2-09c6f3b58787
task_id: vacuum_pause_vacuum_pause-vacuum_pause-4
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  ```yaml
  blueprint:
    name: Vacuum Pause
    description: Pause the vacuum when a phone call is received.
    domain: automation
    input:
      phone_call_sensor:
        name: Phone Call Sensor
        description: Binary sensor that triggers when a phone call is received.
        selector:
          entity:
            domain: binary_sensor
      vacuum_entity:
        name: Vacuum Entity
        description: Vacuum entity to pause when a phone call is received.
        selector:
          entity:
            domain: vacuum

  trigger:
    platform: state
    entity_id: !input 'phone_call_sensor'
    to: 'on'

  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: !input 'vacuum_entity'
        state: 'cleaning'
      - condition: state
        entity_id: !input 'phone_call_sensor'
        state: 'on'

  action:
    service: vacuum.pause
    target:
      entity_id: !input 'vacuum_entity'

  # The blueprint takes two inputs:
  # 1. phone_call_sensor: A binary sensor that triggers when a phone call is received.
  # 2. vacuum_entity: The vacuum entity to pause when a phone call is received.
  #
  # The automation will trigger when the phone_call_sensor goes into the 'on' state.
  # It will check if the vacuum_entity is currently in the 'cleaning' state, and if the
  # phone_call_sensor is in the 'on' state. If both conditions are met, it will pause
  # the vacuum.
  # The vacuum can be resumed manually after the call is over.
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTN8P2NC25XSAZ2XYKMHM5J
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      system: |-
        Current time is 16:21:14. Today's date is 2025-02-23.

        Create a Home Assistant blueprint YAML configuration based on the user request.

        Please respond only with markdown that contains yaml. You can
        add comments inline with your step by step thinking. The response must start
        with ```yaml and end with ``` because your answer will be parsed by code. It
        is very important to stick to the format.
      messages:
      - role: user
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        content:
        - type: text
          text: |-
            ```yaml
            blueprint:
              name: Vacuum Pause
              description: Pause the vacuum when a phone call is received.
              domain: automation
              input:
                phone_call_sensor:
                  name: Phone Call Sensor
                  description: Binary sensor that triggers when a phone call is received.
                  selector:
                    entity:
                      domain: binary_sensor
                vacuum_entity:
                  name: Vacuum Entity
                  description: Vacuum entity to pause when a phone call is received.
                  selector:
                    entity:
                      domain: vacuum

            trigger:
              platform: state
              entity_id: !input 'phone_call_sensor'
              to: 'on'

            condition:
              condition: and
              conditions:
                - condition: state
                  entity_id: !input 'vacuum_entity'
                  state: 'cleaning'
                - condition: state
                  entity_id: !input 'phone_call_sensor'
                  state: 'on'

            action:
              service: vacuum.pause
              target:
                entity_id: !input 'vacuum_entity'

            # The blueprint takes two inputs:
            # 1. phone_call_sensor: A binary sensor that triggers when a phone call is received.
            # 2. vacuum_entity: The vacuum entity to pause when a phone call is received.
            #
            # The automation will trigger when the phone_call_sensor goes into the 'on' state.
            # It will check if the vacuum_entity is currently in the 'cleaning' state, and if the
            # phone_call_sensor is in the 'on' state. If both conditions are met, it will pause
            # the vacuum.
            # The vacuum can be resumed manually after the call is over.
            ```
  tries: 0
