---
uuid: d163b70f-3509-484b-85eb-de0f6502a50e
task_id: vacuum_pause_vacuum_pause-vacuum_pause-2
model_id: null
category: vacuum
task:
  input_text: |
    # Vacuum Pause

    ## Problem statement

    Create a blueprint automation to pause the vacuum when I receive a phone call.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Pause the vacuum when I get a phone call from my relatives
    - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input               | Description                                                           |
    | ------------------- | --------------------------------------------------------------------- |
    | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
    | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

    The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
    should be paused (not stopped) and can be resumed manually.
response: |-
  ```yaml
  blueprint:
    name: Vacuum Pause
    description: Pause the vacuum when a phone call is received
    domain: automation
    input:
      phone_call_sensor:
        name: Phone Call Sensor
        description: "Binary sensor that triggers when a phone call is received"
        selector:
          entity:
            domain: binary_sensor
      vacuum_entity:
        name: Vacuum Entity
        description: "Vacuum entity to pause when the automation fires"
        selector:
          entity:
            domain: vacuum

  mode: parallel
  max_exceeded: silent

  trigger:
    platform: state
    entity_id: !input phone_call_sensor
    to: "on"

  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: !input vacuum_entity
        state: "on"
      - condition: state
        entity_id: !input phone_call_sensor
        state: "on"

  action:
    service: vacuum.pause
    target:
      entity_id: !input vacuum_entity
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Vacuum Pause

        ## Problem statement

        Create a blueprint automation to pause the vacuum when I receive a phone call.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Pause the vacuum when I get a phone call from my relatives
        - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input               | Description                                                           |
        | ------------------- | --------------------------------------------------------------------- |
        | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
        | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

        The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
        should be paused (not stopped) and can be resumed manually.
      context:
        id: 01JMTPABEKE3W691RWC0Y32YAZ
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
  - event_type: agent_detail
    data:
      messages:
      - role: system
        agent_id: conversation.mock_title
        content: |-
          Current time is 16:39:38. Today's date is 2025-02-23.

          Create a Home Assistant blueprint YAML configuration based on the user request.

          Please respond only with markdown that contains yaml. You can
          add comments inline with your step by step thinking. The response must start
          with ```yaml and end with ``` because your answer will be parsed by code. It
          is very important to stick to the format.
      - role: user
        agent_id: conversation.mock_title
        content: |
          # Vacuum Pause

          ## Problem statement

          Create a blueprint automation to pause the vacuum when I receive a phone call.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Pause the vacuum when I get a phone call from my relatives
          - Don't interrupt my work video convererence call with vacuum noise by pausing it when the call starts

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input               | Description                                                           |
          | ------------------- | --------------------------------------------------------------------- |
          | `phone_call_sensor` | A `binary_sensor` entity that triggers when a phone call is received. |
          | `vacuum_entity`     | A `vacuum` entity to pause when the automation fires.                 |

          The automation should trigger when the binary sensor fires and the vacuum is running. The vacuum
          should be paused (not stopped) and can be resumed manually.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          ```yaml
          blueprint:
            name: Vacuum Pause
            description: Pause the vacuum when a phone call is received
            domain: automation
            input:
              phone_call_sensor:
                name: Phone Call Sensor
                description: "Binary sensor that triggers when a phone call is received"
                selector:
                  entity:
                    domain: binary_sensor
              vacuum_entity:
                name: Vacuum Entity
                description: "Vacuum entity to pause when the automation fires"
                selector:
                  entity:
                    domain: vacuum

          mode: parallel
          max_exceeded: silent

          trigger:
            platform: state
            entity_id: !input phone_call_sensor
            to: "on"

          condition:
            condition: and
            conditions:
              - condition: state
                entity_id: !input vacuum_entity
                state: "on"
              - condition: state
                entity_id: !input phone_call_sensor
                state: "on"

          action:
            service: vacuum.pause
            target:
              entity_id: !input vacuum_entity
          ```
      tools: null
  tries: 0
