# serializer version: 1
# name: test_automation
  list([
    'report.csv',
    'reports-by-category.yaml',
    'reports-by-model-category.yaml',
    'reports-by-model-test-name.yaml',
    'reports-by-task-id.yaml',
    'reports-by-test-name.yaml',
    'reports-token-stats.yaml',
    'reports.yaml',
  ])
# ---
# name: test_automation.1
  tuple(
    'report.csv',
    '''
      task_id,model_id,category,text,tool_call,response,task_name,label,details
      "light_on_door_light_on_door-light_on_door-0","assistant","light","# Light on door\n\n## Problem statement\n\nCreate an blueprint automation to turn on a light when the door opens.\n\n## Example use cases\n\nThese are example use cases that could be used with the blueprint:\n\n- Turn on the pantry light when the pantry door opens\n\n## Detailed Description\n\nThe blueprint should accept two inputs:\n\n| Input          | Description                                                                     |\n| -------------- | ------------------------------------------------------------------------------- |\n| `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |\n| `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |\n\nThe automation should trigger when the door opens, and turn the light on. The\nlight should be shut off when the door closes or after a 2 minute timeout.\n","","Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint automation to turn on a light when","light_on_door-test_blueprint_inputs","Bad","AssertionError: Blueprint content is not available"
      "light_on_door_light_on_door-light_on_door-0","assistant","light","# Light on door\n\n## Problem statement\n\nCreate an blueprint automation to turn on a light when the door opens.\n\n## Example use cases\n\nThese are example use cases that could be used with the blueprint:\n\n- Turn on the pantry light when the pantry door opens\n\n## Detailed Description\n\nThe blueprint should accept two inputs:\n\n| Input          | Description                                                                     |\n| -------------- | ------------------------------------------------------------------------------- |\n| `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |\n| `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |\n\nThe automation should trigger when the door opens, and turn the light on. The\nlight should be shut off when the door closes or after a 2 minute timeout.\n","","Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint automation to turn on a light when","light_on_door-test_door_open","Bad","AssertionError: Could not extract YAML from model response: Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint au..."
      "light_on_door_light_on_door-light_on_door-0","assistant","light","# Light on door\n\n## Problem statement\n\nCreate an blueprint automation to turn on a light when the door opens.\n\n## Example use cases\n\nThese are example use cases that could be used with the blueprint:\n\n- Turn on the pantry light when the pantry door opens\n\n## Detailed Description\n\nThe blueprint should accept two inputs:\n\n| Input          | Description                                                                     |\n| -------------- | ------------------------------------------------------------------------------- |\n| `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |\n| `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |\n\nThe automation should trigger when the door opens, and turn the light on. The\nlight should be shut off when the door closes or after a 2 minute timeout.\n","","Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint automation to turn on a light when","light_on_door-test_door_open_close","Bad","AssertionError: Could not extract YAML from model response: Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint au..."
      "light_on_door_light_on_door-light_on_door-0","assistant","light","# Light on door\n\n## Problem statement\n\nCreate an blueprint automation to turn on a light when the door opens.\n\n## Example use cases\n\nThese are example use cases that could be used with the blueprint:\n\n- Turn on the pantry light when the pantry door opens\n\n## Detailed Description\n\nThe blueprint should accept two inputs:\n\n| Input          | Description                                                                     |\n| -------------- | ------------------------------------------------------------------------------- |\n| `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |\n| `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |\n\nThe automation should trigger when the door opens, and turn the light on. The\nlight should be shut off when the door closes or after a 2 minute timeout.\n","","Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint automation to turn on a light when","light_on_door-test_light_timeout","Bad","AssertionError: Could not extract YAML from model response: Sorry, I am not aware of any area called # Light on door ## Problem statement Create an blueprint au..."
  
    ''',
  )
# ---
# name: test_automation.2
  tuple(
    'reports-by-category.yaml',
    '''
      ---
      - category: light
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 4
      
  
    ''',
  )
# ---
# name: test_automation.3
  tuple(
    'reports-by-model-category.yaml',
    '''
      ---
      - model_id-category: assistant-light
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 4
      
  
    ''',
  )
# ---
# name: test_automation.4
  tuple(
    'reports-by-model-test-name.yaml',
    '''
      ---
      - model_id-task_name: assistant-light_on_door-test_blueprint_inputs
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - model_id-task_name: assistant-light_on_door-test_door_open
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - model_id-task_name: assistant-light_on_door-test_door_open_close
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - model_id-task_name: assistant-light_on_door-test_light_timeout
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      
  
    ''',
  )
# ---
# name: test_automation.5
  tuple(
    'reports-by-task-id.yaml',
    '''
      ---
      - task_id: light_on_door_light_on_door-light_on_door-0
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 4
      
  
    ''',
  )
# ---
# name: test_automation.6
  tuple(
    'reports-by-test-name.yaml',
    '''
      ---
      - task_name: light_on_door-test_blueprint_inputs
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - task_name: light_on_door-test_door_open
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - task_name: light_on_door-test_door_open_close
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      - task_name: light_on_door-test_light_timeout
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 1
      
  
    ''',
  )
# ---
# name: test_automation.7
  tuple(
    'reports-token-stats.yaml',
    '''
      --- []
      
  
    ''',
  )
# ---
# name: test_automation.8
  tuple(
    'reports.yaml',
    '''
      ---
      - model_id: assistant
        good_percent: 0.0%
        confidence_interval: 0.0%
        good: 0
        total: 4
      
  
    ''',
  )
# ---
