---
uuid: 27741240-86f1-4eae-ba28-55cc7e852ff5
task_id: door_left_open_door_left_open-door_left_open-0
model_id: gemini-1.5-flash
category: media_player
task:
  input_text: |
    # Door left open

    ## Problem statement

    Create an blueprint automation to play an alert on the speaker when the door is
    left open.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
    - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input           | Selector Type | Description                                                                           |
    | --------------- | ------------- | ------------------------------------------------------------------------------------- |
    | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
    | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
    | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

    The automation should play the selected media when the door has been open for the specified duration.
response:
  "```yaml\nalias: Door Left Open Alert\ndescription: Play an alert when a\
  \ door is left open for a specified duration.\nuse_blueprint:\n  path: blueprint.yaml\n\
  \  input:\n    door_sensor: sensor.garage_door\n    alert_media: media_player.living_room_speaker\n\
  \    open_duration: \"00:30:00\"\n\nblueprint:\n  name: Door Left Open Alert\n \
  \ description: Play an alert when a door is left open for a specified duration.\n\
  \  domain: automation\n  variables:\n    open_duration_seconds: \"{{ (as_timestamp(states('sensor.garage_door'))\
  \ - as_timestamp(states.last_changed('sensor.garage_door'))) | int }}\"\n\n  input:\n\
  \    door_sensor:\n      name: Door Sensor\n      description: The binary sensor\
  \ representing the door.\n      selector:\n        entity:\n          domain: binary_sensor\n\
  \          device_class: door\n    alert_media:\n      name: Alert Media\n     \
  \ description: The media player to play the alert on.\n      selector:\n       \
  \ target:\n          entity:\n            domain: media_player\n    open_duration:\n\
  \      name: Open Duration\n      description: The duration the door must be open\
  \ before triggering the alert.\n      selector:\n        duration:\n          unit_of_time:\
  \ minutes\n\n  trigger:\n  - platform: state\n    entity_id: !input door_sensor\n\
  \    to: 'on'\n\n  condition:\n  - condition: template\n    value_template: >\n\
  \      {{ now().timestamp() - state_attr(trigger.entity_id, 'last_changed') > \n\
  \            (input.open_duration | int * 60) }}\n\n  action:\n  - service: media_player.play_media\n\
  \    target: !input alert_media\n    data:\n      media_content_id: !input alert_media\
  \ #Update this with your actual media ID.  You might need to define this elsewhere.\n\
  \      media_content_type: music\n\nmode: single\n```"
context:
  conversation_trace:
    - event_type: async_process
      data:
        text: |
          # Door left open

          ## Problem statement

          Create an blueprint automation to play an alert on the speaker when the door is
          left open.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
          - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input           | Selector Type | Description                                                                           |
          | --------------- | ------------- | ------------------------------------------------------------------------------------- |
          | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
          | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
          | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

          The automation should play the selected media when the door has been open for the specified duration.
        context:
          id: 01JS9WJWE7VMSS36Z31R4165XS
          parent_id: null
          user_id: null
        conversation_id: null
        device_id: null
        language: en
        agent_id: conversation.mock_title
        extra_system_prompt: null
      timestamp: 2025-04-20 15:20:32.967712+00:00
    - event_type: agent_detail
      data:
        messages:
          - role: system
            content: |-
              Current time is 08:20:32. Today's date is 2025-04-20.

              Create a Home Assistant blueprint YAML configuration based on the user request.

              Please respond only with markdown that contains yaml. You can
              add comments inline with your step by step thinking. The response must start
              with ```yaml and end with ``` because your answer will be parsed by code. It
              is very important to stick to the format.
          - role: user
            content: |
              # Door left open

              ## Problem statement

              Create an blueprint automation to play an alert on the speaker when the door is
              left open.

              ## Example use cases

              These are example use cases that could be used with the blueprint:

              - Play an message on the living room speaker if the garage door has been left open for more than 30 minutes
              - When the front door is ajar for 5 minutes, play a sound on the kitchen bluetooth speaker.

              ## Detailed Description

              The blueprint should accept two inputs:

              | Input           | Selector Type | Description                                                                           |
              | --------------- | ------------- | ------------------------------------------------------------------------------------- |
              | `door_sensor`   | `entity`      | A `binary_sensor` entity selector door sensor that is the target of the automation.   |
              | `alert_media`   | `media`       | The target for the `media` selector for the media player and media id with the alter. |
              | `open_duration` | `duration`    | A `duration` selector, the amount of time before playing the alert.                   |

              The automation should play the selected media when the door has been open for the specified duration.
          - role: assistant
            agent_id: conversation.mock_title
            content:
              "```yaml\nalias: Door Left Open Alert\ndescription: Play an alert\
              \ when a door is left open for a specified duration.\nuse_blueprint:\n \
              \ path: blueprint.yaml\n  input:\n    door_sensor: sensor.garage_door\n\
              \    alert_media: media_player.living_room_speaker\n    open_duration: \"\
              00:30:00\"\n\nblueprint:\n  name: Door Left Open Alert\n  description: Play\
              \ an alert when a door is left open for a specified duration.\n  domain:\
              \ automation\n  variables:\n    open_duration_seconds: \"{{ (as_timestamp(states('sensor.garage_door'))\
              \ - as_timestamp(states.last_changed('sensor.garage_door'))) | int }}\"\n\
              \n  input:\n    door_sensor:\n      name: Door Sensor\n      description:\
              \ The binary sensor representing the door.\n      selector:\n        entity:\n\
              \          domain: binary_sensor\n          device_class: door\n    alert_media:\n\
              \      name: Alert Media\n      description: The media player to play the\
              \ alert on.\n      selector:\n        target:\n          entity:\n     \
              \       domain: media_player\n    open_duration:\n      name: Open Duration\n\
              \      description: The duration the door must be open before triggering\
              \ the alert.\n      selector:\n        duration:\n          unit_of_time:\
              \ minutes\n\n  trigger:\n  - platform: state\n    entity_id: !input door_sensor\n\
              \    to: 'on'\n\n  condition:\n  - condition: template\n    value_template:\
              \ >\n      {{ now().timestamp() - state_attr(trigger.entity_id, 'last_changed')\
              \ > \n            (input.open_duration | int * 60) }}\n\n  action:\n  -\
              \ service: media_player.play_media\n    target: !input alert_media\n   \
              \ data:\n      media_content_id: !input alert_media #Update this with your\
              \ actual media ID.  You might need to define this elsewhere.\n      media_content_type:\
              \ music\n\nmode: single\n```"
            tool_calls: null
        tools: null
      timestamp: 2025-04-20 15:20:32.970476+00:00
    - event_type: agent_detail
      data:
        stats:
          input_tokens: 351
          cached_input_tokens: 0
          output_tokens: 464
      timestamp: 2025-04-20 15:20:36.111044+00:00
  duration_ms: 3143.754
  tries: 1
