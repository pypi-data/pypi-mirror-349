Metadata-Version: 2.4
Name: cursor-multi
Version: 1.1.5
Summary: Cursor Multi
Project-URL: Repository, https://github.com/gabemontague/cursor-multi
Project-URL: Issues, https://github.com/gabemontague/cursor-multi/issues
Author-email: Gabe Montague <gabemontague@outlook.com>
License: Copyright (c) 2025 Gabe Montague
        Software License: PolyForm Internal Use License 1.0.0
        
        # PolyForm Internal Use License 1.0.0
        
        <https://polyformproject.org/licenses/internal-use/1.0.0>
        
        ## Acceptance
        
        In order to get any license under these terms, you must agree
        to them as both strict obligations and conditions to all
        your licenses.
        
        ## Copyright License
        
        The licensor grants you a copyright license for the software
        to do everything you might do with the software that would
        otherwise infringe the licensor's copyright in it for any
        permitted purpose. However, you may only make changes or
        new works based on the software according to [Changes and New
        Works License](#changes-and-new-works-license), and you may
        not distribute the software.
        
        ## Changes and New Works License
        
        The licensor grants you an additional copyright license to
        make changes and new works based on the software for any
        permitted purpose.
        
        ## Patent License
        
        The licensor grants you a patent license for the software that
        covers patent claims the licensor can license, or becomes able
        to license, that you would infringe by using the software.
        
        ## Fair Use
        
        You may have "fair use" rights for the software under the
        law. These terms do not limit them.
        
        ## Internal Business Use
        
        Use of the software for the internal business operations of
        you and your company is use for a permitted purpose.
        
        ## No Other Rights
        
        These terms do not allow you to sublicense or transfer any of
        your licenses to anyone else, or prevent the licensor from
        granting licenses to anyone else. These terms do not imply
        any other licenses.
        
        ## Patent Defense
        
        If you make any written claim that the software infringes or
        contributes to infringement of any patent, your patent license
        for the software granted under these terms ends immediately. If
        your company makes such a claim, your patent license ends
        immediately for work on behalf of your company.
        
        ## Violations
        
        The first time you are notified in writing that you have
        violated any of these terms, or done anything with the software
        not covered by your licenses, your licenses can nonetheless
        continue if you come into full compliance with these terms,
        and take practical steps to correct past violations, within
        32 days of receiving notice. Otherwise, all your licenses
        end immediately.
        
        ## No Liability
        
        **_As far as the law allows, the software comes as is, without
        any warranty or condition, and the licensor will not be liable
        to you for any damages arising out of these terms or the use
        or nature of the software, under any kind of legal claim._**
        
        ## Definitions
        
        The **licensor** is the individual or entity offering these
        terms, and the **software** is the software the licensor makes
        available under these terms.
        
        **You** refers to the individual or entity agreeing to these
        terms.
        
        **Your company** is any legal entity, sole proprietorship,
        or other kind of organization that you work for, plus all
        organizations that have control over, are under the control of,
        or are under common control with that organization. **Control**
        means ownership of substantially all the assets of an entity,
        or the power to direct its management and policies by vote,
        contract, or otherwise. Control can be direct or indirect.
        
        **Your licenses** are all the licenses granted to you for the
        software under these terms.
        
        **Use** means anything you do with the software requiring one
        of your licenses.
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.9
Requires-Dist: click>=8.2.0
Provides-Extra: dev
Requires-Dist: pyinstaller>=6.9.0; extra == 'dev'
Requires-Dist: pytest-cov>=6.1.1; extra == 'dev'
Requires-Dist: pytest-mock>=3.14.0; extra == 'dev'
Requires-Dist: pytest>=8.3.5; extra == 'dev'
Requires-Dist: ruff>=0.11.10; extra == 'dev'
Description-Content-Type: text/markdown

# cursor-multi

`cursor-multi` is the best way to work with Cursor on multiple Git repos at once. Set up your "sub-repos", for quick access to:

- Automatic syncing of Cursor rule .mcd files from the sub-repos
- Automatic syncing of your `.vscode` folder: `launch.json`, `tasks.json`, `settings.json`

## Installation

### Using `brew`

Run:
`brew tap montaguegabe/cursor-multi`
then
`brew install cursor-multi`

### Using `pipx` (MacOS, Linux, Windows):

- Install [pipx](https://github.com/pypa/pipx)
- Run `pipx install cursor-multi`

## Getting started

To get started, create a new directory that will house all your related repos and run:

```
multi init
```

Then paste in the URLs of all the repositories you want to use with Cursor. You can optionally specify descriptions of what they do, which will be used to create a new repo-directories.mdc Cursor rule.

It is recommended you also install the [VSCode/Cursor Extension]() that automatically keeps your project synced based on edits to files. To manually sync, you can run `multi sync`.

## Git operations
