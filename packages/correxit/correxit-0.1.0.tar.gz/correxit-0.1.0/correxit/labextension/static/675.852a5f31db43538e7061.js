"use strict";(self.webpackChunkcorrexit=self.webpackChunkcorrexit||[]).push([[675],{675:(e,t,o)=>{o.r(t),o.d(t,{default:()=>a});var r=o(653),n=o(266),i=o(713);const c={id:"correxit:plugin",description:"correxit is a JupyterLab extension and the third-person singular perfect active indicative conjugation of the Latin verb corrigere",autoStart:!0,optional:[r.ISettingRegistry],activate:(e,t)=>{console.log("JupyterLab extension correxit is activated!"),t&&t.load(c.id).then((e=>{console.log("correxit settings loaded:",e.composite)})).catch((e=>{console.error("Failed to load settings for correxit.",e)})),async function(e="",t={}){const o=i.ServerConnection.makeSettings(),r=n.URLExt.join(o.baseUrl,"correxit",e);let c;try{c=await i.ServerConnection.makeRequest(r,t,o)}catch(e){throw new i.ServerConnection.NetworkError(e)}let a=await c.text();if(a.length>0)try{a=JSON.parse(a)}catch(e){console.log("Not a JSON response body.",c)}if(!c.ok)throw new i.ServerConnection.ResponseError(c,a.message||a);return a}("get-example").then((e=>{console.log(e)})).catch((e=>{console.error(`The correxit server extension appears to be missing.\n${e}`)}))}},a=c}}]);