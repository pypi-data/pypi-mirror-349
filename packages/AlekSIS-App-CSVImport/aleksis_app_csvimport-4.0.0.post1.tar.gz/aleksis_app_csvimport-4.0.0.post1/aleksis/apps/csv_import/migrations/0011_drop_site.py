# Generated by Django 4.2.10 on 2024-02-06 20:19

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('csv_import', '0010_add_managed_by_app_label'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='importjob',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='importtemplate',
            managers=[
            ],
        ),
        migrations.AlterModelManagers(
            name='importtemplatefield',
            managers=[
            ],
        ),
        migrations.RemoveConstraint(
            model_name='importtemplate',
            name='unique_template_name_per_site',
        ),
    ] + [
        migrations.RunSQL(
            f"ALTER TABLE csv_import_{model_name} drop column if exists site_id;"
        ) for model_name  in
        [
            "importtemplate",
            "importtemplatefield",
            "importjob",
        ]
    ] +  [
        migrations.AlterField(
            model_name='importtemplate',
            name='name',
            field=models.CharField(max_length=255, unique=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='importtemplatefield',
            name='field_type',
            field=models.CharField(choices=[('match', ''), ('connected_match', ''), ('ignore', 'Ignore data in this field'), ('reg_ex', ''), ('converter_reg_ex', ''), ('converter_ignore_reg_ex', 'Ignore data in this field'), ('unique_reference', 'Unique reference'), ('name', 'Name'), ('first_name', 'First name'), ('last_name', 'Last name'), ('additional_name', 'Additional name'), ('short_name', 'Short name'), ('email', 'Email'), ('date_of_birth', 'Date of birth'), ('sex', 'Sex'), ('street', 'Street'), ('housenumber', 'Housenumber'), ('street_housenumber', 'Street and housenumber'), ('postal_code', 'Postal code'), ('place', 'Place'), ('phone_number', 'Phone number'), ('mobile_number', 'Mobile number'), ('departments', 'Comma-separated list of departments (short name of subjects)'), ('departments_name', 'Comma-separated list of departments (long name of subjects)'), ('group_subject_short_name', 'Short name of the subject'), ('class_range', 'Class range (e. g. 7a-d)'), ('primary_group_short_name', "Short name of the person's primary group"), ('primary_group_owner_short_name', "Short name of an owner of the person's primary group"), ('group_owner_short_name', 'Short name of a single group owner'), ('group_owner_full_name', 'Full name of a single group owner (last name, first name)'), ('group_member_full_name', 'Full name of a single group member (last name, first name)'), ('group_member_unique_reference', 'Unique reference of a single group member (import_ref_csv)'), ('group_membership_short_name', 'Short name of the group the person is a member of'), ('parent_group_short_name', "Short name of the group's parent group"), ('member_of_by_name', 'Name of a group the person is a member of'), ('child_by_unique_reference', 'Child by unique reference (from students import)'), ('', ''), ('avatar', ''), ('photo', '')], max_length=255, verbose_name='Field type'),
        ),
    ]
