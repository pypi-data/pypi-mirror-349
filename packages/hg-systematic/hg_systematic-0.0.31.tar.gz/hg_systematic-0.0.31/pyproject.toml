[tool.poetry]
name = "hg_systematic"
version = "0.0.31"
description = """ \
A library and examples to show how HGraph can be used for systematic trading. \
"""
readme = "README.md"
license = "MIT"
authors = [
    "Howard Henson <howard@henson.me.uk>",
]
keywords = [
    "reactive", "graph", "fpg", "forward propogating graph",
    "time series", "functional reactive programming",
    "frp", "functional", "time-series", "systematic", "trading",
    "strategy"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
]
packages = [
    { include = "hg_systematic", from = "src" },
]

[tool.poetry.dependencies]
    python = ">=3.11"
    hgraph = ">=0.4.28"
    hg_oap = ">=0.1.13"
    frozendict = ">=2.3.10"
    sortedcontainers = ">=2.4.0"
    ordered-set = ">=4.1.0"
    numpy = ">=1.23"
    polars = ">=1.0"
    matplotlib = "*"
    antlr4-python3-runtime = "*"
    sphinx = { version = ">=7.4", optional = true }
    sphinx_rtd_theme = { version = ">=2.0.0", optional = true  }
    sphinx-autodoc-typehints = { version = ">=2.3.0", optional = true }
    sphinxcontrib-plantuml = { version = ">=0.30", optional = true }
    sphinxcontrib-bibtex = { version = "*", optional = true }
    pybtex-apa-style = { version = "*", optional = true }
    importlib_resources = "*"

#[tool.poetry.extras]
#web = [
#]
#yfinance = "==0.2.54"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
    sphinx = "*"
    sphinx_rtd_theme = "*"
    sphinx-autodoc-typehints = "*"
    sphinxcontrib-plantuml = "*"
    sphinxcontrib-bibtex  ="*"
    pybtex-apa-style = "==1.3"

[tool.poetry.urls]
Homepage = "https://github.com/hhenson/hg_systematic"
Documentation = "https://github.com/hhenson/hg_systematic/blob/main/README.md"
Repository = "https://github.com/hhenson/hg_systematic.git"
Issues = "https://github.com/hhenson/hg_systematic/blob/main/ISSUES.md"
Changelog = "https://github.com/hhenson/hg_systematic/blob/main/CHANGELOG.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.test.dependencies]
pytest = "*"
mypy = "*"
pytest-cov = "*"
coverage = "*"
pytest-xdist = "*"


# Configure pytest
[tool.pytest.ini_options]
minversion = "7.4.3"
adopts = "-s" #addopts = "-n 4 -ra -q --dist=loadscope" # " --cov=hgraph --cov-report=term-missing --cov-report=xml"
testpaths = [
    "tests",
]
markers = [
    "serial: mark test to run serially (not in parallel with xdist)",
]

# Configure coverage
[tool.coverage.run]
source_pkgs = ["hg_systematic",]
branch = true
parallel = true
omit = [
    "tests/*",
    "examples/*",
    "docs/*",
]

[tool.coverage.paths]
hg = ["src/hg_systematic",]
tests = ["tests",]

[tool.coverage.report]
fail_under = 80
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 120
target-version = ['py312']
unstable = true
include = '\.pyi?$'
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  ^/foo.py    # exclude a file named foo.py in the root of the project
  | .*_pb2.py  # exclude autogenerated Protocol Buffer files anywhere in the project
)
'''

[tool.mypy]
files = ["src",]

[tool.poetry.scripts]
build-docs = "sphinx.cmd.build:main"
