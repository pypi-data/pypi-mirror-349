# TODO: Once Lima 1.1 is released, we can simplify this by using `base: template://k3s`
#       Until then, it's copied and modified from https://github.com/lima-vm/lima/blob/release/1.0/templates/k3s.yaml

images:
- location: "https://cloud-images.ubuntu.com/releases/noble/release-20250313/ubuntu-24.04-server-cloudimg-amd64.img"
  arch: "x86_64"
  digest: "sha256:eacac65efe9e9bae0cbcb3f9d5c2b5e8c5313fa78a3bc401c3fb28b2d48cefc0"
- location: "https://cloud-images.ubuntu.com/releases/noble/release-20250313/ubuntu-24.04-server-cloudimg-arm64.img"
  arch: "aarch64"
  digest: "sha256:103f31c5a5b7f031a60ce3555c8fbd56317fd8ffbaaa7e17002879e6157d546d"
- location: "https://cloud-images.ubuntu.com/releases/noble/release/ubuntu-24.04-server-cloudimg-amd64.img"
  arch: "x86_64"
- location: "https://cloud-images.ubuntu.com/releases/noble/release/ubuntu-24.04-server-cloudimg-arm64.img"
  arch: "aarch64"

# ADDED BY BEEAI: mount configuration folder
mounts:
- location: "~/.beeai"
  mountPoint: "/beeai"

containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/sh
    if [ ! -d /var/lib/rancher/k3s ]; then
            curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --write-kubeconfig-mode 644" sh -
    fi
# ADDED BY BEEAI: use host.docker.internal as alias for host.lima.internal
- mode: system
  script: |
    #!/bin/sh
    until kubectl get configmap coredns -n kube-system >/dev/null 2>&1; do
      sleep 2
    done
    TMP=$(mktemp -d)
    HOST_IP=$(dig +noall +short host.lima.internal)
    kubectl get configmap coredns -n kube-system -o yaml >$TMP/coredns.yaml
    if ! grep -q "host.docker.internal" $TMP/coredns.yaml; then
      awk -v ip="$HOST_IP" '/^  NodeHosts: \|/{print; print "    " ip " host.docker.internal"; next}1' $TMP/coredns.yaml >$TMP/coredns-patched.yaml
      kubectl apply -f $TMP/coredns-patched.yaml
      kubectl -n kube-system rollout restart deployment coredns
    fi
probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! timeout 30s bash -c "until test -f /etc/rancher/k3s/k3s.yaml; do sleep 3; done"; then
            echo >&2 "k3s is not running yet"
            exit 1
    fi
  hint: |
    The k3s kubeconfig file has not yet been created.
    Run "limactl shell k3s sudo journalctl -u k3s" to check the log.
    If that is still empty, check the bottom of the log at "/var/log/cloud-init-output.log".
copyToHost:
- guest: "/etc/rancher/k3s/k3s.yaml"
  host: "{{.Dir}}/copied-from-guest/kubeconfig.yaml"
  deleteOnStop: true
# ADDED BY BEEAI: forward NodePort 31833 to host port 8333
portForwards:
  - guestPort: 31833
    hostPort: 8333
