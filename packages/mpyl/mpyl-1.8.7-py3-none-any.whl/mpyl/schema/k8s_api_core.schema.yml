$schema: http://json-schema.org/draft-07/schema#
# Taken from https://github.com/kubernetes/kubernetes/blob/master/api/openapi-spec/swagger.json and converted to YAML
definitions:
  io.k8s.api.apps.v1.DeploymentStrategy:
    description: DeploymentStrategy describes how to replace existing pods with new
      ones.
    properties:
      rollingUpdate:
        "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        description: Rolling update config params. Present only if DeploymentStrategyType
          = RollingUpdate.
      type:
        description: Type of deployment. Can be "Recreate" or "RollingUpdate". Default
          is RollingUpdate.
        type: string
        enum:
          - 'RollingUpdate'
          - 'Recreate'
        default: 'RollingUpdate'
    type: object
  io.k8s.api.apps.v1.RollingUpdateDeployment:
    description: Spec to control the desired behavior of rolling update.
    properties:
      maxSurge:
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        description: 'The maximum number of pods that can be scheduled above the desired
            number of pods. Value can be an absolute number (ex: 5) or a percentage
            of desired pods (ex: 10%). This can not be 0 if MaxUnavailable is 0. Absolute
            number is calculated from percentage by rounding up. Defaults to 25%. Example:
            when this is set to 30%, the new ReplicaSet can be scaled up immediately
            when the rolling update starts, such that the total number of old and new
            pods do not exceed 130% of desired pods. Once old pods have been killed,
            new ReplicaSet can be scaled up further, ensuring that total number of pods
            running at any time during the update is at most 130% of desired pods.'
      maxUnavailable:
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        description: 'The maximum number of pods that can be unavailable during the
            update. Value can be an absolute number (ex: 5) or a percentage of desired
            pods (ex: 10%). Absolute number is calculated from percentage by rounding
            down. This can not be 0 if MaxSurge is 0. Defaults to 25%. Example: when
            this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired
            pods immediately when the rolling update starts. Once new pods are ready,
            old ReplicaSet can be scaled down further, followed by scaling up the new
            ReplicaSet, ensuring that the total number of pods available at all times
            during the update is at least 70% of desired pods.'
    type: object
  io.k8s.apimachinery.pkg.util.intstr.IntOrString:
    description: IntOrString is a type that can hold an int32 or a string.  When used
      in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner
      type.  This allows you to have, for example, a JSON field that can accept a
      name or number.
    format: int-or-string
    type: string
  io.k8s.api.core.v1.EnvVarSource:
    description: EnvVarSource represents a source for the value of an EnvVar.
    properties:
      configMapKeyRef:
        $ref: '#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector'
        description: Selects a key of a ConfigMap.
      fieldRef:
        $ref: '#/definitions/io.k8s.api.core.v1.ObjectFieldSelector'
        description: >-
          Selects a field of the pod: supports metadata.name,
          metadata.namespace, metadata.labels, metadata.annotations,
          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.
      resourceFieldRef:
        $ref: '#/definitions/io.k8s.api.core.v1.ResourceFieldSelector'
        description: >-
          Selects a resource of the container: only resources limits and
          requests (limits.cpu, limits.memory, limits.ephemeral-storage,
          requests.cpu, requests.memory and requests.ephemeral-storage) are
          currently supported.
      secretKeyRef:
        $ref: '#/definitions/io.k8s.api.core.v1.SecretKeySelector'
        description: Selects a key of a secret in the pod's namespace
    type: object
  io.k8s.api.core.v1.ConfigMapKeySelector:
    description: Selects a key from a ConfigMap.
    properties:
      key:
        description: The key to select.
        type: string
      name:
        description: >-
          Name of the referent. More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      optional:
        description: Specify whether the ConfigMap or it's key must be defined
        type: boolean
    required:
      - key
    type: object
  io.k8s.api.core.v1.ObjectFieldSelector:
    description: ObjectFieldSelector selects an APIVersioned field of an object.
    properties:
      apiVersion:
        description: >-
          Version of the schema the FieldPath is written in terms of, defaults
          to "v1".
        type: string
      fieldPath:
        description: Path of the field to select in the specified API version.
        type: string
    required:
      - fieldPath
    type: object
  io.k8s.api.core.v1.ResourceFieldSelector:
    description: >-
      ResourceFieldSelector represents container resources (cpu, memory) and
      their output format
    properties:
      containerName:
        description: 'Container name: required for volumes, optional for env vars'
        type: string
      divisor:
        $ref: '#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity'
        description: Specifies the output format of the exposed resources, defaults to "1"
      resource:
        description: 'Required: resource to select'
        type: string
    required:
      - resource
    type: object
  io.k8s.api.core.v1.SecretKeySelector:
    description: SecretKeySelector selects a key of a Secret.
    properties:
      key:
        description: The key of the secret to select from.  Must be a valid secret key.
        type: string
      name:
        description: >-
          Name of the referent. More info:
          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        type: string
      optional:
        description: Specify whether the Secret or it's key must be defined
        type: boolean
    required:
      - key
    type: object
  io.k8s.apimachinery.pkg.api.resource.Quantity:
    oneOf:
      - type: string
      - type: number
  io.k8s.api.core.v1.LocalObjectReference:
    description: LocalObjectReference contains enough information to let you locate
      the referenced object inside the same namespace.
    properties:
      name:
        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
        type: string
    type: object
  io.k8s.api.rbac.v1.PolicyRule:
    description: PolicyRule holds information that describes a policy rule, but does
      not contain information about who the rule applies to or which namespace the
      rule applies to.
    required:
      - verbs
    properties:
      apiGroups:
        description: APIGroups is the name of the APIGroup that contains the resources.  If
          multiple API groups are specified, any action requested against one of the
          enumerated resources in any API group will be allowed.
        type: array
        items:
          type: string
      nonResourceURLs:
        description: NonResourceURLs is a set of partial urls that a user should have
          access to.  *s are allowed, but only as the full, final step in the path
          Since non-resource URLs are not namespaced, this field is only applicable
          for ClusterRoles referenced from a ClusterRoleBinding. Rules can either
          apply to API resources (such as "pods" or "secrets") or non-resource URL
          paths (such as "/api"),  but not both.
        type: array
        items:
          type: string
      resourceNames:
        description: ResourceNames is an optional white list of names that the rule
          applies to.  An empty set means that everything is allowed.
        type: array
        items:
          type: string
      resources:
        description: Resources is a list of resources this rule applies to.  ResourceAll
          represents all resources.
        type: array
        items:
          type: string
      verbs:
        description: Verbs is a list of Verbs that apply to ALL the ResourceKinds
          and AttributeRestrictions contained in this rule.  VerbAll represents all
          kinds.
        type: array
        items:
          type: string
  io.k8s.api.batch.v1.CronJobSpec:
    description: CronJobSpec describes how the job execution will look like and when
      it will actually run.
    properties:
      concurrencyPolicy:
        description: |-
          Specifies how to treat concurrent executions of a Job. Valid values are:

          - "Allow" (default): allows CronJobs to run concurrently; - "Forbid": forbids concurrent runs, skipping next run if previous run hasn't finished yet; - "Replace": cancels currently running job and replaces it with a new one
        type: string
        enum:
          - Allow
          - Forbid
          - Replace
      failedJobsHistoryLimit:
        description: The number of failed finished jobs to retain. Value must be non-negative
          integer. Defaults to 1.
        format: int32
        type: integer
      schedule:
        description: The schedule in Cron format, see https://en.wikipedia.org/wiki/Cron.
        type: string
      startingDeadlineSeconds:
        description: Optional deadline in seconds for starting the job if it misses
          scheduled time for any reason.  Missed jobs executions will be counted as
          failed ones.
        format: int64
        type: integer
      successfulJobsHistoryLimit:
        description: The number of successful finished jobs to retain. Value must be
          non-negative integer. Defaults to 3.
        format: int32
        type: integer
      suspend:
        description: This flag tells the controller to suspend subsequent executions,
          it does not apply to already started executions.  Defaults to false.
        type: boolean
      timeZone:
        description: The time zone name for the given schedule, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
          If not specified, this will default to the time zone of the kube-controller-manager
          process. The set of valid time zone names and the time zone offset is loaded
          from the system-wide time zone database by the API server during CronJob validation
          and the controller manager during execution. If no system-wide time zone database
          can be found a bundled version of the database is used instead. If the time
          zone name becomes invalid during the lifetime of a CronJob or due to a change
          in host configuration, the controller will stop creating new new Jobs and
          will create a system event with the reason UnknownTimeZone. More information
          can be found in https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones
        type: string
    required:
      - schedule
    type: object