# Generated by Django 4.1.10 on 2023-07-31 19:57

import aleksis.core.managers
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0052_site_related_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "managed_by_app_label",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=255,
                        verbose_name="App label of app responsible for managing this instance",
                    ),
                ),
                ("extended_data", models.JSONField(default=dict, editable=False)),
                ("short_name", models.CharField(max_length=255, verbose_name="Short name")),
                ("name", models.CharField(max_length=255, verbose_name="Long name")),
                (
                    "colour_fg",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=18,
                        samples=None,
                        verbose_name="Foreground colour",
                    ),
                ),
                (
                    "colour_bg",
                    colorfield.fields.ColorField(
                        blank=True,
                        default="",
                        image_field=None,
                        max_length=18,
                        samples=None,
                        verbose_name="Background colour",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cursus.subject",
                        verbose_name="Parent subject",
                    ),
                ),
                (
                    "teachers",
                    models.ManyToManyField(
                        related_name="subjects_as_teacher",
                        to="core.person",
                        verbose_name="Teachers",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subject",
                "verbose_name_plural": "Subjects",
                "ordering": ["name", "short_name"],
            },
            managers=[
                ("objects", aleksis.core.managers.AlekSISBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "managed_by_app_label",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=255,
                        verbose_name="App label of app responsible for managing this instance",
                    ),
                ),
                ("extended_data", models.JSONField(default=dict, editable=False)),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "lesson_quota",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Lesson quota"
                    ),
                ),
                (
                    "default_room",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="courses",
                        to="core.room",
                        verbose_name="Default Room",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        related_name="courses", to="core.group", verbose_name="Groups"
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="cursus.subject",
                        verbose_name="Subject",
                    ),
                ),
                (
                    "teachers",
                    models.ManyToManyField(
                        related_name="courses_as_teacher", to="core.person", verbose_name="Teachers"
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
                "ordering": ["subject"],
            },
            managers=[
                ("objects", aleksis.core.managers.AlekSISBaseManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name="subject",
            constraint=models.UniqueConstraint(
                fields=("short_name",), name="lr_unique_short_name_per_site_subject"
            ),
        ),
    ]
