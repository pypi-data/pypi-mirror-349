from _typeshed import Incomplete
from typing import Dict, List, Union

class UdsClient:
    console: Incomplete
    print: Incomplete
    tp: Incomplete
    cmds: Incomplete
    ctx: Incomplete
    last_progress: int
    show_progress: bool
    def __init__(self) -> None: ...
    def after_recv(self, resp: str, resp_bytes, ctx): ...
    def before_send(self, cmd: str, ctx): ...
    def run(self, cmds: List[str], tp, ctx: Dict, timeout) -> bool: ...
    def print_tx(self, line: str, functional: bool = ..., with_crc8: bool = ...) -> Union[str, None]: ...
    def print_rx(self, line: str) -> Union[str, None]: ...
    def print_process(self, current, total) -> None: ...
