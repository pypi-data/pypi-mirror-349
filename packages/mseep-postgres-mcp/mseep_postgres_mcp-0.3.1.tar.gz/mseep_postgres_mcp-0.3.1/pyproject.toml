[project]
name = "mseep-postgres-mcp"
version = "0.3.1"
description = "PostgreSQL Tuning and Analysis Tool"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "mcp[cli]>=1.5.0",
    "psycopg[binary]>=3.2.6",
    "humanize>=4.8.0",
    "pglast==7.2.0",
    "attrs>=25.3.0",
    "psycopg-pool>=3.2.6",
    "instructor>=1.7.9",
]
license = "mit"
license-files = [
    "LICENSE",
]
authors = [
    { name = "mseep", email = "support@skydeck.ai" },
]
maintainers = [
    { name = "mseep", email = "support@skydeck.ai" },
]

[project.scripts]
postgres-mcp = "postgres_mcp:main"

[build-system]
requires = [
    "hatchling",
]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
pythonpath = [
    "./src",
]
asyncio_default_fixture_loop_scope = "function"

[tool.black]
line-length = 150

[tool.ruff]
line-length = 150
target-version = "py38"
exclude = [
    ".venv*",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "W",
    "N",
    "UP",
    "RUF",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = [
    "postgres-mcp",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.12"
strictParameterNullChecking = true
reportMissingTypeStubs = false
reportPrivateUsage = true
reportUntypedFunctionDecorator = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportUnnecessaryCast = true

[tool.hatch.build.targets]

[dependency-groups]
dev = [
    "docker>=7.1.0",
    "pyright==1.1.398",
    "pytest-asyncio>=0.26.0",
    "pytest>=8.3.5",
    "ruff==0.11.2",
]
