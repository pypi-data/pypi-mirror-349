Metadata-Version: 2.3
Name: mapbiomas-downloader
Version: 2.2.0
Summary: Ferramenta para download de arquivos GeoTIFF do MapBiomas para munic√≠pios ou estados brasileiros
License: MIT
Author: Ricardo Malnati
Requires-Python: >=3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: aiohttp (>=3.8.0)
Requires-Dist: geopandas (>=0.14.0)
Requires-Dist: importlib-resources (>=5.12.0)
Requires-Dist: pandas (>=2.0.0)
Requires-Dist: playwright (>=1.40.0)
Requires-Dist: rasterio (>=1.3.7)
Project-URL: Repository, https://github.com/malnati/mapbiomas-downloader
Description-Content-Type: text/markdown

# MapBiomas Downloader

[![GitHub license](https://img.shields.io/github/license/malnati/mapbiomas-downloader)](https://github.com/malnati/mapbiomas-downloader/blob/main/LICENSE)
[![Python Version](https://img.shields.io/badge/python-3.12-blue.svg)](https://www.python.org/downloads/release/python-3120/)
[![Version](https://img.shields.io/badge/version-2.0.0-green.svg)](https://github.com/malnati/mapbiomas-downloader/releases)
[![PyPI version](https://badge.fury.io/py/mapbiomas-downloader.svg)](https://pypi.org/project/mapbiomas-downloader/)
[![Downloads](https://static.pepy.tech/badge/mapbiomas-downloader)](https://pepy.tech/project/mapbiomas-downloader)
[![GitHub issues](https://img.shields.io/github/issues/malnati/mapbiomas-downloader)](https://github.com/malnati/mapbiomas-downloader/issues)
[![Docker](https://img.shields.io/badge/docker-supported-blue.svg)](https://github.com/malnati/mapbiomas-downloader/tree/main/.docker)

Ferramenta para download e recorte de arquivos GeoTIFF do MapBiomas utilizando shapefile.

## üöÄ Novidades

- **Scripts para todos os estados**: Agora temos scripts espec√≠ficos para todos os 27 estados/UF do Brasil
- **Limpeza autom√°tica**: Remo√ß√£o autom√°tica de diret√≥rios vazios ap√≥s cada processamento
- **Suporte a Docker**: Execu√ß√£o em cont√™iner Docker sem precisar configurar o ambiente localmente
- **Melhorias no Makefile**: Comandos para Docker para todos os 27 estados brasileiros
- **Docker All-States**: Comando para processar todos os estados automaticamente via Docker

## Requisitos de Acesso

### Conex√µes Externas

O MapBiomas Downloader realiza as seguintes conex√µes externas durante sua execu√ß√£o:

- **Servidores do MapBiomas**: Para download dos arquivos raster GeoTIFF da cole√ß√£o nacional
  - URL base: `https://storage.googleapis.com/mapbiomas-public/` 
  - Protocolo: HTTPS (porta 443)
  - Frequ√™ncia: Uma conex√£o por ano solicitado para download
  - Dados trafegados: Arquivos GeoTIFF de grande tamanho (podem chegar a v√°rios GB por ano)

- **Google Cloud Storage**: Os dados do MapBiomas s√£o hospedados no Google Cloud Storage
  - Este acesso √© transparente para o usu√°rio, pois √© tratado pelos servidores do MapBiomas

- **PyPI (durante a instala√ß√£o)**: Para download de depend√™ncias Python
  - URL: `https://pypi.org`
  - Protocolo: HTTPS (porta 443)
  - Frequ√™ncia: Apenas durante instala√ß√£o inicial ou atualiza√ß√µes

### Acessos ao Sistema de Arquivos

A ferramenta realiza os seguintes acessos ao sistema de arquivos:

#### Modo Local

- **Leitura**:
  - Diret√≥rio `shape/`: Leitura dos arquivos shapefile (.shp, .dbf, .prj, etc.)
  - Arquivos de configura√ß√£o e scripts

- **Escrita**:
  - Diret√≥rio `downloads_mapbiomas/`: Armazenamento dos arquivos GeoTIFF baixados e recortados
  - Cria√ß√£o de subdiret√≥rios por ano
  - Remo√ß√£o autom√°tica de diret√≥rios vazios

#### Modo Docker

- **Volumes Mapeados**:
  - `/app/downloads_mapbiomas`: Mapeado para o diret√≥rio local `./downloads_mapbiomas`
  - `/app/shape`: Mapeado para o diret√≥rio local `./shape`
  
- **Permiss√µes**:
  - O cont√™iner precisa de permiss√µes de leitura/escrita nos volumes mapeados
  - Os arquivos criados pelo cont√™iner ter√£o o propriet√°rio definido como o usu√°rio que executa o Docker

#### Biblioteca Python (import)

Quando importado como uma biblioteca Python:

- A fun√ß√£o `baixar_e_recortar_por_shapefile()` precisa de:
  - Permiss√µes de leitura nos arquivos shapefile
  - Permiss√µes de escrita no diret√≥rio de sa√≠da especificado
  - Acesso √† internet para download dos rasters nacionais

- A fun√ß√£o `limpar_diretorios_vazios()` precisa de:
  - Permiss√µes para remover diret√≥rios no caminho especificado

### Requisitos de Firewall

Para uso completo da ferramenta, o firewall deve permitir:

- Conex√µes HTTPS de sa√≠da (porta 443) para os dom√≠nios:
  - `storage.googleapis.com`
  - `pypi.org` (apenas durante instala√ß√£o)

### Considera√ß√µes para Ambientes Restritos

Em ambientes com pol√≠ticas de seguran√ßa rigorosas:

- Considere pr√©-baixar os rasters nacionais e usar a ferramenta apenas para o recorte
- Arquivos baixados s√£o armazenados localmente e reusados, minimizando downloads redundantes
- Para total isolamento, todos os dados necess√°rios podem ser obtidos previamente e a ferramenta pode operar offline para recortes

## Instala√ß√£o

### Requisitos

- Python 3.12+
- Poetry
- Depend√™ncias: geopandas, rasterio (instaladas automaticamente)

### Configura√ß√£o do ambiente

1. Clone o reposit√≥rio:
```bash
git clone https://github.com/malnati/mapbiomas-downloader.git
cd mapbiomas-downloader
```

2. Configure o ambiente Python com pyenv (recomendado):
```bash
pyenv install 3.12
pyenv local 3.12
```

3. Instale as depend√™ncias com Poetry:
```bash
poetry install
```

## Uso do downloader

O downloader pode ser executado atrav√©s de scripts espec√≠ficos para cada estado ou usando o script gen√©rico:

### Scripts por estado

O projeto disponibiliza scripts espec√≠ficos para todos os estados brasileiros:

```bash
# Exemplo para o Distrito Federal
./BRDF.sh

# Exemplo para S√£o Paulo
./BRSP.sh 

# Exemplo para Sergipe
./BRSE.sh
```

Os scripts dispon√≠veis contemplam todos os 27 estados/UF brasileiros:
- `BRAC.sh` - Acre
- `BRAL.sh` - Alagoas
- `BRAM.sh` - Amazonas
- `BRAP.sh` - Amap√°
- `BRBA.sh` - Bahia
- `BRCE.sh` - Cear√°
- `BRDF.sh` - Distrito Federal
- `BRES.sh` - Esp√≠rito Santo
- `BRGO.sh` - Goi√°s
- `BRMA.sh` - Maranh√£o
- `BRMG.sh` - Minas Gerais
- `BRMS.sh` - Mato Grosso do Sul
- `BRMT.sh` - Mato Grosso
- `BRPA.sh` - Par√°
- `BRPB.sh` - Para√≠ba
- `BRPE.sh` - Pernambuco
- `BRPI.sh` - Piau√≠
- `BRPR.sh` - Paran√°
- `BRRJ.sh` - Rio de Janeiro
- `BRRN.sh` - Rio Grande do Norte
- `BRRO.sh` - Rond√¥nia
- `BRRR.sh` - Roraima
- `BRRS.sh` - Rio Grande do Sul
- `BRSC.sh` - Santa Catarina
- `BRSE.sh` - Sergipe
- `BRSP.sh` - S√£o Paulo
- `BRTO.sh` - Tocantins

Cada script est√° configurado com o shapefile espec√≠fico do estado e o c√≥digo IBGE do munic√≠pio da capital para o modo de teste.

### Baixar e recortar usando o script gen√©rico

Tamb√©m √© poss√≠vel usar o script gen√©rico, especificando manualmente o shapefile:

```bash
./downloader.sh --shapefile shape/DF/APPS_1.shp --ano-inicio 2020 --ano-fim 2021
```

**Nota importante:** Os arquivos shape n√£o est√£o inclu√≠dos no reposit√≥rio. Voc√™ deve baixar os shapefiles separadamente e salv√°-los no diret√≥rio `shape`. Exemplo de estrutura:
```
shape/
  DF/
    seu_shapefile.shp
    seu_shapefile.dbf
    seu_shapefile.prj
    ...
  SE/
    outro_shapefile.shp
    ...
```

O shapefile deve conter uma das seguintes op√ß√µes:
- O campo `CD_MUN` com c√≥digos IBGE (7 d√≠gitos) dos munic√≠pios
- O campo `cod_imovel` com valor no formato "UF-CODIGO-XXXX" (ex: "DF-5300108-XXXX")

Os arquivos recortados ser√£o salvos em pastas por ano, cada um com o nome do c√≥digo do munic√≠pio:
```
downloads_mapbiomas/
  2020/
    5300108.tif
  2021/
    5300108.tif
```

### Limpeza de diret√≥rios vazios

O sistema agora inclui uma funcionalidade para remover diret√≥rios vazios automaticamente ap√≥s cada processamento. Esta funcionalidade:

- Remove subdiret√≥rios vazios em `downloads_mapbiomas`
- √â executada automaticamente ap√≥s cada processamento
- Mant√©m sua estrutura de diret√≥rios organizada
- Implementada tanto na fun√ß√£o `baixar_e_recortar_por_shapefile` quanto no bloco `finally` da fun√ß√£o `main`

Para executar esta limpeza manualmente, use:
```bash
make clean-empty-dirs
```

### Modo de teste

O downloader pode ser executado em modo de teste, sem baixar ou processar arquivos reais:

```bash
./downloader.sh --shapefile shape/DF/APPS_1.shp --teste

# Ou, para o script espec√≠fico do DF:
./BRDF.sh --teste
```

No modo de teste:
- O shapefile n√£o precisa existir fisicamente
- Os diret√≥rios s√£o criados, mas os arquivos .tif n√£o s√£o gerados
- A simula√ß√£o usa o c√≥digo do munic√≠pio da capital do estado como exemplo
- √ötil para testar a configura√ß√£o sem consumir recursos

### Docker

O projeto suporta execu√ß√£o em Docker, o que elimina a necessidade de configurar o ambiente Python e depend√™ncias localmente.

#### Configura√ß√£o do Docker

Os arquivos de configura√ß√£o Docker est√£o na pasta `.docker/`:
- `Dockerfile`: Define a imagem com Python 3.12 e todas as depend√™ncias necess√°rias
- `docker-compose.yaml`: Configura os servi√ßos, volumes e comandos para execu√ß√£o

#### Construir a imagem Docker

```bash
make docker-build
```

#### Executar no Docker

O projeto oferece comandos Docker para todos os 27 estados brasileiros:

```bash
# Executar download para um estado espec√≠fico no Docker
make docker-df    # Distrito Federal
make docker-sp    # S√£o Paulo 
make docker-rj    # Rio de Janeiro
make docker-mg    # Minas Gerais
make docker-ba    # Bahia
# ... e assim por diante para todos os estados

# Executar download para todos os estados de uma vez
make docker-all-states

# Limpar diret√≥rios vazios 
make docker-clean

# Executar comando personalizado
make docker-custom CMD="python -m src.downloader.downloader --shapefile /app/shape/DF/APPS_1.shp"
```

Lista completa de comandos Docker dispon√≠veis:
- `docker-ac` - Acre
- `docker-al` - Alagoas
- `docker-am` - Amazonas
- `docker-ap` - Amap√°
- `docker-ba` - Bahia
- `docker-ce` - Cear√°
- `docker-df` - Distrito Federal
- `docker-es` - Esp√≠rito Santo
- `docker-go` - Goi√°s
- `docker-ma` - Maranh√£o
- `docker-mg` - Minas Gerais
- `docker-ms` - Mato Grosso do Sul
- `docker-mt` - Mato Grosso
- `docker-pa` - Par√°
- `docker-pb` - Para√≠ba
- `docker-pe` - Pernambuco
- `docker-pi` - Piau√≠
- `docker-pr` - Paran√°
- `docker-rj` - Rio de Janeiro
- `docker-rn` - Rio Grande do Norte
- `docker-ro` - Rond√¥nia
- `docker-rr` - Roraima
- `docker-rs` - Rio Grande do Sul
- `docker-sc` - Santa Catarina
- `docker-se` - Sergipe
- `docker-sp` - S√£o Paulo
- `docker-to` - Tocantins
- `docker-all-states` - Todos os estados

Voc√™ tamb√©m pode modificar o arquivo `.docker/docker-compose.yaml` para personalizar a execu√ß√£o ou executar diretamente com docker-compose:

```bash
cd .docker
docker-compose run --rm downloader-df      # Para o DF
docker-compose run --rm downloader-sp      # Para S√£o Paulo
docker-compose run --rm downloader-all-states  # Para todos os estados
```

#### Volumes no Docker

Os seguintes volumes s√£o mapeados automaticamente:
- `./downloads_mapbiomas` ‚Üí `/app/downloads_mapbiomas` (para os arquivos baixados)
- `./shape` ‚Üí `/app/shape` (para os arquivos shapefile)

#### Vari√°veis de ambiente no Docker

O Docker est√° configurado com algumas vari√°veis de ambiente importantes:
- `PYTHONPATH=/app`: Define o caminho para importa√ß√£o dos m√≥dulos Python
- `V_MAPBIOMAS_REPLACE=1`: Controla se arquivos existentes ser√£o substitu√≠dos (0) ou mantidos (1)
- `SHAPEFILE_DIR=/app/shape`: Diret√≥rio onde os shapefiles devem ser colocados
- `DOWNLOAD_DIR=/app/downloads_mapbiomas`: Diret√≥rio onde os arquivos baixados ser√£o salvos

### Onde obter shapefiles

#### Fontes de shapefiles

1. **Shapefiles oficiais do IBGE**:
   - [Portal de Mapas do IBGE](https://portaldemapas.ibge.gov.br/portal.php#mapa222579)
   - [Download de malhas municipais](https://www.ibge.gov.br/geociencias/organizacao-do-territorio/malhas_territoriais/15774-malhas.html)

2. **Portais de dados abertos**:
   - [Infraestrutura Nacional de Dados Espaciais (INDE)](https://www.inde.gov.br/)
   - [Portal Brasileiro de Dados Abertos](https://dados.gov.br/)

3. **Outros recursos regionais**:
   - [Geoportal SEDUH-DF](https://www.geoportal.seduh.df.gov.br/geoportal/)
   - [DataGEO S√£o Paulo](https://datageo.ambiente.sp.gov.br/)

#### Exemplo pr√°tico: Baixando e usando shapefile do IBGE

```bash
# Criar diret√≥rio para shapefiles do Brasil
mkdir -p shape/BR
cd shape/BR

# Baixar shapefile dos munic√≠pios do Brasil (2020)
wget https://geoftp.ibge.gov.br/organizacao_do_territorio/malhas_territoriais/malhas_municipais/municipio_2020/Brasil/BR/BR_Municipios_2020.zip
unzip BR_Municipios_2020.zip
cd ../..

# Executar o downloader com este shapefile
./downloader.sh --shapefile shape/BR/BR_Municipios_2020.shp --ano-inicio 2020 --ano-fim 2020
```

**Observa√ß√£o importante**: Os shapefiles n√£o est√£o inclu√≠dos neste reposit√≥rio devido ao tamanho dos arquivos e quest√µes de licenciamento. Cada usu√°rio deve baixar os shapefiles desejados de fontes oficiais.

### Execu√ß√£o sem par√¢metros

Se o script for executado sem o par√¢metro `--shapefile`, ser√° exibida uma mensagem de erro.

```bash
./downloader.sh
# Mostrar√° mensagem de erro e pedir√° para especificar um shapefile
```

### Op√ß√µes dispon√≠veis

- `--shapefile` ou `-s`: Caminho para shapefile com limites municipais (obrigat√≥rio)
- `--ano-inicio` ou `-i`: Ano inicial para download (padr√£o: 1985)
- `--ano-fim` ou `-f`: Ano final para download (padr√£o: 2023)
- `--diretorio` ou `-d`: Diret√≥rio base para salvar os arquivos (padr√£o: downloads_mapbiomas)
- `--teste` ou `-t`: Executa em modo de teste (sem download real)
- `--limite-feicoes` ou `-l`: Limita o n√∫mero de fei√ß√µes processadas (√∫til para shapefiles grandes)
- `--substituir` ou `-r`: Substitui arquivos existentes sem perguntar
- `--manter` ou `--usar-existentes`: Mant√©m arquivos existentes sem perguntar
- `--help` ou `-h`: Exibe mensagem de ajuda

**Anos dispon√≠veis no MapBiomas**:
Atualmente, o MapBiomas disponibiliza dados apenas para os seguintes anos:
1985, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023

Se voc√™ especificar anos fora desta lista, o aplicativo automaticamente processar√° apenas os anos dispon√≠veis dentro do intervalo solicitado.

## Uso com Makefile

O projeto fornece um Makefile completo para facilitar a execu√ß√£o de todas as tarefas:

```bash
# Comandos para ambiente local
make setup                    # Configura o ambiente de desenvolvimento
make install-deps             # Instala depend√™ncias necess√°rias
make build                    # Constr√≥i o pacote para distribui√ß√£o
make clean                    # Remove arquivos gerados automaticamente
make publish VERSION=patch    # Incrementa vers√£o (patch) e publica no PyPI

# Comandos para download e processamento
make download-shapefile SHAPEFILE=shape/DF/APPS_1.shp ANO_INICIO=2020 ANO_FIM=2021
make clean-empty-dirs         # Remove diret√≥rios vazios em downloads_mapbiomas

# Comandos para estados espec√≠ficos
make df                       # Executar download para o Distrito Federal
make sp                       # Executar download para S√£o Paulo
make se                       # Executar download para Sergipe
make all-states               # Executar download para todos os estados

# Comandos Docker para estados espec√≠ficos
make docker-df                # Executa o download para o DF no Docker
make docker-sp                # Executa o download para S√£o Paulo no Docker
make docker-all-states        # Executa o download para todos os estados no Docker

# Outros comandos Docker
make docker-build             # Constr√≥i a imagem Docker
make docker-help              # Exibe ajuda do downloader no Docker
make docker-clean             # Remove diret√≥rios vazios via Docker
make docker-custom CMD="cmd"  # Executa comando personalizado no Docker
```

Para ver a lista completa de comandos dispon√≠veis:
```bash
make help
```

## Funcionamento interno

O downloader opera da seguinte forma:

1. Baixa o raster nacional completo do MapBiomas para cada ano solicitado
2. Verifica se o shapefile cont√©m o campo `CD_MUN` ou `cod_imovel` para identificar munic√≠pios
3. Para cada geometria no shapefile, recorta o raster nacional usando a biblioteca `rasterio`
4. Salva os rasters recortados em diret√≥rios organizados por ano
5. Remove automaticamente diret√≥rios vazios ap√≥s o processamento

Isso permite processar grandes volumes de dados sem precisar baixar m√∫ltiplos arquivos menores.

### Fun√ß√£o de limpeza de diret√≥rios vazios

A nova fun√ß√£o `limpar_diretorios_vazios` implementada no m√≥dulo `downloader.py`:
- Percorre recursivamente o diret√≥rio base
- Identifica subdiret√≥rios que n√£o cont√™m arquivos nem outros diret√≥rios
- Remove diret√≥rios vazios de baixo para cima (bottom-up)
- Preserva o diret√≥rio base mesmo que vazio

## Uso da Biblioteca

```python
from src.downloader import verificar_cd_mun, extrair_cd_mun, baixar_e_recortar_por_shapefile, limpar_diretorios_vazios
import asyncio

# Verificar se shapefile tem campo CD_MUN
info = verificar_cd_mun("caminho/para/shapefile.shp")

# Extrair c√≥digo de munic√≠pio de string formatada
codigo = extrair_cd_mun("DF-5300108-XYZ123")  # "5300108"

# Baixar e recortar
async def download():
    resultados = await baixar_e_recortar_por_shapefile(
        shapefile_path="caminho/para/shapefile.shp",
        ano_inicio=2020,
        ano_fim=2021,
        diretorio_base="downloads"
    )
    print(f"Munic√≠pios processados: {len(resultados)}")
    
    # Limpar diret√≥rios vazios ap√≥s processamento
    limpar_diretorios_vazios("downloads")

# Executar fun√ß√£o ass√≠ncrona
asyncio.run(download())
```

## Contribui√ß√£o

1. Sempre crie e ative um ambiente virtual antes de trabalhar no projeto
2. Execute os testes antes de enviar suas altera√ß√µes
3. Mantenha a documenta√ß√£o atualizada

## Licen√ßa

Este projeto est√° licenciado sob a licen√ßa MIT. Veja o arquivo LICENSE para mais detalhes.

## Cr√©ditos

**Autor:** Ricardo Malnati

**Reposit√≥rio:** [https://github.com/malnati/mapbiomas-downloader](https://github.com/malnati/mapbiomas-downloader)

**Contribui√ß√µes:** Pull requests s√£o bem-vindos. Para altera√ß√µes importantes, abra primeiro uma issue para discutir o que voc√™ gostaria de mudar.

