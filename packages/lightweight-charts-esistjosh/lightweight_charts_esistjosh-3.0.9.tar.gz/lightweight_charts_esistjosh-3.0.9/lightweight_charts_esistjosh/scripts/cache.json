{
  "ohlc": "OHLC",
  "volume": "Volume",
  "code": "\n\n\n// * @EsIstJosh\n// * This feature implements a variation of PineTS, source : <https://github.com/alaa-eddine/PineTS> and is \n// * licensed under the GNU AGPL v3.0. V\n// * The original AGPL license text is included in the AGPL_LICENSE file in the repository.\n// * \n// * Note: This file imports modules that remain under the MIT license \n// * The original MIT license text is included in the MIT_LICENSE file in the repository.\n// *\n// * For the full text of the GNU AGPL v3.0, see <https://www.gnu.org/licenses/agpl-3.0.html>.\n\n\n// * //-----------------Work in Progress...-------------------//\n// * EXAMPLE SCRIPT CONVERSION // \n// * PINE SCRIPT                                                                    ⥵    //PINE TS                      \n// * \n// * //@version=5                                                                   ⥵    // @version=5\n// * indicator('Simple EMA','EMA', overlay=true)                                    ⥵    indicator('Simple EMA','EMA', {overlay=true})              \n// *                                                                                ⥵            \n// * ema9 = ta.ema(close, 9);                                                       ⥵    const ema9 = ta.ema(close, 9)                      \n// * ema18 = ta.ema(close, 18);                                                     ⥵    const ema18 = ta.ema(close, 18)\n// * plot(ema9,'EMA9', color= #ff0000, linewidth= 2, style = plot.style_line)       ⥵    plot(ema9,'EMA9',{ style: 'line', color: '#ff0000', linewidth: 2 })\n// * plot(ema18,'EMA18', color= #ff7700, linewidth= 2, style = plot.style_line)     ⥵    plot(ema18,'EMA18',{ style: 'line', color: '#ff7700', linewidth: 2 })\n\n\n\n  indicator('Title', 'TA', { overlay : true })\n  // \n  const ema1 = ta.ema(close,16)\n  const ema2 = ta.ema(close,32)\n  const ema3 = ta.ema(close,48)\n  const ema4 = ta.ema(close,64)\n  const ema5 = ta.ema(close,96)\n  const ema6 = ta.ema(close,128)\n  plot(ema1,'EMA1',{ style: 'line', color: '#ff0000', linewidth: 2 })\n  plot(ema2,'EMA2',{ style: 'cross', color: '#ff7700', linewidth: 2 })\n  plot(ema3,'EMA3',{ style: 'circles', color: '#ffee00', linewidth: 2 })\n  plot(ema4,'EMA4',{ style: '<>', color: '#00ff00', linewidth: 2 })\n  plot(ema5,'EMA5',{ style: 'triangleUp', color: '#0050ff', linewidth: 2 })\n  plot(ema6,'EMA6',{ style: 'arrowDown', color: '#ffffff', linewidth: 2 })\n  fill('EMA1','EMA2')\n  fill('EMA2','EMA3')\n  fill('EMA3','EMA4')\n  fill('EMA4','EMA5')\n  fill('EMA5','EMA6')\n\n      ",
  "pineTSInstance": null,
  "n": null
}