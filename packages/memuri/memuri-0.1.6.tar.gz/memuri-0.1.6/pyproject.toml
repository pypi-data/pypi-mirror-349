[tool.poetry]
name = "memuri"
version = "0.1.6"
description = "Memuri is a self‑hosted memory infrastructure for AI applications, offering a unified, pluggable SDK to persist and retrieve conversational context with sub‑second latency. It enables any AI agent or assistant to remember key information across sessions—so your apps never forget what matters, while retaining full flexibility to swap storage backends, embedding models, and retrieval strategies."
authors = ["Ankhbayasgalan anhbaysgalan1@gmail.com"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/username/memuri"
packages = [{include = "memuri", from = "src"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.10"
uvloop = "0.21.0"
asyncpg = "0.30.0"
sqlalchemy = "2.0.41"
redis = "6.1.0"
faiss-cpu = "1.11.0"
celery = "5.5.2"
openai = "1.79.0"
google-genai = "1.16.1"
prometheus-client = "0.22.0"
opentelemetry-sdk = "1.33.1"
hydra-core = "1.3.2"
pydantic = "2.11.4"
pydantic-settings = "^2.1.0"
sentence-transformers = "^2.2.2"
pgvector = "0.4.1"
pymilvus = "^2.3.3"
qdrant-client = "^1.7.0"
orjson = "^3.9.10"
hnswlib = "^0.7.0"
mkdocs = "1.6.1"
mkdocstrings = "0.29.1"
aioredis = "^2.0.1"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pytest = "8.3.5"
pytest-asyncio = "0.26.0"
pytest-cov = "^4.1.0"
mkdocs-material = "^9.4.8"

[tool.poetry.scripts]
memuri = "memuri.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["src/memuri/tests"]
pythonpath = [".", "src"]
asyncio_default_fixture_loop_scope = "function"
addopts = "--import-mode=importlib"