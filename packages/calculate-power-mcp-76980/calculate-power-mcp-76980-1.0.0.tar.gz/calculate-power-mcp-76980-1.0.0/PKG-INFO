Metadata-Version: 2.1
Name: calculate-power-mcp-76980
Version: 1.0.0
Summary: A Model Context Protocol Server implementation
Home-page: https://github.com/mcp-developer/mcp-server
Author: MCP Developer
Author-email: mcp@example.com
License: MIT License
        
        Copyright (c) 2024 Your Name
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# MCP Power Server

这是一个基于 Model Context Protocol 的幂运算服务器实现。

## 安装

```bash
pip install mcp-server
```

## 使用方法

### 服务器端

```python
from mcp_server import MCPPowerServer

server = MCPPowerServer()
server.run(transport='stdio')
```

### 客户端

```python
from fastmcp import Client
import asyncio

async def main():
    client = Client("server.py")
    async with client:
        result = await client.call_tool(
            "calculate_power",
            arguments={"base": 8.0, "exponent": 2.5}
        )
        print(f"计算结果: {result}")

if __name__ == "__main__":
    asyncio.run(main())
```

## 功能

- 提供幂运算功能
- 支持浮点数计算
- 使用 stdio 传输协议

## 依赖

- Python >= 3.7
- fastmcp

## 许可证

MIT License
