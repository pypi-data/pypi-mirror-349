[tool.poetry]
name = "short-unique-id"                          # PyPI project name
version = "0.2.1"                                 # bump before every upload
description = "Tiny, dependency-free Snowflake-style and random short ID generator for Python."
authors = ["Purushot14 <prakash.purushot@gmail.com>"]
readme = "README.md"
license = "MIT"

homepage = "https://github.com/Purushot14/short-unique-id"
repository = "https://github.com/Purushot14/short-unique-id"
documentation = "https://github.com/Purushot14/short-unique-id#readme"

keywords = ["shortid", "short-id", "snowflake", "uuid", "unique-id", "identifier"]

# if your package folder is `short_unique_id/`
packages = [{ include = "short_unique_id" }]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]

[tool.poetry.dependencies]
python = ">=3.9"

[tool.poetry.group.dev.dependencies]
ruff = "0.11.10"
pytest = "8.3.5"
pytest-cov = "5.0.0"
setuptools = "^80.7.1"
pre-commit = "^3.2.0"

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "B", "I", "UP", "N", "C"]
fixable = ["ALL"]
extend-select = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["short_unique_id"]
extra-standard-library = ["_socket"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
