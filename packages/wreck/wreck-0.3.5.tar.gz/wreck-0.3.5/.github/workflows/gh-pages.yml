# Licensed under the AGPLv3+ License: https://www.gnu.org/licenses/
# For details: https://github.com/msftcangoblowm/wreck/blob/master/NOTICE.txt
name: Deploy Sphinx docs to gh pages

on:
  push:
    branches: [$default-branch]
    #tags:
    #  - '*.*.*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: false

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  LOCK_SUFFIX: .lock

jobs:
  pages:
    name: publish github pages
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write
    steps:
    - name: platform set locale
      run: |
        sudo locale-gen en_US.UTF-8
        sudo update-locale

    - name: Checkout the repo
      uses: actions/checkout@v4.2.2
      with:
        # fetch all branches and tags instead of only fetching the ref/SHA that triggered the workflow
        fetch-depth: 0

    # https://stackoverflow.com/questions/66349002/get-latest-tag-git-describe-tags-when-repo-is-cloned-with-depth-1
    # echo "tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT
    - name: Get latest tag
      id: vars
      run: |
        echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT

    - name: Install Python
      uses: actions/setup-python@v5.6.0
      with:
        python-version: '3.13' # default of sphinx-notes/pages
        # cache: pip
        # cache-dependency-path: |
        #  requirements/*${{ env.LOCK_SUFFIX }}
        #  docs/requirements${{ env.LOCK_SUFFIX }}

    - name: Install dependencies for build
      run: |
        python -m pip install build wheel setuptools-scm 'click==8.1.7; python_version < "3.10"' 'click==8.2.0; python_version >= "3.10"' -r requirements/prod${{ env.LOCK_SUFFIX }} -r requirements/kit${{ env.LOCK_SUFFIX }}

    # Create generated files: version file and .lnk files. sdist tarball ignored
    - name: Build sdist to run plugins. Create generated files
      run: |
        python -m build

    - name: deploy Sphinx --> Github pages
      id: deployment
      uses: sphinx-notes/pages@a82c349d744aae9913f1a41a597ea753f96b3030  # 3.2 MIT
      with:
        checkout: false
        requirements_path: docs/requirements${{ env.LOCK_SUFFIX }}
        documentation_path: docs  # explicit better than implicit
