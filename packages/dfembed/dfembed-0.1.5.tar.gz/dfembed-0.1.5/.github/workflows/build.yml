# This file is autogenerated by maturin v1.8.3
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Install NASM
        run: choco install nasm
      - name: Install protobuf compiler
        run: choco install protoc
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [macos-13, macos-14, macos-15]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install protobuf compiler
        run: brew install protobuf
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.runner == 'macos-13' && 'x86_64' || (matrix.runner == 'macos-14' || matrix.runner == 'macos-15') && 'aarch64' }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.runner }}-py${{ matrix.python-version }}
          path: dist

  manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_tag: ["cp39-cp39", "cp310-cp310", "cp311-cp311", "cp312-cp312"]
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
      options: --user root
    env:
      PYTHON_TAG: ${{ matrix.python_tag }}
      PYTHON_BIN: /opt/python/${{ matrix.python_tag }}/bin/python
      PATH: /opt/python/${{ matrix.python_tag }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          yum install -y curl gcc gcc-c++ make openssl-devel pkgconfig perl perl-IPC-Cmd unzip e2fsprogs-libs krb5-libs krb5-devel

      - name: Install newer protoc
        run: |
          PROTOC_VERSION="3.19.4"
          PROTOC_ZIP="protoc-${PROTOC_VERSION}-linux-x86_64.zip"
          curl -OL "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP}"
          unzip -o "${PROTOC_ZIP}" -d /usr/local bin/protoc
          unzip -o "${PROTOC_ZIP}" -d /usr/local include/*
          rm -f "${PROTOC_ZIP}"

      - name: Install build dependencies
        run: |
          $PYTHON_BIN -m pip install --upgrade pip maturin

      - name: Install Rust toolchain
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          . $HOME/.cargo/env

      - name: Add Cargo to PATH for future steps
        run: echo "PATH=$HOME/.cargo/bin:$PATH" >> $GITHUB_ENV

      - name: Build wheels
        run: |
          maturin build --release --out dist --manylinux 2_28 -i $PYTHON_BIN

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux_2_28_${{ matrix.python_tag }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [windows, macos, manylinux, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
