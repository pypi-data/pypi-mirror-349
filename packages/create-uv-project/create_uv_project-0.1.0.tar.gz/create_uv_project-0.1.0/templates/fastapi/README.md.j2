# {{ project_name }}

This is a FastAPI project, `{{ project_name }}`, generated by `create-uv-project`.

## Description

{{ project_description | default("A cool FastAPI application.") }}

## Features

- FastAPI for high-performance APIs.
- Uvicorn ASGI server.
- Pydantic for data validation.
- `src`-layout structure.
- Pre-configured with Black, Ruff, and Pytest.
- Ready for `uv`!

## Setup and Installation

1.  **Clone the repository (if you haven't already):**
    ```bash
    # git clone ...
    # cd {{ project_slug }}
    ```

2.  **Create and activate a virtual environment using `uv`:**
    ```bash
    uv venv
    source .venv/bin/activate  # On Windows: .venv\\Scripts\\activate
    ```

3.  **Install dependencies (including development and test tools):**
    ```bash
    uv pip install -e ".[dev,test]"
    ```

## Running the Development Server

To run the FastAPI application with Uvicorn in development mode (with auto-reload):

```bash
# This uses the script defined in pyproject.toml
uv run dev
```

This will typically start the server at `http://127.0.0.1:8000`.

You can access the API documentation (Swagger UI) at `http://127.0.0.1:8000/docs` and ReDoc at `http://127.0.0.1:8000/redoc`.

## Running Tests

To run the test suite:

```bash
pytest
```

Or with `uv`:

```bash
uv run pytest
```

To get a coverage report:

```bash
uv run pytest --cov
```

## Code Quality

- **Format code with Black:**
  ```bash
  uv run black src tests
  ```

- **Lint with Ruff:**
  ```bash
  uv run ruff check src tests
  ```

## Environment Variables

This project might use environment variables for configuration. Create a `.env` file from `.env.example` and populate it with your settings:

```bash
cp .env.example .env
# Then edit .env
```

## Project Structure

- `src/{{ project_slug }}/main.py`: Main application file, FastAPI app instance.
- `src/{{ project_slug }}/core/config.py`: Application configuration (e.g., using Pydantic Settings).
- `src/{{ project_slug }}/models/`: Pydantic models for data representation.
- `src/{{ project_slug }}/routers/`: API routers/endpoints.
- `src/{{ project_slug }}/schemas/`: (Optional) Pydantic schemas for request/response validation if distinct from models.
- `tests/`: Test files.

## License

This project is licensed under the MIT License. See the `LICENSE` file (implicitly, via `pyproject.toml`) for details.

Copyright (c) {{ current_year }} {{ author_name }} 