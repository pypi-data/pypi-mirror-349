name: colav_protobuf_utils CI/CD
run-name: ${{ github.actor }} is testing colav_protobuf_utils pypi pkg ðŸš€

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Build Tools
        run: |
          pip install --upgrade pip
          pip install hatch protobuf>=5.29.3

      - name: Build colav_protobuf Package
        run: hatch build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install hatch protobuf>=5.29.3

      - name: Run Tests
        run: hatch test

  deploy:
    name: Publish to PyPI if Release
    needs: test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Install Twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/* -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" --non-interactive --verbose
