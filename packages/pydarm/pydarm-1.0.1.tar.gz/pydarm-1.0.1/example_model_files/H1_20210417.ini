[metadata]
run = O3
model_date = 2021-04-17

# GPS times for which the model is valid
start = 1302710418
end   = 1307116818

# Directory where all the data files (.mat, .txt, .dat) live
#cal_data_root = /ligo/svncommon/aligocalibration/trunk
cal_data_root = /Users/egoetz/lscrepos/pydarm-eg

[interferometer]
name         = H1

[sensing]
# Parameters directly associated with sensing function
# Note the change in gain because the O4 scheme allocates any
# AA gain in the optical gain whereas this was not the case
# in O1-O3
coupled_cavity_optical_gain   = 3.22e6
coupled_cavity_pole_frequency = 410.6
detuned_spring_frequency      = 4.468
detuned_spring_Q              = 52.14
DARM_ERR_counts_per_DCPD_mA   = 3.1868e6 # 5 Hz value during 2021-04-17 measurement suite, 25 avgs, 0.1 Hz binwidth DTT FFT
sensing_sign                  = 1
is_pro_spring                 = 0

# Interferometer arm lengths
x_arm_length = 3994.4704
y_arm_length = 3994.4692

# Anti-aliasing filter parameters
anti_aliasing_rate_string = 16k
anti_aliasing_method      = biquad
#analog_anti_aliasing_file = Common/pyDARM/H1aa.mat
analog_anti_aliasing_file = test/H1aa.mat

# OMC pole frequencies
omc_meas_z_trans_amplifier   =
omc_meas_p_trans_amplifier   = 13.7e3, 17.8e3
omc_meas_z_trans_whitening_A =
omc_meas_p_trans_whitening_A = 17.873e3, 98.2771e3, 86.2587e3
omc_meas_z_trans_whitening_B =
omc_meas_p_trans_whitening_B = 18.046e3, 98.4137e3, 86.7888e3

# OMC path gain ratio and balance
gain_ratio = 1
balance_matrix_A = 1
balance_matrix_B = 1

# This is the compensation filter FOTON export data
# Only add these files if you also put the low frequency poles and zeros
# in the above measured zeros and poles values, otherwise below can be blank
# The same is true if you add the zeros and poles above, you need to add the
# exported FOTON values below
omc_A_fe_compensation =
omc_B_fe_compensation =

# Single pole approximation has too much delay for true length response,
# so here there is an advance (the minus sign on a delay) added. See G1501316
single_pole_approximation_delay_correction = -12e-6

# GDS Compensation for Bad Foton Filter Approximation for High Frequency Roll-Off of Calibration
# This is probably not the right place to put it but we need it for the GDS sensing correction
gds_c_foton_invsensing_tf = Runs/O3/H1/Measurements/Foton/2019-04-04_H1CALCS_InverseSensingFunction_Foton_SRCD-2N_Gain_tf.txt

[digital]
#digital_filter_file           = Common/H1CalFilterArchive/h1omc/H1OMC_1239468752.txt
digital_filter_file           = test/H1OMC_1239468752.txt
digital_filter_bank           = LSC_DARM1, LSC_DARM2
digital_filter_modules_in_use = 1,2,3,4,7,9,10: 3,4,5,6,7
digital_filter_gain           = 400,1

[actuation]
# actuation parameters

# Fill in DARM output matrix values [EX,EY,IX,IY]
darm_output_matrix = 1.0, -1.0, 0.0, 0.0
# Fill in OFF or ON for a 1x4 array [MO,L1,L2,L3] for X and Y arms
darm_feedback_x    = OFF, ON, ON, ON
darm_feedback_y    = OFF, OFF, OFF, OFF

#################
#    x - arm    #
#################
[actuation_x_arm]
darm_feedback_sign = -1  # This should not be changed
# UIM = 1.634     ==> 7.67e-08 (N/ct)
# PUM = 0.02947   ==> 6.036e-10 (N/ct)
# TST = 4.427e-11 ==> 4.727e-12 (N/ct)
uim_NpA       = 1.62958
pum_NpA       = 0.02956
tst_NpV2      = 4.45007e-11
linearization = OFF
actuation_esd_bias_voltage = -9.3

# actuation filter file
#sus_filter_file = Common/H1CalFilterArchive/h1susetmx/H1SUSETMX_1236641144.txt
sus_filter_file = ../../../Volumes/My Stuff/aligocalibration/trunk/Common/H1CalFilterArchive/h1susetmx/H1SUSETMX_1256232808.txt

# TST interferometer sensing and control
tst_isc_inf_name    = ETMX_L3_ISCINF_L
tst_isc_inf_modules =
tst_isc_inf_gain    = 1.0

# TST lock settings
tst_lock_name       = ETMX_L3_LOCK_L
tst_lock_modules    = 5,8,9,10
tst_lock_gain       = 1.0

# TST drive align
tst_drive_align_name     = ETMX_L3_DRIVEALIGN_L2L
tst_drive_align_modules  = 4,5
tst_drive_align_gain     = -35.7

# PUM lock settings
pum_lock_name    = ETMX_L2_LOCK_L
pum_lock_modules = 7
pum_lock_gain    = 23.0

# PUM drive align settings
pum_drive_align_name    = ETMX_L2_DRIVEALIGN_L2L
pum_drive_align_modules = 6,7
pum_drive_align_gain    = 1.0
# L1 needs -1 here, because of poor OSEM convention V
pum_coil_outf_signflip  = 1

# UIM lock settings
uim_lock_name    = ETMX_L1_LOCK_L
uim_lock_modules = 2,10
uim_lock_gain    = 1.06

# UIM dirive align settings
uim_drive_align_name    = ETMX_L1_DRIVEALIGN_L2L
uim_drive_align_modules =
uim_drive_align_gain    = 1.0

# suspension file contains the force to length transfer function
#suspension_file = Common/pyDARM/matlab_scripts/H1susdata_O3.mat
suspension_file = ../../..//Volumes/My Stuff/aligocalibration/trunk/Common/pyDARM/matlab_scripts/20200107_H1_EX_O3_susdata.mat

# Driver parameters and setup. Updated 2019-03-04, LHO aLOG 44469
tst_driver_meas_Z_UL = 129.7e3
tst_driver_meas_Z_LL = 90.74e3
tst_driver_meas_Z_UR = 93.52e3
tst_driver_meas_Z_LR = 131.5e3
tst_driver_meas_P_UL = 3.213e3, 31.5e3
tst_driver_meas_P_LL = 3.177e3, 26.7e3
tst_driver_meas_P_UR = 3.279e3, 26.6e3
tst_driver_meas_P_LR = 3.238e3, 31.6e3
# This is the compensation filter FOTON export data
# Only add these files if you also put the low frequency poles and zeros
# in the above measured zeros and poles values, otherwise below can be blank
# The same is true if you add the zeros and poles above, you need to add the
# exported FOTON values below
tst_driver_fe_compensation =

pum_driver_meas_Z =
pum_driver_meas_P =
pum_driver_fe_compensation =

uim_driver_meas_Z =
uim_driver_meas_P =
uim_driver_fe_compensation =

# Dead reckoned from circuit schematic
tst_driver_DC_gain_VpV_HV = 40
tst_driver_DC_gain_VpV_LV = 1.881
pum_driver_DC_trans_ApV = 2.6847e-4
uim_driver_DC_trans_ApV = 6.1535e-4

# anti imaging filter file settings
anti_imaging_rate_string = 16k
anti_imaging_method      = biquad
#analog_anti_imaging_file = Common/pyDARM/H1aa.mat
analog_anti_imaging_file = test/H1aa.mat
# DAC gain in V/ct note that this is 20 / 2**18
dac_gain = 7.62939453125e-05

unknown_actuation_delay = 15e-6

#################
#    y - arm    #
#################
[actuation_y_arm]
darm_feedback_sign = 1  # This should not be changed
# UIM =      ==>  (N/ct)
# PUM =      ==>  (N/ct)
# TST =      ==>  (N/ct)
uim_NpA       =
pum_NpA       =
tst_NpV2      =
linearization =
actuation_esd_bias_voltage =

# actuation filter file
sus_filter_file =

# TST interferometer sensing and control
tst_isc_inf_name    = ETMY_L3_ISCINF_L
tst_isc_inf_modules =
tst_isc_inf_gain    = 1.0

# TST lock settings
tst_lock_name       = ETMY_L3_LOCK_L
tst_lock_modules    =
tst_lock_gain       = 1.0

# TST drive align
tst_drive_align_name     = ETMY_L3_DRIVEALIGN_L2L
tst_drive_align_modules  =
tst_drive_align_gain     = 1.0

# PUM lock settings
pum_lock_name    = ETMY_L2_LOCK_L
pum_lock_modules =
pum_lock_gain    = 1.0

# PUM drive align settings
pum_drive_align_name    = ETMY_L2_DRIVEALIGN_L2L
pum_drive_align_modules =
pum_drive_align_gain    = 1.0
# L1 needs -1 here, because of poor OSEM convention V
pum_coil_outf_signflip  = 1

# UIM lock settings
uim_lock_name    = ETMY_L1_LOCK_L
uim_lock_modules =
uim_lock_gain    = 1.0

# UIM dirive align settings
uim_drive_align_name    = ETMY_L1_DRIVEALIGN_L2L
uim_drive_align_modules =
uim_drive_align_gain    = 1.0

# suspension file contains the force to length transfer function
suspension_file =

# Driver parameters and setup
tst_driver_meas_Z_UL =
tst_driver_meas_Z_LL =
tst_driver_meas_Z_UR =
tst_driver_meas_Z_LR =
tst_driver_meas_P_UL =
tst_driver_meas_P_LL =
tst_driver_meas_P_UR =
tst_driver_meas_P_LR =
# This is the compensation filter FOTON export data
# Only add these files if you also put the low frequency poles and zeros
# in the above measured zeros and poles values, otherwise below can be blank
# The same is true if you add the zeros and poles above, you need to add the
# exported FOTON values below
tst_driver_fe_compensation =

pum_driver_meas_Z =
pum_driver_meas_P =
pum_driver_fe_compensation =

uim_driver_meas_Z =
uim_driver_meas_P =
uim_driver_fe_compensation =

# Dead reckoned from circuit schematic
tst_driver_DC_gain_VpV_HV = 40
tst_driver_DC_gain_VpV_LV = 1.881
pum_driver_DC_trans_ApV = 2.6847e-4
uim_driver_DC_trans_ApV = 6.1535e-4

# anti imaging filter file settings
anti_imaging_rate_string = 16k
anti_imaging_method      = biquad
analog_anti_imaging_file = trunk/Common/pyDARM/H1aa.mat
# DAC gain in V/ct note that this is 20 / 2**18
dac_gain = 7.62939453125e-05

unknown_actuation_delay = 15e-6

[pcal]
pcal_dewhiten               = 1.0, 1.0
pcal_incidence_angle        = 8.8851

# pcal_etm_watts_per_ofs_volt LHO alog 46846
pcal_etm_watts_per_ofs_volt = 0.13535

# Used for measurements like swept sine or broadband transfer functions
# x-arm ==> 1, y-arm ==> -1
# Change this value only if the Pcal arm for the measurements is different
ref_pcal_2_darm_act_sign    = -1.0

# Pcal Anti-aliasing filter parameters
anti_aliasing_rate_string = 16k
anti_aliasing_method      = biquad
#analog_anti_aliasing_file = Common/pyDARM/H1aa.mat
analog_anti_aliasing_file = test/H1aa.mat

[calcs]
# Here we can put some filter exports for what CAL-CS is doing
# Right now this doesn't do anything
pum_driver_calcs_compensation =
tst_driver_calcs_compensation =

[gds]
# Here we can put some GDS stuff
# Right now this doesn't do anything
pum_driver_gds_compensation =
tst_driver_gds_compensation =
