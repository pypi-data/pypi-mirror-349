# List of reserved names: these may not be used as names of IDS nodes
#
# All lines starting with a '#' are comments and are ignored
#
# HLI methods / special data structures
# multiple HLI
delete
deserialize
dump
get
put
serialize
validate
# Java HLI
copy
reset
# Python HLI
is_empty
# IMASPy
metadata
has_value
# C++ keywords (https://en.cppreference.com/w/cpp/keyword)
alignas
alignof
and
and_eq
asm
atomic_cancel
atomic_commit
atomic_noexcept
auto
bitand
bitor
bool
break
case
catch
char
char8_t
char16_t
char32_t
class
compl
concept
const
consteval
constexpr
constinit
const_cast
continue
co_await
co_return
co_yield
decltype
default
delete
do
double
dynamic_cast
else
enum
explicit
export
extern
false
float
for
friend
goto
if
inline
int
long
mutable
namespace
new
noexcept
not
not_eq
nullptr
operator
or
or_eq
private
protected
public
reflexpr
register
reinterpret_cast
requires
return
short
signed
sizeof
static
static_assert
static_cast
struct
switch
synchronized
template
this
thread_local
throw
true
try
typedef
typeid
typename
union
unsigned
using
virtual
void
volatile
wchar_t
while
xor
xor_eq
# Fortran keywords (https://fortranwiki.org/fortran/show/Keywords)
# Note: it seems fortran has no reserved variable names?
## Java keywords (https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html)
abstract
continue
for
new
switch
assert
default
goto
package
synchronized
boolean
do
if
private
this
break
double
implements
protected
throw
byte
else
import
public
throws
case
enum
instanceof
return
transient
catch
extends
int
short
try
char
final
interface
static
void
class
finally
long
strictfp
volatile
const
float
native
super
while
## Python Keywords (https://docs.python.org/3/reference/lexical_analysis.html#keywords)
False
await
else
import
pass
None
break
except
in
raise
True
class
finally
is
return
and
continue
for
lambda
try
as
def
from
nonlocal
while
assert
del
global
not
with
async
elif
if
or
yield
# Always end with a blank line
