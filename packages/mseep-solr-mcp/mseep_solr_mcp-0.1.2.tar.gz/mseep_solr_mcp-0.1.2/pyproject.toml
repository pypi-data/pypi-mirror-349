[tool.poetry]
name = "mseep-solr-mcp"
version = "0.1.2"
description = "A Python package for accessing Solr indexes via Model Context Protocol (MCP)"
authors = [
    "mseep <support@skydeck.ai>",
]
readme = "README.md"
license = "MIT"
packages = [
    { include = "solr_mcp" },
]
maintainers = [
    "mseep <support@skydeck.ai>",
]

[tool.poetry.scripts]
solr-mcp = "solr_mcp.server:main"
lint = "scripts.lint:main"
format = "scripts.format:main"

[tool.poetry.dependencies]
python = "^3.10"
pysolr = "^3.9.0"
mcp = "^1.4.1"
httpx = "^0.27.0"
pydantic = "^2.6.1"
numpy = "^1.26.3"
markdown = "^3.5.2"
fastapi = "^0.109.2"
uvicorn = "^0.27.1"
python-frontmatter = "^1.1.0"
loguru = "^0.7.3"
kazoo = "^2.10.0"
sqlglot = "^26.11.1"
pytest-mock = "^3.14.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
mypy = "^1.8.0"
flake8 = "^7.0.0"
black = "^24.2.0"
isort = "^5.13.2"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.25.3"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "integration: marks tests that require external services (deselect with '-m \"not integration\"')",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
overrides = [
    { module = "tests.*", disallow_untyped_defs = false, disallow_incomplete_defs = false },
]

[tool.black]
line-length = 88
target-version = [
    "py310",
]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",
]
exclude = [
    ".venv",
    ".git",
    "__pycache__",
    "build",
    "dist",
]

[build-system]
requires = [
    "poetry-core",
]
build-backend = "poetry.core.masonry.api"
