[tool.poetry]
name = "rawjs2dict"
version = "0.0.9"
description = "Library that converts raw JS scripts to Python dictionaries"
authors = ["Blat AI"]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
mini-racer = ">=0.12.4,<0.13"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4,<7.5"
pytest-mock = ">=3.14.0,<3.15"
pytest-cov = ">=5.0.0,<6"
ruff = ">=0.1.14,<0.2"
mypy = ">=1.10.0"

[build-system]
requires = ["poetry>=1.6,<1.7"]
build-backend = "poetry.masonry.api"

[tool.pylint."messages control"]
ignore = ["setup.py", "__init__.py"]
disable = "all"
enable = [
    "empty-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
]

[tool.pyright]
reportMissingTypeArgument = true # Report generic classes used without type arguments
strictListInference = true       # Use union types when inferring types of lists elements, instead of Any

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    # "UP",  # pyupgrade
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

[tool.ruff.lint.isort]
case-sensitive = true
force-single-line = true

[tool.mypy]
python_version = "3.12"
strict = true
exclude = ["bin", "tests"]

[[tool.mypy.overrides]]
module = "py_mini_racer.*"
ignore_missing_imports = true