# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ClientFacingElectrocardiogramClassification(str, enum.Enum):
    SINUS_RHYTHM = "sinus_rhythm"
    ATRIAL_FIBRILLATION = "atrial_fibrillation"
    INCONCLUSIVE = "inconclusive"

    def visit(
        self,
        sinus_rhythm: typing.Callable[[], T_Result],
        atrial_fibrillation: typing.Callable[[], T_Result],
        inconclusive: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ClientFacingElectrocardiogramClassification.SINUS_RHYTHM:
            return sinus_rhythm()
        if self is ClientFacingElectrocardiogramClassification.ATRIAL_FIBRILLATION:
            return atrial_fibrillation()
        if self is ClientFacingElectrocardiogramClassification.INCONCLUSIVE:
            return inconclusive()
