// Copyright 2016 Pixar
//
// Licensed under the terms set forth in the LICENSE.txt file available at
// https://openusd.org/license.
//
// Modified by Jeremy Retailleau.

////////////////////////////////////////////////////////////////////////
// This file is generated by a script.  Do not edit directly.  Edit the
// range.template.cpp file to make changes.

#include "./range1d.h"
#include "./range1f.h"

#include "./math.h"
#include "./ostreamHelpers.h"
#include <pxr/tf/type.h>

#include <cfloat>
#include <ostream>

namespace pxr {

TF_REGISTRY_FUNCTION(pxr::TfType) {
    TfType::Define<GfRange1d>();
}

std::ostream& 
operator<<(std::ostream &out, GfRange1d const &r)
{
    return out << '[' 
               << Gf_OstreamHelperP(r.GetMin()) << "..." 
               << Gf_OstreamHelperP(r.GetMax())
               << ']';
}

GfRange1d::GfRange1d(class GfRange1f const &other)
    : _min( (other.GetMin()))
    , _max( (other.GetMax()))
{
}

double
GfRange1d::GetDistanceSquared(double p) const
{
    double dist = 0.0;

    if (p < _min) {
	// p is left of box
	dist += GfSqr(_min - p);
    }
    else if (p > _max) {
	// p is right of box
	dist += GfSqr(p - _max);
    }

    return dist;
}

}  // namespace pxr
