# ====================================================================================
# Setup Project

# ====================================================================================
# Actions

.PHONY: py.update
py.update: #! Install the pip dependency.
	python3 -m pip install --user --disable-pip-version-check -r $(ROOT)/requirements.txt
	python3 -m pip install --user --disable-pip-version-check -r $(BUILD_TOOLS_FOLDER)/$(TECHNOLOGY)/requirements.txt

.PHONY: py.init
py.init: #! Init the project.
	mkdir "$(PROJECT_FOLDER)" || true
	touch "$(ROOT)/requirements.txt"
	mkdir "$(ROOT)/tests" || true
	cp $(BUILD_TOOLS_FOLDER)/$(TECHNOLOGY)/test/__init__.py $(ROOT)/tests/__init__.py
	$(MAKE) py.update
	 if [ ! -e $(MODULE_NAME) ] ; \
	then \
		  mkdir "$(PROJECT_FOLDER)/$(MODULE_NAME)" || true; \
		  touch "$(PROJECT_FOLDER)/$(MODULE_NAME)/__init__.py"; \
		  touch "$(ROOT)/pyproject.toml"; \
	else \
		touch "$(PROJECT_FOLDER)/main.py"; \
		touch "$(PROJECT_FOLDER)/__init__.py"; \
		cp $(BUILD_TOOLS_FOLDER)/$(TECHNOLOGY)/Dockerfile $(ROOT)/Dockerfile; \
	fi;


.PHONY: py.build
py.build: #! Build a python package
	python3 -m build

.PHONY: py.run
py.run: #! Run the application.
	python3 $(PROJECT_FOLDER)/main.py

.PHONY: py.test
py.test: #! Run all the unit test on the codebase.
	python3 -m unittest discover

.PHONY: py.coverage
py.coverage: #! Run the unit test and generate the coverage report
	coverage run --source=$(PROJECT_FOLDER) -m unittest discover
	coverage html
	coverage report -m

.PHONY: py.docs
py.docs: #! Run pdoc to auto-generates API documentation
	pdoc --output-dir $(DOC_FOLDER) $(PROJECT_FOLDER)
	mv $(DOC_FOLDER)/$(PROJECT_FOLDER)/* $(DOC_FOLDER)
	rmdir $(DOC_FOLDER)/$(PROJECT_FOLDER)

.PHONY: .py.clean
py.clean: #! Remove autogenerated file
	rm .coverage || true
	rm -r htmlcov/ || true
	rm -r .mypy_cache || true
	rm -rf build dist *.egg-info src/*.egg-info || true


.PHONY: py.fmt
py.fmt: #! Run Black and isort as Python standard formatter on the project folder.
	no_implicit_optional $(ROOT)
	black $(ROOT)
	isort $(ROOT) --profile black
