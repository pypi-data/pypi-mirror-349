# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class GuidelineMatch(UniversalBaseModel):
    """
    A matched guideline.
    """

    guideline_id: str = pydantic.Field()
    """
    Unique identifier for the guideline
    """

    condition: str = pydantic.Field()
    """
    The condition for the guideline
    """

    action: str = pydantic.Field()
    """
    The action for the guideline
    """

    score: int = pydantic.Field()
    """
    The score for the guideline
    """

    rationale: str = pydantic.Field()
    """
    The rationale for the guideline
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
