# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UsageInfo(UniversalBaseModel):
    """
    Token usage information.
    """

    input_tokens: int = pydantic.Field()
    """
    Amount of token received from user over the session
    """

    output_tokens: int = pydantic.Field()
    """
    Amount of token sent to user over the session
    """

    extra: typing.Optional[typing.Dict[str, typing.Optional[int]]] = pydantic.Field(
        default=None
    )
    """
    Extra data associated with the usage information
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
