# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .guideline_matching_inspection import GuidelineMatchingInspection
import typing
from .generation_info import GenerationInfo
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PreparationIterationGenerations(UniversalBaseModel):
    """
    Generation information for a preparation iteration.
    """

    guideline_matching: GuidelineMatchingInspection
    tool_calls: typing.List[GenerationInfo] = pydantic.Field()
    """
    A list of `GenerationInfoDTO` describing the executed tool calls
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
